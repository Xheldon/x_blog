<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xheldon Blog</title>
    <description>The Answer to Life, the Universe and Everything is...</description>
    <link>https://www.xheldon.com/</link>
    <atom:link href="https://www.xheldon.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 08 Oct 2022 19:05:57 +0800</pubDate>
    <lastBuildDate>Sat, 08 Oct 2022 19:05:57 +0800</lastBuildDate>
    <generator>Jekyll v4.2.1</generator>
    
      <item>
        <title>关于 Clash 使用的一点记录</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;⚠️ 本文涉及的节点、机场订阅服务，都是子虚乌有个人杜撰的，实际并不存在，此处只是一个 Demo 示例，请大家知晓。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;Clash 是一款好用的富强工具，它只是一个内核叫 Clash core，本质是一款命令行工具（谁又说任何软件本质不是命令行呢？），大神们据此开发了各式各样的 GUI 界面以方便设置和使用。我曾经使用过 Mac 上的 ClashX 和 Clash For Windows For Mac（你没有看错），也即通常所说的 CFW。因为方便开发的原因，它使用的是 Electron 的架构来实现的 GUI，所以它可以打包成 Mac 版和 Window 版本，非常好用。&lt;/p&gt;

&lt;p&gt;我目前使用的是 Clash For Windows 这个。&lt;/p&gt;

&lt;p caption=&quot;Clash for Windows For Mac 界面&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/958140EE-7CCB-4D5B-8CAD-1B6358AAAB57_2.png&quot; alt=&quot;Clash for Windows For Mac 界面&quot; title=&quot;Clash for Windows For Mac 界面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当然，国际惯例，本篇文章除了简单介绍常用设置的用处外，还简单介绍了下如何更新订阅链接和切换节点，防止某些人一有问题就来责怪我：「为什么 behance 又打不开了啊！」「为什么翻个墙这么麻烦啊！」「你花那么多钱买梯子怎么还这么难用啊！」的时候，我把这篇文章摔给她，然后继续打游戏。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;⚠️ 名词解释：富强 = 翻q&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;一些设置的用处&quot;&gt;一些设置的用处&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;这些说明基本都在它的使用说明里面，我这里结合自己的真实使用场景介绍一下。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;geoip-database&quot;&gt;GeoIP Database&lt;/h3&gt;

&lt;p&gt;它的功能是可以基于 IP 的地理位置来判断是否需要走代理，原理是维护了一个数据库到本地，然后查询即可。因为 IP 地址是不断更新的，所以这个数据库也是需要偶尔更新一次的（不频繁）。&lt;/p&gt;

&lt;p caption=&quot;GeoIP 数据库下载&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/F70734A2-11A9-43F7-BA74-BE599A4B4632_2.png&quot; alt=&quot;GeoIP 数据库下载&quot; title=&quot;GeoIP 数据库下载&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;tun-mode&quot;&gt;TUN Mode&lt;/h3&gt;

&lt;p&gt;有些软件不遵循系统代理，如终端、iTerm、Infuse。TUN 模式就是为了解决这个问题的，它对于不遵循系统代理的软件，它可以接管其流量并交由 CFW 处理。&lt;/p&gt;

&lt;p&gt;我个人的实际使用是为了看 Infuse 中的 Emby。因为我的 Emby 服务是需要机场特定节点的，然而 Infuse （似乎）内置了自己的请求工具，并未走系统代理，因此即使将 CFW 设置为系统代理，同时指定了正确的节点，却还是无法打开机场提供的 Emby 服务，此时只需要打开 TUN 模式即可解决。&lt;/p&gt;

&lt;p&gt;还一个使用场景是，打开了 TUN 模式后，iTerm 终端的命令也会走代理流量了；如果没有打开 TUN 模式的话，git clone 等是不会走代理流量的，我之前的办法是是手动创建一个 alias 命令来指定终端代理，需要的时候按 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ppp&lt;/code&gt; 回车，不需要的时候按 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sss&lt;/code&gt; 回车（我的代理端口是 7890）：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Bash&quot;&gt;alias ppp=&quot;export https_proxy=http://127.0.0.1:7890;export http_proxy=http://127.0.0.1:7890;export all_proxy=socks5://127.0.0.1:7890&quot;
alias sss=&quot;unset all_proxy;unset https_proxy;unset http_proxy&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启用 TUN 模式需要 Service Mode，具体方式可以见文档：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.cfw.lbyczf.com/contents/tun.html#macos&quot; target=&quot;_blank&quot;&gt;TUN 模式 | Clash for Windows&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;不过我个人遇到的一个情况是，CFW 提示我 Service Mode 已经打开，但是那个小地球图标是红色的。于是我先关闭了一下 Service Mode，CFW 自动重启后显示 Service Mode 未激活，同时只有两个按钮可以点 install 和 uninstall，于是我就点那个 install，重启后还是红色的小地球图标，于是我先 uninstall 后再 install，CFW 自动重启后就变成绿色小地球了。说这一点是说，可能 GUI 有 bug，遇到问题最好多尝试几次不同的方式来解决。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;💡 记得关闭软件的安全 DNS 功能，才能正常使用 TUN 模式。如果你发现 TUN 模式下软件不好使，可能跟该软件的这个功能原因。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p caption=&quot;Chrome 关闭安全 DNS&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/F81A0395-B1AE-40AC-B414-15EB8E5714DE_2.png&quot; alt=&quot;Chrome 关闭安全 DNS&quot; title=&quot;Chrome 关闭安全 DNS&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;parser&quot;&gt;Parser&lt;/h3&gt;

&lt;p&gt;也即「配置文件预处理」。&lt;/p&gt;

&lt;p&gt;有些时候你想在 CFW 的分流规则生效之前，设置自己的规则。比如大多数人用的都是机场订阅链接，机场的订阅链接都自带了自己的分流规则，类似全球直连、全球拦截、漏网之鱼这种：&lt;/p&gt;

&lt;p caption=&quot;机场的内置分流规则&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/A4BA694C-B4B1-4964-9D6C-EFB8E3C12184_2.png&quot; alt=&quot;机场的内置分流规则&quot; title=&quot;机场的内置分流规则&quot; /&gt;&lt;/p&gt;

&lt;p&gt;而你想有自己自定义的规则，如某个特定链接走代理。如果你直接修改订阅链接下载的配置文件，那么下次订阅链接更新的时候，&lt;strong&gt;你的修改就会被覆盖&lt;/strong&gt;。于是 Parser 应运而生。&lt;/p&gt;

&lt;p&gt;简单来说，Parser 会在机场订阅规则应用前，首先应用你配置的规则，并将你的规则合并到最终生效的规则中。比如我经常访问的一个网站，它有两套域名，如果访客是大陆用户，则直接返回大陆内容；如果是海外 ip 访问该网站，该网站会跳转到海外地址上。&lt;/p&gt;

&lt;p&gt;而尴尬的是，一旦开启了 TUN  模式，该网站就会判定你是海外用户，就无法以大陆用户的身份来访问该网站了（账号不互通）。于是我就可以使用 Parser 功能，将该网站的大陆版地址加入然后设置直连即可：&lt;/p&gt;

&lt;p caption=&quot;只支持针对特定节点列表配置文件进行预处理&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/8B575173-C01D-4E41-8213-1540979CC691_2.png&quot; alt=&quot;只支持针对特定节点列表配置文件进行预处理&quot; title=&quot;只支持针对特定节点列表配置文件进行预处理&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是，比较尴尬的是，它只针对某个特定的 yaml（也即下面说的订阅节点列表）生效，因此如果你有多个订阅节点列表（机场），那就需要写多个 url。&lt;/p&gt;

&lt;p&gt;更新：好消息是 CFW 支持一个规则匹配多个订阅节点列表了，使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reg&lt;/code&gt; 字段正则匹配即可，如下我使用的是匹配全部配置文件：&lt;/p&gt;

&lt;p caption=&quot;reg 匹配多个 yaml 配置文件&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/01CDE02A-C3F4-48D1-B4D0-53E6A7C57D84_2.png&quot; alt=&quot;reg 匹配多个 yaml 配置文件&quot; title=&quot;reg 匹配多个 yaml 配置文件&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;点击查看配置文件的Parser&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/71687212-4376-4A13-B7C6-304066D33D6F_2.png&quot; alt=&quot;点击查看配置文件的Parser&quot; title=&quot;点击查看配置文件的Parser&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击订阅节点列表，查看该配置对应的 Parser。&lt;/p&gt;

&lt;p caption=&quot;该 Parser 能匹配上配置文件&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/499B32EF-5C31-4E35-A0D4-B61198B8578C_2.png&quot; alt=&quot;该 Parser 能匹配上配置文件&quot; title=&quot;该 Parser 能匹配上配置文件&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意：订阅转换服务可能使 Parser 失效。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;diff&quot;&gt;Diff&lt;/h3&gt;

&lt;p&gt;该功能作用给上面的 Parser 类似，但它会作用于 Parser 之后生效。原理是先手动生成一个文件（类似于 git 的 base 版本），该文件可以是你基于当前订阅配置文件修改后的文件。然后每当订阅配置文件更新的时候就会将新的与旧的 diff 一次，如果发现有问题就需要手动解决一次冲突。&lt;/p&gt;

&lt;p&gt;该功能目的也是为了保证每次更新不会覆盖你对当前配置文件的修改。&lt;/p&gt;

&lt;h3 id=&quot;mixin&quot;&gt;Mixin&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;⚠️ &lt;strong&gt;注意：此功能只适合注入「&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;功能属性」&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;，同时 mixin 中的规则会覆盖机场订阅列表中的其他规则！因此，你只应该在 mixin 中设置注入 dns 等的信息，而不应该设置 rules 等的信息，因为其会使机场订阅的节点无效。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p caption=&quot;Mixin 设置&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/5BD8837D-D779-462F-8C7A-4E4AEC024B8B_2.png&quot; alt=&quot;Mixin 设置&quot; title=&quot;Mixin 设置&quot; /&gt;&lt;/p&gt;

&lt;p&gt;还有一个设置入口在 Setting 里面，这里可以选择 JavaScript 格式的 Mixin 设置，具体可以参看文档：&lt;/p&gt;

&lt;p caption=&quot;Mixin 总设置&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/D1C4A8E9-A706-4CF1-A19F-FBD2DD439A34_2.png&quot; alt=&quot;Mixin 总设置&quot; title=&quot;Mixin 总设置&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;system-proxy&quot;&gt;System Proxy&lt;/h3&gt;

&lt;p&gt;顾名思义，就是将 Clash 设置为系统代理。如果关闭的话，有些依赖系统代理的软件，就不能富强了，比如 Safari。因此如果你想让你的 Safari 富强，务必打开 System Proxy。&lt;/p&gt;

&lt;h2 id=&quot;无法正常富强时排查方式&quot;&gt;无法正常富强时排查方式&lt;/h2&gt;

&lt;p&gt;当访问需要富强的网站确发现无法富强的时候，可以按下面几点简单排查一下：&lt;/p&gt;

&lt;h3 id=&quot;第一步检查-proxies&quot;&gt;第一步：检查 Proxies&lt;/h3&gt;

&lt;p&gt;点击菜单栏中的小猫咪&lt;/p&gt;

&lt;p caption=&quot;小猫咪被点击啦&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/FB1C6B63-F79E-424B-87E7-E3909A39697E_2.png&quot; alt=&quot;小猫咪被点击啦&quot; title=&quot;小猫咪被点击啦&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在打开的界面中点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Proxies&lt;/code&gt; tab 栏，然后点击节点选择：&lt;/p&gt;

&lt;p caption=&quot;点击节点选择会展开节点&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/3814EF32-EA61-4D8E-BB07-2414E4CF55AD_2.png&quot; alt=&quot;点击节点选择会展开节点&quot; title=&quot;点击节点选择会展开节点&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;💡 自动选择：CFW 会自动选择可用节点&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;此时注意查看节点选择后面的文字是不是自动选择（默认应该是的，你不应该动这个地方），确保是自动选择，然后点击测速查看当前自动选择节点的速度：&lt;/p&gt;

&lt;p caption=&quot;测速结果在右侧&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/F9BC2145-EE96-43CD-BABF-EE31506E35AE_2.png&quot; alt=&quot;测速结果在右侧&quot; title=&quot;测速结果在右侧&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里如果节点不可用的话，会显示是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Timeout&lt;/code&gt; 超时，如果延迟过高如 1000+ 会以红色数字显示，会表示富强的网速慢。&lt;/p&gt;

&lt;h3 id=&quot;第二步检查-profiles&quot;&gt;第二步：检查 Profiles&lt;/h3&gt;

&lt;p&gt;一般情况下，你的 Profiles 都应该有多个，诸如这样的：&lt;/p&gt;

&lt;p caption=&quot;在多个节点列表中切换&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/0B0E0986-FEC8-4233-B5AB-8FB688E90654_2.png&quot; alt=&quot;在多个节点列表中切换&quot; title=&quot;在多个节点列表中切换&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果在第一步发现节点测速显示都是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Timeout&lt;/code&gt; ，那么可以考虑更换节点列表，上图中点击一个新的 block，如果其左侧变绿，就表示切换为当前 block 的节点列表了。然后此时再重新执行第一步检查节点的速度是否正常即可。&lt;/p&gt;

&lt;p&gt;另外如果上图中的节点列表很久没更新（括号中显示更新时间），那么点击上面的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update All&lt;/code&gt; 尝试更新。此时可能更新失败，可以换其他 block 点击后，再次点 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update All&lt;/code&gt; 尝试更新即可：&lt;/p&gt;

&lt;p caption=&quot;更新节点列表&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/22A4E748-9C2C-4DC2-8641-EEC3BD0D6F7A_2.png&quot; alt=&quot;更新节点列表&quot; title=&quot;更新节点列表&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意，不要在多个节点列表之间切换过快，可能会导致错误，切换一个后，等个 3~4 秒再切换其他的（如果必要的话）。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;第三步断开全部链接&quot;&gt;第三步：断开全部链接&lt;/h3&gt;

&lt;p&gt;如果发现上面两步执行过后，都没问题，但是就是无法打开页面，那么可能是因为此时浏览器还保持着之前的连接未断开，故而没有重新通过代理监理链接。此时只需要在 CFW 的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Connections&lt;/code&gt; tab 中，点击断开全部链接，然后刷新你打不开的页面即可：&lt;/p&gt;

&lt;p caption=&quot;断开全部连接&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/FC7E6C7A-35B6-4004-92C6-E9ABE547CF7A_2.png&quot; alt=&quot;断开全部连接&quot; title=&quot;断开全部连接&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;添加新的机场订阅&quot;&gt;添加新的机场订阅&lt;/h2&gt;

&lt;p&gt;新的机场订阅即上面说的「节点列表」。&lt;/p&gt;

&lt;p&gt;在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Profiles&lt;/code&gt; tab 中，将你拿到的链接粘贴到当前唯一的输入框，然后点 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Download&lt;/code&gt; 即可，如果下载成功会有提示：&lt;/p&gt;

&lt;p caption=&quot;添加新的节点列表&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/3F3F03C3-CE8A-4D96-9EA8-9237D4C55A35_2.png&quot; alt=&quot;添加新的节点列表&quot; title=&quot;添加新的节点列表&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;其他&quot;&gt;其他&lt;/h2&gt;

&lt;h3 id=&quot;富强模式&quot;&gt;富强模式&lt;/h3&gt;

&lt;p&gt;Clash 有不同的富强模式，如全局，即所有网络链接都富强；有 Rule，即按照你定的规则，不同的网络链接有的富强有的直连；有 Direct 表示全部网络链接都直接连接，效果等同于没有开 Clash 富强；有 Script，可以写一个 JavaScript脚本，让自定义脚本判断哪些链接走富强，哪些直连。这些配置可以在这里切换：&lt;/p&gt;

&lt;p caption=&quot;切换富强方式&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/DC0BF45B-91D3-45DF-B230-254A2648EDD6_2.png&quot; alt=&quot;切换富强方式&quot; title=&quot;切换富强方式&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;代理局域网的其他设备&quot;&gt;代理局域网的其他设备&lt;/h3&gt;

&lt;p&gt;Clash 可以代理当前局域网同一网段的其他设备的网络链接，让无法富强的其他设备也能富强，最典型的用法就是代理 Apple TV 的。因为 Apple TV 系统没有开放相关代理接口，因此其不像手机一样可以直接安装富强软件进行富强，因此要么借助路由器富强，要么就是将其代理服务器设置为 Clash 所在的设备，然后在 Clash 中打开 Allow LAN 即可：&lt;/p&gt;

&lt;p caption=&quot;允许本地局域网连接&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/C48B8690-F44B-4465-9BF7-8A2F4960F904_2.png&quot; alt=&quot;允许本地局域网连接&quot; title=&quot;允许本地局域网连接&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;什么是机场订阅链接&quot;&gt;什么是机场订阅链接？&lt;/h3&gt;

&lt;p&gt;机场订阅链接就是机场给你一个链接，然后 Clash 会解析这个链接，该链接会让 Clash 下载一个 yaml 格式的配置文件，来指示 Clash 如何功能。&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Oct 2022 18:52:22 +0800</pubDate>
        <link>https://www.xheldon.com/tech/the-using-of-clash-for-windows.html</link>
        <guid isPermaLink="true">https://www.xheldon.com/tech/the-using-of-clash-for-windows.html</guid>
        
        <category>技术</category>
        
        <category>富强</category>
        
        <category>Clash</category>
        
        <category>教程</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>2022 我的家庭网络拓扑结构</title>
        <description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;在预算有限的情况下，尽可能满足自己的需求是折腾的乐趣之一；换句话说，有钱当然可以直接买最好的，性能过剩不要紧，最重要的是要能覆盖目前用不到但将来可能用到的一些使用场景。&lt;/p&gt;

&lt;p&gt;这里简单分享下本人在折腾网络过程中的一些记录和心得，当然主要还是为了在媳妇儿发现我花了钱但是家里的网并没有很好用的时候，我就把这篇文章甩给她，让她自己看钱花到哪儿而写的。&lt;/p&gt;

&lt;h2 id=&quot;网络拓tuo扑pu图&quot;&gt;网络拓(tuo)扑(pu)图&lt;/h2&gt;

&lt;p&gt;废话不说，直接上图：&lt;/p&gt;

&lt;p caption=&quot;家庭网络拓扑图&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/7FB3F86F-60A4-4E21-BFFC-E399977692A2_2.png&quot; alt=&quot;家庭网络拓扑图&quot; title=&quot;家庭网络拓扑图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我的需求是：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;有网口或对网络要求高的，尽量连有线。如 PS5、Switch、Mac Studio 等，毕竟有线更稳定和快速。无线再快、5G 再快，空间传输的损耗也比有线大得多。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;已连接路由器的设备不要再次连接，如各种智障家居、电视手机等，因为太麻烦了（十几个设备一个一个输入密码要死了）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;主机如 Switch、PS5 等，需要使用 UU 加速器联网，且这些主机设备没有翻墙需求。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;智能设备如手机、iPad、电脑自带翻墙软件，无需翻墙环境。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Apple TV 也没有看 NetFlix、YouTube 的需求，因此也无需翻墙环境，只需要访问阿里云盘服务和外接硬盘资源即可。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;因为有光猫和路由的存在，因此有两个网段，光猫是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.1.x&lt;/code&gt; ，而路由器是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.5.x&lt;/code&gt; ，两个网段设备不互通。&lt;/p&gt;

&lt;p&gt;下面按上图的设备顺序说一下细节。&lt;/p&gt;

&lt;h2 id=&quot;网络连接&quot;&gt;网络连接&lt;/h2&gt;

&lt;h3 id=&quot;互联网--光猫&quot;&gt;互联网 → 光猫&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;花费：149元/月（宽带费用）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;联通融合宽带 500M 光纤入户，宽带和手机号绑定，融合宽带的意思即手机不停机宽带就一直用，只是需要每年存 1000 块，然后按月返还。另外还送了一条 500M 的宽带让我卖给同事回回血了。办宽带的时候还送了个 WiFi 6 的 中兴路由器，网上查了查 200 块左右，还算稳定，所以一直用着。&lt;/p&gt;

&lt;h3 id=&quot;光猫--路由器&quot;&gt;光猫 → 路由器&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;花费：0&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;路由器就是上面说的，办宽带送的。网上很多人说不建议使用光猫拨号，让用路由器拨号，这样可以省下来一个网段，而且光猫的性能显然没有路由器强。不过这些场景都是需要万兆宽带的大佬才搞的，我是觉得没必要，而且多一个网段刚好可以把一些需要直连的智障设备隔离开，索性就没搞了。更何况送的路由器也没有很好。&lt;/p&gt;

&lt;h2 id=&quot;光猫--无线设备&quot;&gt;光猫 → 无线设备&lt;/h2&gt;

&lt;p&gt;有些智障硬件，走复杂网络的时候会出现无法连接的情况，如 360智障看家相机，因此这里我没有关闭光猫的无线功能。光猫的无线也可以在网络出问题的时候作为一个检测手段，来看看是路由器的问题还是光猫的问题。&lt;/p&gt;

&lt;h2 id=&quot;路由器--多个设备&quot;&gt;路由器 → 多个设备&lt;/h2&gt;

&lt;p&gt;路由器只有四个网口，我曾经在京东搜过目前流行的路由器，发现都是最多只有四个网口。因此，路由器除了连接光猫、连接 R4S，就只剩下两个网口供设备连有线了，我选择把这两个口给 Mac Studio 和 PS 5。&lt;/p&gt;

&lt;h3 id=&quot;路由器--r4s&quot;&gt;路由器 → R4S&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;花费：620元（满血R4S配置）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;R4S 使用旁路由的方式连接，这种非侵入式的接入方式比较符合我的需求。旁路由也即将 R4S 当成一个路由器下的设备，需要使用 R4S 中服务的设备如主机加速器服务，就把主机网络设置中的网关和 DNS 指向与它同网段的 R4S 的地址即可。&lt;/p&gt;

&lt;h3 id=&quot;路由器--ps5mac-studio&quot;&gt;路由器 → PS5/Mac Studio&lt;/h3&gt;

&lt;p&gt;实测 PS5 连接有线比无线下载游戏快的多的多。而我的 Mac Studio，这么强的配置不得配个有线的网？&lt;/p&gt;

&lt;h3 id=&quot;路由器--无线设备&quot;&gt;路由器 → 无线设备&lt;/h3&gt;

&lt;p&gt;剩下的就是一些无线设备，如手机、Pad、Apple TV、其他电脑、电视了，直接连 WiFi 即可。&lt;/p&gt;

&lt;h2 id=&quot;细节说明&quot;&gt;细节说明&lt;/h2&gt;

&lt;p&gt;这里的细节主要是 R4S 的，因为之前使用旁路由的时候需要各种设置比较费劲，于是这里记录一下。&lt;/p&gt;

&lt;h3 id=&quot;旁路由的设置&quot;&gt;旁路由的设置&lt;/h3&gt;

&lt;h3 id=&quot;r4s-wan-口变-lan-口&quot;&gt;R4S Wan 口变 Lan 口&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;花费：79元（USB 转千兆网口线）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;因为 R4S 自带了两个网口，且作为旁路由使用，因此就浪费了一个 Wan 口，又得知其实它的 Wan 口和 Lan 口都是通用的，于是就简单设置了一下，将 Wan 口变 Lan 口了。关于如何将 R4S 作为旁路由的设置，见下面这个视频，讲解的比较清楚，按照视频一步一步设置即可：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=w7rwNF2Q3lM&amp;amp;t=399s&quot; target=&quot;_blank&quot;&gt;软路由做旁路由三步搞定！openwrt软路由 R2S R4S openwrt软路由科学上网设置&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;而 Wan 口变 Lan 口更简单，在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;网络-接口&lt;/code&gt; 中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;接口总览&lt;/code&gt; 中，将 WAN 口删除，然后在 LAN 口中的物理设置中，勾选上 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;桥接接口&lt;/code&gt;，再将下面的两个物理接口 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eth0&lt;/code&gt; （原 wan 物理接口）和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eth1&lt;/code&gt; （现有的 lan 物理接口）都勾选上，保存并应用即可。&lt;/p&gt;

&lt;p caption=&quot;删除WAN口接口&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/99893BE3-9853-4B8D-ACA6-A8F49ABD1040_2.png&quot; alt=&quot;删除WAN口接口&quot; title=&quot;删除WAN口接口&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;物理接口桥接&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/EDACBD7C-2FA3-4713-9090-DAEEBEA6E8E8_2.png&quot; alt=&quot;物理接口桥接&quot; title=&quot;物理接口桥接&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此就大功告成了。我将 Switch 连接了这个 Lan 口，但是因为 Switch 并没有网口，因此使用的是 USB 转千兆网口，京东买的：&lt;/p&gt;

&lt;p caption=&quot;绿联USB转网口线&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/FE060576-56CF-45CB-8D48-73B03A392CAF_2.png&quot; alt=&quot;绿联USB转网口线&quot; title=&quot;绿联USB转网口线&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://item.jd.com/100023032574.html&quot; target=&quot;_blank&quot;&gt;【绿联50922】绿联 USB3.0千兆有线网卡转RJ45网线接口转换头 适用苹果华为笔记本任天堂Switch外置网口扩展坞分线器转接器【行情 报价 价格 评测】-京东&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;r4s-装阿里云盘-webdav&quot;&gt;R4S 装阿里云盘 WebDav&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;花费：98元/年（阿里云盘服务）+ 9.9 美元/年 （Infuse 7 订阅）费 + 1399 元（Apple TV）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;不赘述，详见：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.xheldon.com/life/the-way-to-watching-tv.html#%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98&quot; target=&quot;_blank&quot;&gt;我的家庭观影之路 - Xheldon Blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;（如果访问速度慢，中文博客地址是上述域名 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.com&lt;/code&gt; 改成 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.cn&lt;/code&gt; 即可。）&lt;/p&gt;

&lt;h3 id=&quot;r4s装-uu-路由器插件&quot;&gt;R4S装 UU 路由器插件&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;花费：30元/月（UU 加速器费用）+ 599港元/年（PS 高级会员） + 30.6元/年（任天堂会员）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;买 R4S 的时候内置了该插件，如果需要可以自己装。但神奇的是我曾经因为执念而觉得官方的安装会更好，于是就把 R4S 内置的 UU 加速器插件删了，用官方的方式安装（官方安装方式不带 luci 界面）：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://uu.163.com/router/direction.html&quot; target=&quot;_blank&quot;&gt;网易UU加速器——玩出超快感，全球加速72小时免费体验&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;但是加速效果很差（也可能是心理作用，毕竟我没有专业的测速和控制变量对比，只是感觉），于是怒重置 R4S 系统，重新用回了预装的带界面的 UU 加速器路由插件，感觉还不错。&lt;/p&gt;

&lt;p caption=&quot;UU加速器路由插件&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/8C970209-06FC-4D2B-BAAC-9FA0A049C41B_2.png&quot; alt=&quot;UU加速器路由插件&quot; title=&quot;UU加速器路由插件&quot; /&gt;&lt;/p&gt;

&lt;p&gt;不过说是带界面的，其实也就一个开关🥲。&lt;/p&gt;

&lt;p&gt;看下 Switch 的加速效果：&lt;/p&gt;

&lt;p caption=&quot;使用UU加速器前&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/B0B44A63-E971-4E65-A5BD-05C5F32C7168_2.jpeg&quot; alt=&quot;使用UU加速器前&quot; title=&quot;使用UU加速器前&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;使用UU加速器后&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/402B4436-D2F3-4353-BF06-A9F6D5225F9F_2.jpeg&quot; alt=&quot;使用UU加速器后&quot; title=&quot;使用UU加速器后&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以看到加速的效果还是很明显的，玩喷射战士3和马里奥卡丁车8 一下午，只发生了 2 次连接失败的情况（喷射战士基本几分钟一局，打一下午有几十局）。&lt;/p&gt;

&lt;h3 id=&quot;r4s装-qbittorrent&quot;&gt;R4S装 qBittorrent&lt;/h3&gt;

&lt;p&gt;不赘述，详见：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.xheldon.com/life/the-way-to-watching-tv.html#qbittorrent&quot; target=&quot;_blank&quot;&gt;我的家庭观影之路 - Xheldon Blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;（如果访问速度慢，中文博客地址是上述域名 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.com&lt;/code&gt; 改成 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.cn&lt;/code&gt; 即可。）&lt;/p&gt;

&lt;h2 id=&quot;翻墙服务&quot;&gt;翻墙服务&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;花费：241元/年（忍者云） + 137元/年（AgentNEO）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;之前在 R4S 上用过翻墙服务，诚然可以让 Apple TV、PS5 等设备直接访问 YouTube，或者可以直接将主机相册内容分享到 Twitter，但是这些功能一个是并不是必须的，一个是在 R4S 上使用翻墙插件会与 UU 游戏加速器的 VPN 服务冲突（也许可以共存，但是我没折腾了），于是我就只保留了加速器功能，毕竟 YouTube、Netflix 等服务本来看的就少，而且也可以在电脑端看。&lt;/p&gt;

&lt;h2 id=&quot;其他&quot;&gt;其他&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;其实更多的是建议有线连接在路由器里面设置一下 IP 和 Mac 地址绑定，这样的话无论是加速器还是各种服务都是有好处的，防止断网等情况 IP 重新获得的时候有变更导致某些服务失败的情况，我懒得搞了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;想让设备尽可能使用有线连接，可以将有线接光猫的 Lan 口。但是这有两个问题：&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;我家的垃圾联通光猫型号是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;烽火 HG2543c1&lt;/code&gt; ，只有一个千兆的口，接路由器了，因此即使用光猫的百兆有线，还不如路由器的千兆 5G WiFi 快。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;光猫和路由器是两个网段（光猫的是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.1.1&lt;/code&gt; ，路由器的是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.5.1&lt;/code&gt; ）因此需要在光猫处设置一个静态路由表，才能将接在光猫 Lan 口的设备访问其下级路由器上的设备（如软路由），但还是因为联通光猫的原因，这款光猫并没有静态路由表的设置，捣鼓了半天尝试进入光猫的超级管理员界面（地址是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://192.168.1.1/CU.html&lt;/code&gt; ，显示的是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;维修管理员账号&lt;/code&gt; ，无果。打电话问联通的师傅得知：&lt;/p&gt;

        &lt;ol&gt;
          &lt;li&gt;
            &lt;p&gt;他们都用维修人员专用的 app 进后台，密码都是动态下发的，他们也不知道是否有维修管理员账号/超级账号，或许有，但是厂家并提供给他们。&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;如果我想做路由拨号、家里搞个服务器之类的功能，可以找他上门弄。&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;联通的光猫都没有静态路由表的功能，换个光猫也没用，想多接有线只能用交换机。&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;维护管理员账户&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/81680F6F-4272-41F3-9F34-0D397717D5DF_2.png&quot; alt=&quot;维护管理员账户&quot; title=&quot;维护管理员账户&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;后记&quot;&gt;后记&lt;/h2&gt;

&lt;p&gt;我的家庭网络比较简单，没有复杂的 NAS、路由拨号、内网穿透、家庭影音的复杂功能，有的只是简单：理解简单、操作简单、排查简单，最重要的，让家人使用起来简单。&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Sep 2022 23:56:02 +0800</pubDate>
        <link>https://www.xheldon.com/tech/my-home-network-2022.html</link>
        <guid isPermaLink="true">https://www.xheldon.com/tech/my-home-network-2022.html</guid>
        
        <category>技术</category>
        
        <category>网络</category>
        
        <category>拓扑</category>
        
        <category>R4S</category>
        
        <category>软路由</category>
        
        <category>折腾</category>
        
        <category>旁路由</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>「译」官方指南系列：JavaScript 调试指南（一）</title>
        <description>&lt;p&gt;希望通过这篇全面的 Chrome DevTools debugging 功能介绍，能让你的 debugging 过程更上一层楼。&lt;/p&gt;

&lt;p&gt;首先你可能需要先在 &lt;a href=&quot;https://developer.chrome.com/docs/devtools/javascript/&quot;&gt;这里&lt;/a&gt; （英文，待译）学习基本的 debugging 技巧。&lt;/p&gt;

&lt;h2 id=&quot;用断点暂停代码&quot;&gt;用断点暂停代码&lt;/h2&gt;

&lt;p&gt;通过设置一个断点，可以让代码在执行途中暂停。&lt;/p&gt;

&lt;p&gt;查看 &lt;a href=&quot;https://developer.chrome.com/docs/devtools/javascript/breakpoints/&quot;&gt;这里&lt;/a&gt; （英文，待译）来学习如何设置一个断点。&lt;/p&gt;

&lt;h3 id=&quot;在鼠标悬浮的时候查看类函数属性&quot;&gt;在鼠标悬浮的时候查看类/函数属性&lt;/h3&gt;

&lt;p&gt;当代码执行暂停的时候，将鼠标悬浮在一个类或者函数名上的时候可以预览它的属性。&lt;/p&gt;

&lt;p caption=&quot;1&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/EA456FA6-9331-41E3-96DC-3FCCFFA82C2E_2.png&quot; alt=&quot;1&quot; title=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;逐步运行代码&quot;&gt;逐步运行代码&lt;/h2&gt;

&lt;p&gt;你的代码暂停后，你就可以一次只运行一行代码，以搞清楚代码的调用栈以及相关的属性值。&lt;/p&gt;

&lt;h3 id=&quot;跳过step-over当前代码行&quot;&gt;跳过（Step over）当前代码行&lt;/h3&gt;

&lt;p&gt;当你的断点暂停在一个与你当前调查的问题无关的代码行，且该代码行包含一个函数的时候，你可以点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Step Over&lt;/code&gt; 来不进入该函数以继续执行代码。&lt;/p&gt;

&lt;p caption=&quot;step_over&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/63AE5442-D0AD-46C5-8DB0-36452E2842D2_2.png&quot; alt=&quot;step_over&quot; title=&quot;step_over&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图一👆🏻，上图中蓝色方框中 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Step Over&lt;/code&gt; 的含义解释：&lt;/p&gt;

&lt;p&gt;举个例子，假设你正在 debugging 下面的代码：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;updateHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getDay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// A&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;updateName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// D&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// B&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// C&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;此时你的断点停在了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; 的位置。通过点击 &lt;strong&gt;Step over&lt;/strong&gt; ，Devtools 将会执行你「Step over」的位置中的所有代码，在上述示例中「Step over」的是 A 位置的 getName 函数中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;B&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt; 的位置，于是 Devtools 会将代码停在 D 的位置。&lt;/p&gt;

&lt;h3 id=&quot;进入step-into当前代码行&quot;&gt;进入（Step into）当前代码行&lt;/h3&gt;

&lt;p&gt;如果断点停在一个跟你要调查的问题有关系的地方，而且这个地方包含一个函数调用的时候，点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Step into&lt;/code&gt; ，可以更进一步的检查这个函数。&lt;/p&gt;

&lt;p caption=&quot;step_into&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/0B7F9CB7-7EA3-44A2-8808-8E23F9E0D786_2.png&quot; alt=&quot;step_into&quot; title=&quot;step_into&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图二👆🏻，上图中蓝色方框中 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Step into&lt;/code&gt; 的含义解释：&lt;/p&gt;

&lt;p&gt;举个例子，假设你正在 debugging 下面的代码：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;updateHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getDay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// A&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;updateName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// B&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;你的断点正停在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; 的位置，此时点击 &lt;strong&gt;Step into&lt;/strong&gt; ，Devtools 将会执行这行代码，然后停在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;B&lt;/code&gt; 的位置。&lt;/p&gt;

&lt;h3 id=&quot;跳出step-out当前代码行&quot;&gt;跳出（Step out）当前代码行&lt;/h3&gt;

&lt;p&gt;当断点停在一个与你正在调查的问题不相关的函数内部的时候，你可以点击 &lt;strong&gt;Step out&lt;/strong&gt; 来执行该函数中剩余的代码。&lt;/p&gt;

&lt;p caption=&quot;step_out&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/6E97FB74-E73D-4189-9A21-3771A1DF27AF_2.png&quot; alt=&quot;step_out&quot; title=&quot;step_out&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图三👆🏻，上图中蓝色方框中 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Step out&lt;/code&gt; 的含义解释：&lt;/p&gt;

&lt;p&gt;举个例子，假设你正在 debugging 下面的代码：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;updateHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getDay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;updateName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// C&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// A&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// B&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;你的断点正停在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; 的位置，此时点击 &lt;strong&gt;Step out&lt;/strong&gt; ，DevTools 将会把 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getName()&lt;/code&gt; 函数中的剩余代码执行完，也就是 B 位置的代码，然后断点停在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt; 的位置上。&lt;/p&gt;

&lt;h3 id=&quot;继续运行代码到指定行&quot;&gt;继续运行代码到指定行&lt;/h3&gt;

&lt;p&gt;当 debugging 一个很长函数的时候，函数中会有很多与你正在调查的问题不相关的代码。&lt;/p&gt;

&lt;p&gt;你可以选择一步一步的执行这些无关的行，但是这个过程会很枯燥。你也可以选择在一个想断点的代码行处设置一个断点，然后按下 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Resume Script Execution&lt;/code&gt; （恢复脚本执行），不过除此之外，还有一个更快的方式。&lt;/p&gt;

&lt;p&gt;你可以在你想要断点的代码行上右键，然后选择 &lt;strong&gt;Continue to here&lt;/strong&gt; （继续执行到此处）。Devtools 将会恢复断点执行代码直到此处，然后停在这一行。&lt;/p&gt;

&lt;p caption=&quot;continue_to_here&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/01C96466-2B8C-4088-9E66-7408708B0401_2.png&quot; alt=&quot;continue_to_here&quot; title=&quot;continue_to_here&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图四👆🏻，选择 &lt;strong&gt;Continue to here&lt;/strong&gt; 。&lt;/p&gt;

&lt;h3 id=&quot;恢复脚本执行&quot;&gt;恢复脚本执行&lt;/h3&gt;

&lt;p&gt;你可以通过点击 &lt;strong&gt;Resume Script Execution&lt;/strong&gt; 来继续在你断点暂停的位置执行代码。Devtools 会将代码一直执行下去直到遇到下一个断点（如果有）。&lt;/p&gt;

&lt;p caption=&quot;resume_script_execution&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/E67463E2-9D01-48BB-A743-28A189DF68CD_2.png&quot; alt=&quot;resume_script_execution&quot; title=&quot;resume_script_execution&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图五👆🏻，&lt;strong&gt;Resume Script Execution&lt;/strong&gt; ，蓝框处。&lt;/p&gt;

&lt;h4 id=&quot;强制执行&quot;&gt;强制执行&lt;/h4&gt;

&lt;p&gt;可以通过长按 &lt;strong&gt;Resume Script Execution&lt;/strong&gt; ，然后选择 &lt;strong&gt;Force Script Execution&lt;/strong&gt; ，来忽略剩下的所有断点，直接执行全部代码。&lt;/p&gt;

&lt;p caption=&quot;force_script_execution&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/DAB9BD94-70F7-4464-8609-3016E8B40A44_2.png&quot; alt=&quot;force_script_execution&quot; title=&quot;force_script_execution&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图六👆🏻，选择 &lt;strong&gt;Force Script Execution&lt;/strong&gt; 。&lt;/p&gt;

&lt;h3 id=&quot;改变当前线程的上下文&quot;&gt;改变当前线程的上下文&lt;/h3&gt;

&lt;p&gt;当 debugging 设计到 Web Worker 或者 Service Worker 的时候，可以通过点击出现在 &lt;strong&gt;Threads&lt;/strong&gt; 栏中的上下文列表项，来转换上下文。蓝色箭头表示当前选择的上下文。&lt;/p&gt;

&lt;p caption=&quot;change_threads_context&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/1474933D-3F44-4D93-9909-FF4245545704_2.png&quot; alt=&quot;change_threads_context&quot; title=&quot;change_threads_context&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图七👆🏻，&lt;strong&gt;Threads&lt;/strong&gt; （线程）栏，蓝色框的位置。&lt;/p&gt;

&lt;p&gt;举个例子，假设有这么个场景，你的断点同时存在于你的主脚本和你的 service worker 脚本中。你想要查看 service worker 中的本地变量和全局变量，但是 &lt;strong&gt;Source&lt;/strong&gt; 栏当前正显示的是你的主脚本的上下文。此时你就可以通过点击在 &lt;strong&gt;Threads&lt;/strong&gt; 栏中的 service worker 入口来切换上下文以查看你想了解的变量了。&lt;/p&gt;

&lt;h2 id=&quot;查看和编辑局部闭包以及全局作用域中的变量属性&quot;&gt;查看和编辑局部、闭包以及全局作用域中的变量/属性&lt;/h2&gt;

&lt;p&gt;当暂停在某一行的时候，使用 Scope 栏来查看和编辑位于局部、闭包和全局变量。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;双击属性值以修改之。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;非可枚举的属性会以灰色突出显示。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;查看和修改变量&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/40A93D0F-ACA8-4128-A695-E502565253AD_2.png&quot; alt=&quot;查看和修改变量&quot; title=&quot;查看和修改变量&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图八👆🏻，&lt;strong&gt;Scope&lt;/strong&gt; （作用域）栏，蓝色框的位置。&lt;/p&gt;

&lt;h2 id=&quot;查看当前调用栈&quot;&gt;查看当前调用栈&lt;/h2&gt;

&lt;p&gt;当暂停在某一行的时候，使用 &lt;strong&gt;Call Stack&lt;/strong&gt; 栏来查看从代码执行一直到你当前暂停点以来的函数调用栈。&lt;/p&gt;

&lt;p&gt;如果你的代码中有异步代码，可以将 &lt;strong&gt;Async&lt;/strong&gt; 复选框勾选上，来启用异步函数调用栈。&lt;/p&gt;

&lt;p&gt;点击其中的一个条目，来跳转到该条目所表示的函数的调用处。蓝色箭头图标表示当前正在高亮的函数。&lt;/p&gt;

&lt;p caption=&quot;查看函数调用栈&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/1168318B-1CFA-493D-9AE6-2CF79930C58C_2.png&quot; alt=&quot;查看函数调用栈&quot; title=&quot;查看函数调用栈&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图九👆🏻，&lt;strong&gt;Call Stack&lt;/strong&gt; （调用栈）栏，蓝色框的位置。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意：如果代码没有暂停在某一行，那 Call Stack 栏是空的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;重新执行堆栈中的函数&quot;&gt;重新执行堆栈中的函数&lt;/h3&gt;

&lt;p&gt;有时候想观察某一个函数的运行情况，但是又不想重新运行整个 debugging 流程，你可以在断点暂停在这个函数内部的时候重新只单独执行这个函数，换句话说，你可以在调用栈中重新放入该函数的调用上下文。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意：你可以重头执行在 Call Stack （调用栈）中的任何函数，除了 WebAssembly、async、和 generator 函数。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;为了重新执行一个函数：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;使用断点暂停函数，&lt;strong&gt;Call Stack&lt;/strong&gt; 栏会记录函数的调用顺序。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在 &lt;strong&gt;Call Stack&lt;/strong&gt; 栏，右键一个函数，然后在出现的菜单中选择 Restart frame（重头执行函数）。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;重新执行断点所在的函数&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/DFF3FAC8-B00F-415A-A581-50A299F1884D_2.png&quot; alt=&quot;重新执行断点所在的函数&quot; title=&quot;重新执行断点所在的函数&quot; /&gt;&lt;/p&gt;

&lt;p&gt;为了理解 Restart frame 如何执行，我们假设有以下代码：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;debugger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foo&lt;/code&gt; 函数接受 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt; 作为参数，然后通过 log 打印到控制台，然后调用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bar()&lt;/code&gt; 函数。相应的，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bar&lt;/code&gt; 函数会将这个值自增1。&lt;/p&gt;

&lt;p&gt;尝试以下面的方式重头执行这两个函数：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;复制上面的代码到一个 &lt;a href=&quot;https://developer.chrome.com/docs/devtools/javascript/snippets/#createsources&quot;&gt;snippet&lt;/a&gt; （未翻译）中，然后 &lt;a href=&quot;https://developer.chrome.com/docs/devtools/javascript/snippets/#runsources&quot;&gt;运行&lt;/a&gt; （未翻译）它。断点会停在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;debugger&lt;/code&gt; 的所在的 &lt;a href=&quot;https://developer.chrome.com/docs/devtools/javascript/breakpoints/#debugger&quot;&gt;代码行&lt;/a&gt;。&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;⚠️ 注意：当代码执行暂停的时候，不要在控制台执行当前调用栈中的函数，因为这可能会引起意外的错误。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;你会注意到当前的 debugger 会在其所在的函数的函数声明的右侧显示当前值：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value = 1&lt;/code&gt; 。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;注意函数声明处右侧的值&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/9111BA1D-AA80-4C2F-B54E-123FC66A5C17_2.png&quot; alt=&quot;注意函数声明处右侧的值&quot; title=&quot;注意函数声明处右侧的值&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;重头执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bar()&lt;/code&gt; 函数。&lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;重头执行bar&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/036AAE1B-CA41-4627-A9D6-A4F7E6302C0C_2.png&quot; alt=&quot;重头执行bar&quot; title=&quot;重头执行bar&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;按 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;F9&lt;/code&gt; ，然后代码可以经过值自增的那一行，然后再次断到 debugger 处。&lt;/p&gt;

    &lt;p&gt;注意看，值变成了 2： &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value = 2&lt;/code&gt; 。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;重头执行debugger&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/09D36505-821B-4392-8DD3-BDE9D05F0210_2.png&quot; alt=&quot;重头执行debugger&quot; title=&quot;重头执行debugger&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;除此之外，你还可以在 Scope 栏，双击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value&lt;/code&gt; 值来编辑它将其设置成想要的值。&lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;双击编辑值&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/9481CF99-8735-43A4-8A57-D2F953C289BC_2.png&quot; alt=&quot;双击编辑值&quot; title=&quot;双击编辑值&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;尝试重新执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bar()&lt;/code&gt; 函数多次，会发现值会一直增加。&lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;多次重复执行后值会一直增加&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/AEE7EEA3-2150-431B-980C-6FCF03527DC7_2.png&quot; alt=&quot;多次重复执行后值会一直增加&quot; title=&quot;多次重复执行后值会一直增加&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;💡 震惊！为什么 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value&lt;/code&gt; 不会重置成 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt; ？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;函数重头执行的时候不会重置参数。换句话说，重头执行不会恢复该函数被调用时候的初始状态。因此，它只是简单的在调用栈中移动当前调用的指针到函数的开始位置。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;因此，当前的参数值 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value&lt;/code&gt; 会在内存中一直随着相同函数的重复执行而一直存在。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;现在，在 &lt;strong&gt;Call Stack&lt;/strong&gt; 中重头执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foo()&lt;/code&gt; 函数。&lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;重头执行foo函数&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/11D4B549-3006-4564-B92D-4D1727913D74_2.png&quot; alt=&quot;重头执行foo函数&quot; title=&quot;重头执行foo函数&quot; /&gt;&lt;/p&gt;

&lt;p&gt;注意看，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value&lt;/code&gt; 重新变成了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt; 。&lt;/p&gt;

&lt;p caption=&quot;value重新变为0&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/9F706F35-0041-41E3-BB4A-70A5BFFEFE06_2.png&quot; alt=&quot;value重新变为0&quot; title=&quot;value重新变为0&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;💡 再次震惊！为什么 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value&lt;/code&gt; 这次被重置为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt; 了？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;很简单（此处意译了）在 JavaScript 中，参数是按值传递的，因为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value&lt;/code&gt; 是原始值，因此在函数内修改它的值不会影响到函数外它的值。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;复制调用栈执行路径&quot;&gt;复制调用栈执行路径&lt;/h3&gt;

&lt;p&gt;在 &lt;strong&gt;Call Stack&lt;/strong&gt; 栏的任意位置右键，然后选择 &lt;strong&gt;Copy Stack Trace&lt;/strong&gt;（复制栈追踪），你会将当前调用栈复制到粘贴板。&lt;/p&gt;

&lt;p caption=&quot;复制调用栈&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/7EF33B00-5F90-4D0D-8979-B18ED3CD1527_2.png&quot; alt=&quot;复制调用栈&quot; title=&quot;复制调用栈&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图十👆🏻，选择 &lt;strong&gt;Copy Stack Trace&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;复制的内容大致会是这个样子：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-other&quot;&gt;getNumber1 (get-started.js:35)
inputsAreEmpty (get-started.js:22)
onClick (get-started.js:15)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;忽略某个脚本或者满足某种条件的脚本&quot;&gt;忽略某个脚本或者满足某种条件的脚本&lt;/h2&gt;

&lt;p&gt;当 debugging 的时候，忽略某个脚本以跳过它。你通常会在当该脚本的函数比较复杂难懂而且跟你当前 debugging 的内容无关的时候选择忽略之。&lt;/p&gt;

&lt;p&gt;例如，假设你正在 debugging 如下代码：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;prepare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doFancyStuff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// A&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; 是一个你信任的第三方库。如果你十分确定你所调查的问题跟这个第三方库没有关系，那忽略它就是一个明智决定。&lt;/p&gt;

&lt;h3 id=&quot;从-source-编辑器栏中忽略某个脚本&quot;&gt;从 Source 编辑器栏中忽略某个脚本&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;打开文件&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;右键任何位置&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;选择 &lt;strong&gt;Add script to ignore list&lt;/strong&gt;（将脚本添加到忽略列表）。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;忽略脚本&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/39DA9D92-C270-4705-8920-7BC248703936_2.png&quot; alt=&quot;忽略脚本&quot; title=&quot;忽略脚本&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图十一👆🏻，从编辑器栏中忽略一个脚本。&lt;/p&gt;

&lt;h3 id=&quot;从-call-stack-调用栈栏忽略某个脚本&quot;&gt;从 Call Stack （调用栈）栏忽略某个脚本&lt;/h3&gt;

&lt;p&gt;如果想从调用栈中忽略某个脚本，你需要：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在调用栈中的某个函数中右键。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;选择 &lt;strong&gt;Add script to ignore list&lt;/strong&gt;。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;从调用栈中忽略脚本&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/73837AF8-CB34-4B72-AE5C-1B266E15B8EB_2.png&quot; alt=&quot;从调用栈中忽略脚本&quot; title=&quot;从调用栈中忽略脚本&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图十二👆🏻，从 Call Stack（调用栈）中忽略某个脚本。&lt;/p&gt;

&lt;h3 id=&quot;从-settings设置中忽略某个脚本&quot;&gt;从 Settings（设置）中忽略某个脚本&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;译者注：此处的设置为 Devtools 的设置，不是浏览器的设置。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如果想从设置中忽略某一个脚本或者满足某种条件的脚本，你需要：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;打开设置：&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;点击 &lt;strong&gt;Ignore List&lt;/strong&gt; Tab。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;点击 &lt;strong&gt;Add pattern&lt;/strong&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;输入脚本名或者正则来匹配需要忽略的脚本名。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;点击 &lt;strong&gt;Add&lt;/strong&gt;。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;devoools设置界面&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/54F9290D-CE6A-4630-9387-34DE7EA6266F_2.png&quot; alt=&quot;devoools设置界面&quot; title=&quot;devoools设置界面&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;devtools忽略脚本&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/65A0FE7C-D5BB-4329-B978-1C7184F6C1B6_2.png&quot; alt=&quot;devtools忽略脚本&quot; title=&quot;devtools忽略脚本&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图十三👆🏻，从 Setting 中忽略脚本。&lt;/p&gt;

&lt;h2 id=&quot;从任何页面运行-debug-代码-snippets片段&quot;&gt;从任何页面运行 debug 代码 Snippets（片段）&lt;/h2&gt;

&lt;p&gt;如果你发现你正在 Console 中反复运行一些 deubg 代码，那么可以考虑一下 Snippets。Snippets 是一种你可以存储在 Devtools 中并执行的脚本。&lt;/p&gt;

&lt;p&gt;参见 &lt;a href=&quot;https://developer.chrome.com/docs/devtools/javascript/snippets/&quot;&gt;https://developer.chrome.com/docs/devtools/javascript/snippets/&lt;/a&gt; （未翻译）来了解更多。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;译者注：Snippets 在执行的时候是携带当前上下文的，比如你在 debug 的时候暂停了，然后执行 Snippets 代码，此时的 Snippets 代码拥有当前上下文的变量访问权限。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;watch监听自定义的-javascript-表达式的值&quot;&gt;Watch（监听）自定义的 JavaScript 表达式的值&lt;/h2&gt;

&lt;p&gt;使用 Watch 栏来监听自定义表达式的值。你可以监听任何有效的 JavaScript 表达式。&lt;/p&gt;

&lt;p caption=&quot;监听JavaScript表达式&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/02D81797-A39F-4837-B402-648AA39E5C21_2.png&quot; alt=&quot;监听JavaScript表达式&quot; title=&quot;监听JavaScript表达式&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图十四👆🏻，蓝色圈住的即是 Watch 栏。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;点击 Add Expression（添加表达式）来新建一个监视表达式。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;点击 Refresh（刷新）来刷新所有已经存在的表达式。当执行代码的时候，值会自动更新。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;鼠标悬浮在一个表达式上，然后点 Delete Expression（删除表达式），来删除它。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;格式化压缩后的代码以可读&quot;&gt;格式化压缩后的代码以可读&lt;/h2&gt;

&lt;p&gt;点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Fromat {}&lt;/code&gt;  来让一个压缩后的代码变成人类可读的格式。&lt;/p&gt;

&lt;p caption=&quot;格式化压缩后的文件&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/572D9BCF-DC18-460E-8B23-62398391ED92_2.png&quot; alt=&quot;格式化压缩后的文件&quot; title=&quot;格式化压缩后的文件&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;编辑一个脚本&quot;&gt;编辑一个脚本&lt;/h2&gt;

&lt;p&gt;当修复一个 bug 的时候，你经常会需要测试你的 JavaScript 代码的修改效果。你不要在一个外部的编辑器中编辑 JavaScript 代码后，再回到当前页面刷新后查看效果。你可以直接在 Devtools 中编辑你的 JavaScript 代码。&lt;/p&gt;

&lt;p&gt;如果想编辑脚本，你需要：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在 Source 栏中打开你想要编辑的文件（会出现在 Editor 栏中）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在 Editor 栏中做出修改。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;按 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmmand + S&lt;/code&gt; （Mac）或者 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + S&lt;/code&gt; （Windows，Linux）来保存修噶。Devtools 将会以打补丁的形式将整个 js 文件加入到 Chrome 的 JavaScript 引擎中去。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;直接编辑js文件&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/6DC1E149-D2D2-4005-A2B9-451CF0456112_2.png&quot; alt=&quot;直接编辑js文件&quot; title=&quot;直接编辑js文件&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上图中蓝框圈出来的就是编辑器栏。&lt;/p&gt;

&lt;h2 id=&quot;实时编辑一个暂停的函数&quot;&gt;实时编辑一个暂停的函数&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意：此功能自 Chrome 105 版本往上才可用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;当代码暂停的时候，你可以编辑当前函数然后实时应用修改，不过有以下限制：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;你只能编辑在 &lt;strong&gt;Call Stack&lt;/strong&gt; 最顶上的函数（也即当前断点所在的函数——译者注）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;调用栈中不能有对相同函数的递归调用（否则也相当于是修改了非当前调用栈的函数——译者注）。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;💡 实时编辑暂停函数的真相是…
当你应用一个修改的时候，debugger 工具自动重新执行（和前面的「重新执行堆栈中的函数」一样）。因此，对重新执行函数的限制与实时编辑暂停函数并生效的限制是一样的。你不能重头执行 WebAssembly、async以及generator（迭代器）函数。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如果想实时编辑一个函数，你需要：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;用断点暂停。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;编辑断点所在的正在暂停的函数。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;按下 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command/Control+S&lt;/code&gt;  来应用更改，debugger 将会自动重新执行该函数。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;继续执行&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;实时重新执行函数&quot;&gt;&lt;video controls=&quot;&quot; muted=&quot;&quot;&gt;&lt;source src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/37CA2680-5D00-477F-A1CF-161AD18F2A5E_2.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/p&gt;

&lt;p&gt;在这个示例中，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;addend1&lt;/code&gt; 和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;addend2&lt;/code&gt; 变量在起始的时候有一个不正确的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt; 类型。因此，字符串被错误的连接在一起而不是数字相加。为了修复此问题，在实时编辑的时候添加了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parseInt()&lt;/code&gt; 函数。&lt;/p&gt;

&lt;h2 id=&quot;搜索和替换在脚本中的文本&quot;&gt;搜索和替换在脚本中的文本&lt;/h2&gt;

&lt;p&gt;如果想要在脚本中搜索一段文本，你需要：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在代码源（Sources）-编辑器（Editor）栏中打开文件。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;按下 &lt;strong&gt;Command+F&lt;/strong&gt;（Mac）或者 &lt;strong&gt;Ctrl+F&lt;/strong&gt;（Windows、Linux）来打开内置的搜索栏。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在搜索栏中，输入你想要查询的字符串：&lt;/p&gt;

    &lt;p&gt;另外你还可以：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Aa&lt;/code&gt; 来匹配大小写，来让你的搜索大小写敏感。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.*&lt;/code&gt; 来使用正则匹配。&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;按下 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enter&lt;/code&gt; 键来执行搜索。可以按下 up/down 来跳转到下一个/上一个搜索结果。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;搜索字符&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/6D3D4E4D-22CD-4095-8773-1DFD4F3089A5_2.png&quot; alt=&quot;搜索字符&quot; title=&quot;搜索字符&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果想替换你搜索到的结果，你需要：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;打开搜索栏，点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A→B&lt;/code&gt; （手敲的不形象，看下面的图）即替换按钮来替换文本。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;输入想要替换的文本，然后点击 &lt;strong&gt;Replce&lt;/strong&gt; 或者 &lt;strong&gt;Replace all&lt;/strong&gt; 即可。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;按下替换按钮&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/4CFF9F79-2118-4DA6-AF12-1440A520C6F8_2.png&quot; alt=&quot;按下替换按钮&quot; title=&quot;按下替换按钮&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;禁用-javascript&quot;&gt;禁用 JavaScript&lt;/h2&gt;

&lt;p&gt;具体参见：&lt;a href=&quot;https://developer.chrome.com/docs/devtools/javascript/disable/&quot;&gt;Disable JavaScript With Chrome DevTools&lt;/a&gt;（未翻译）。&lt;/p&gt;

</description>
        <pubDate>Tue, 13 Sep 2022 09:29:30 +0800</pubDate>
        <link>https://www.xheldon.com/tech/javascript-debugger-reference-series01.html</link>
        <guid isPermaLink="true">https://www.xheldon.com/tech/javascript-debugger-reference-series01.html</guid>
        
        <category>技术</category>
        
        <category>调试</category>
        
        <category>技巧</category>
        
        <category>JavaScript</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>博客自动化流程及体验优化——第二弹</title>
        <description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;之前搞了个 &lt;a href=&quot;/tech/my-blog-ci.html&quot;&gt;博客自动化流程&lt;/a&gt;，及后来的 &lt;a href=&quot;/tech/my-blog-ci-in-2022.html&quot;&gt;2022 博客自动化流程&lt;/a&gt; 但是总的来说，还有以下痛点：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;从 Github CI 上传从 Craft 拉的图片到腾讯云经常会遇到网络错误，流程不可控。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;博客中图片传到腾讯云的时候，都被强制转为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;png&lt;/code&gt; ，但是其实应该支持更多格式如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gif&lt;/code&gt; 。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Craft 转 Markdown 的结果，有很多与标准 Markdown 不同的地方，如：&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;不支持嵌套列表。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;引用块内嵌套列表的时候，渲染结果列表居然在外层。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Craft 的 「焦点」（block）和「块」（focus）只有后者被识别成 blockquote （引用块），预期应该是二者都是。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Craft 中的 bookmark 信息量很多，如页面描述、页面 title等，但是转成 Markdown 的之后，仅剩下一个段落中包裹着链接，相当于信息丢失了。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Craft 中图片本身就不支持图片说明。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Craft 生成的代码块，并不会自动在反引号之后添加语言，导致一些语言被识别为了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plaintext&lt;/code&gt; 没有高亮。&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;于是本次优化针对这些痛点，又又又又进行了改造。&lt;/p&gt;

&lt;h2 id=&quot;优化一使用自己的-craftblocktomarkdown-函数&quot;&gt;优化一：使用自己的 CraftBlockToMarkdown 函数&lt;/h2&gt;

&lt;p&gt;因为给 Craft 反馈了他们的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;craft.markdown.craftBlockToMarkdown&lt;/code&gt; 无法正确转换的问题：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://forum.developer.craft.do/t/wrong-render-of-markdown-with-decoration-focus-and-image-question/235&quot; target=&quot;_blank&quot;&gt;Wrong render of markdown with Decoration focus and image question&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;但是官方似乎丝毫没有要解决的意思，于是自己写了一个简单的函数用来手动转换：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/Xheldon/036d9b187bd83303205001e8af97eda7&quot; target=&quot;_blank&quot;&gt;craftBlockToMarkdown&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;需要注意的是，该函数因为是自己用来适配 Jekyll 的来进行下一步处理的（见下面的优化三），因此特殊处理了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;imageBlock&lt;/code&gt;  和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;urlBlock&lt;/code&gt; 类型的 Block：&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/optimize-of-my-blog-2/FE4436B8-B16D-4CA7-9041-E2F5F831CC80_2.png&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此函数已经被我放到官方插件开发者论坛了，欢迎交流：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://forum.developer.craft.do/t/a-better-implementation-of-craft-blocks-to-markdown-transformation-methods/554&quot; target=&quot;_blank&quot;&gt;A better implementation of craft blocks to Markdown transformation methods&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;优化二将-github-ci-流程挪到本地&quot;&gt;优化二：将 Github CI 流程挪到本地&lt;/h2&gt;

&lt;p&gt;之前的流程，点击插件的发布按钮（当然，需要先填写 GitHub Token、填写 COS 等相关信息才行），然后等着就可以了。&lt;/p&gt;

&lt;p&gt;本次优化，为了保持与之前流程的一致，于是又写了个 Craft 插件，点击后会获取文档内容，简单处理后（如获取 header-img 的图片版权信息到 meta 中），会调用特定链接，链接参数带上文档信息：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;craft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editorApi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;openURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`xhelper://&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;btoa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unescape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;encodeURIComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;而这个特定链接的作用，就是调用 Apple Script 写的 Application，置于如何写一个 Application 应用和如何响应链接调用，可以看我写的 &lt;a href=&quot;/tech/applescript-simple-use.html&quot;&gt;这篇文档&lt;/a&gt;，里面会调用 node，执行的其实也是之前放到 Github CI 执行的代码，这里放一个简单的截图：&lt;/p&gt;

&lt;p caption=&quot;Xhelper截图👆🏻&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/optimize-of-my-blog-2/BC93AD26-26C5-4AD1-A8AC-2BB3B2AD2945_2.png&quot; alt=&quot;Xhelper截图👆🏻&quot; title=&quot;Xhelper截图👆🏻&quot; /&gt;&lt;/p&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/optimize-of-my-blog-2/5E5FDC00-D081-4B50-91FE-61946A453356_2.png&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;之前的流程因为我贪图简单，加上 Craft 上传的图片不一定都有后缀（如通过拖拽、图片上传等方式上传的图片，则有后缀，若通过复制粘贴来的或者 Web 上传的图片，则无后缀），于是我将所有图片都转成了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;png&lt;/code&gt; 格式，本次我移除了这个逻辑，先判断如果自身带后缀则使用其后缀；如果没有后缀，则再将其强制转为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;png&lt;/code&gt; ，推荐使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sharp&lt;/code&gt;  这个库，非~常~好~用~：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://sharp.pixelplumbing.com/&quot; target=&quot;_blank&quot;&gt;sharp - High performance Node.js image processing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;所以…上 Gif！&lt;/p&gt;

&lt;p caption=&quot;支持gif啦&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/optimize-of-my-blog-2/59E358FD-2A7A-4125-8223-1A51FFCCC8A3_2.gif&quot; alt=&quot;支持gif啦&quot; title=&quot;支持gif啦&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注：之前贪图方便（不用鉴权、不用固定 ip 的服务器），用了 &lt;a href=&quot;https://cloud.weixin.qq.com/cloudrun&quot;&gt;微信云托管&lt;/a&gt;，还顺便实现了将摘要往微信公众号发送的逻辑。但是坑爹的是，这个服务器仅仅是我为了方便发布公众号而弄的，但是按我性子一般三个月就用一次，每次用的时候还是冷启动（它服务器默认 30 分钟无请求进来自动关闭实例，因为他们是按实例运行时间计费的），会经常性的失败，有这排查的功夫我都自己都复制粘贴文档到微信公众号的编辑器了。所以，我放弃了微信公众号，手动粘贴…也挺好！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;优化三实现-craft-中的-bookmark-和图片-caption&quot;&gt;优化三：实现 Craft 中的 Bookmark 和图片 Caption&lt;/h2&gt;

&lt;p&gt;能在基于 Jekyll 的博客系统来实现这个效果是因为我并没有直接用 Github 的 Jekyll 服务，而是自己用 Jekyll build 成 HTML 后，再 push 到仓库中实现的，原因及过程见 &lt;a href=&quot;https://www.xheldon.com/tech/my-blog-ci.html#%E9%85%8D%E7%BD%AE-github-actions-build-%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;实现 Bookmark和图片 Caption 是利用了上一步生成的 Markdown 中含有的特殊 Jekyll 标签，配合自定义的 Jekyll 插件实现的，渲染 Bookmark 就用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;render_bookmark&lt;/code&gt; ，渲染图片 caption 用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;render_caption&lt;/code&gt; 实现（用了刚学了两小时的 ruby 脚本语言）：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Jekyll&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RenderBookMarkBlock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Block&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;attrs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/url\=\&quot;(.*)\&quot;\stitle\=\&quot;(.*)\&quot;\simg\=\&quot;(.*)\&quot;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;vi&quot;&gt;@url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;vi&quot;&gt;@title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;vi&quot;&gt;@img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;vi&quot;&gt;@error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;vi&quot;&gt;@desc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;p&amp;gt;&amp;lt;a class='link-bookmark' href='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@url&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'&amp;gt;&amp;lt;span&amp;gt;&amp;lt;img src='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@img&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'/&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@title&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@desc&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@url&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Jekyll&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RenderImageCaptionBlock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Block&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;attrs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/caption\=\&quot;(.*)\&quot;\simg\=\&quot;(.*)\&quot;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;vi&quot;&gt;@caption&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;vi&quot;&gt;@img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;p caption='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@caption&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'&amp;gt;&amp;lt;img src='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@img&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' alt='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@caption&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' title='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@caption&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' /&amp;gt;&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
&lt;span class=&quot;no&quot;&gt;Liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;register_tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'render_caption'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RenderImageCaptionBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;register_tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'render_bookmark'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RenderBookMarkBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jekyll 使用插件非常简单，在根目录新建一个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_plugins&lt;/code&gt; 目录，将用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; 写的 Jekyll 插件放进去即可在 Jekyll Build 的时候加载该插件。&lt;/p&gt;

&lt;h2 id=&quot;其他细节&quot;&gt;其他细节&lt;/h2&gt;

&lt;p&gt;之前的内容算是标准 Markdown 生成的 HTML，因此一些 RSS 阅读器抓取内容后格式良好，但是本次优化加了个 Bookmark 之后，RSS 格式就乱了（截图来自 Reeder 5）：&lt;/p&gt;

&lt;p caption=&quot;Reeder5中Bookmark格式错乱&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/optimize-of-my-blog-2/B1E25DC1-17C1-45D8-8721-8160FDCA1676_2.jpeg&quot; alt=&quot;Reeder5中Bookmark格式错乱&quot; title=&quot;Reeder5中Bookmark格式错乱&quot; /&gt;&lt;/p&gt;

&lt;p&gt;于是又写了个 ruby 插件，过滤该标签，将其转成普通的 HTML 链接：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Jekyll&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;BookmarkFilter&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bookmark_filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^\&amp;lt;p\&amp;gt;\&amp;lt;a\s+class=\&quot;link-bookmark\&quot;\shref=(.*)\starget=\&quot;_blank\&quot;\&amp;gt;\&amp;lt;span\&amp;gt;(.*)\&amp;lt;\/span\&amp;gt;\&amp;lt;span\&amp;gt;\&amp;lt;span\&amp;gt;(.*)\&amp;lt;\/span\&amp;gt;\&amp;lt;span\&amp;gt;\n(.*)\n\&amp;lt;\/span\&amp;gt;\&amp;lt;span\&amp;gt;(.*)\&amp;lt;\/span\&amp;gt;\&amp;lt;\/span\&amp;gt;\&amp;lt;\/a\&amp;gt;\&amp;lt;\/p\&amp;gt;$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;p&amp;gt;&amp;lt;a href=\1 target=&quot;_blank&quot;&amp;gt;\4&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
&lt;span class=&quot;no&quot;&gt;Liquid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;register_filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BookmarkFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后再在  feed.xml 中使用即可： &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;post.content | bookmark_filter&lt;/code&gt; 。&lt;/p&gt;

&lt;p&gt;欢迎交流！&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Aug 2022 00:13:32 +0800</pubDate>
        <link>https://www.xheldon.com/tech/optimize-of-my-blog-2.html</link>
        <guid isPermaLink="true">https://www.xheldon.com/tech/optimize-of-my-blog-2.html</guid>
        
        <category>技术</category>
        
        <category>优化</category>
        
        <category>Jekyll</category>
        
        <category>插件</category>
        
        <category>Craft</category>
        
        <category>CI</category>
        
        <category>AppleScript</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>Chrome 常用调试方法及其他</title>
        <description>&lt;p&gt;Chrome 是一款浏览器，对前端工程师来说也是一款调试利器，下面的几个功能是我在工作中最常用到的几个，下面逐个介绍。&lt;/p&gt;

&lt;h3 id=&quot;断点&quot;&gt;断点&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;这个应该是用的最多的基础功能，但是我面试过的很多外包同学并不知道如何使用 Chrome 的断点调试，或者听说过，但是不知道怎么用，下面简单介绍一下基本操作。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;添加断点可以直接在代码中硬编码，增增加一行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;debugger&lt;/code&gt; 表达式即可，代码执行到此处会断到此处：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/B64AFAEF-676F-4AB6-BFD9-163096FFD511_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在 VSCode 中，黄色下划线表示警告。一般不会使用此方式，因为此方式跟 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;console.log&lt;/code&gt;  并没有明显的优势，甚至还不如前者简单，因为你用完之后还得删了，不然代码是不可用的。&lt;/p&gt;

&lt;p&gt;还有一种方式是直接在 devtools 中的 source tab 中找到源码，一般是通过 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;console.log&lt;/code&gt; 输出后，点击控制台右侧的文件名，可以在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sources&lt;/code&gt; tab 中看到源码，点击左下角格式化之后，在代码左侧行号出点击标记断点，即可调试，如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/C987CDFD-FF9E-45BE-AE3B-BADD657DE1B9_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;断点后，图中红色部分的按钮，从左向右依次的含义：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;继续执行&lt;/code&gt; ：点击后，断点将直接执行到下一个断点处。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setp over&lt;/code&gt; ：如果当前断点所在位置不是函数，则跟 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;step&lt;/code&gt; 一样，执行到下一行；如果是函数，则会跳过该函数继续执行到下一行。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setp into&lt;/code&gt; ：如果没有异步代码，则跟 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setp&lt;/code&gt; 一样，执行到下一行；如果有异步代码，但它会进入到异步代码的内部第一行。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;step out&lt;/code&gt; ：点击后，跳出当前函数。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setp&lt;/code&gt; ：执行下一行同步代码，跟 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;step into&lt;/code&gt; 不一样， 它会跳过异步代码的执行；如果当前断点在函数处的话，会进入到函数调用内部第一行。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;暂时停用/激活断点&lt;/code&gt; ：首次点击后会临时禁止断点功能，就像没有打断点一样代码不会停止执行，下方的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Breakpoints&lt;/code&gt; 中的断点会整体置灰：&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/91E6FC8D-D932-4412-9D5D-EBC5E92BD8EA_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/0AC85FEA-3449-49A8-8BF9-A619CF2D924E_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;将断点停在报错处&lt;/code&gt; 点击高亮后启用，代码将会自动停止到任何 throw error 的地方，无论是否是被 catch 住，也无论是 http 错误还是什么错误。注意必须把下面的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pause on caught exceptions&lt;/code&gt; 勾选才行，不勾选等于无效：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/D99CEF49-A530-412E-B632-307C291C75E0_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此功能最好是在代码执行一遍完成后，页面载入完成后，开始交互的时候打开，否则可能一进入页面就会报错，包括 React 中的合法报错等，导致无法正常加载页面。&lt;/p&gt;

&lt;p&gt;直接放一张官方断点的图：&lt;/p&gt;

&lt;p caption=&quot;官方图👆🏻&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/17ED1675-13EA-42A3-8B4D-83587390D7EF_2.png&quot;  alt=官方图👆🏻 title=官方图👆🏻 /&gt;&lt;/p&gt;

&lt;p&gt;上图中上述的按钮下面有一系列的 toggle &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;‣&lt;/code&gt; 三角号可以点击，依次为：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Watch&lt;/code&gt; 可以监测断点处的任何可访问到的上下文变量以供显示，如果变量不存在或者无法访问，如访问 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a.b.c&lt;/code&gt; 的时候，a 不存在，那么会显示不可用。当断点断的时候，该位置输入的变量会自动显示，而不用鼠标悬浮上去（像上面官方图一样）查看变量，很方便。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Breakpoints&lt;/code&gt;  表示已经有的断点。checkbox 打勾的是可用的断点，未打勾的是暂时忽略的断点（可以临时打勾或者取消掉）。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/5F3A5468-63E9-47EF-9E80-461D5988E2C3_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当前执行到的断点，背景是黄色的。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Threads&lt;/code&gt; 表示当前调用的文件线程，当期页面 JavaScript 线程表示为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Main&lt;/code&gt; 中。此部分一般用不到，只是用来调试&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Web Worker&lt;/code&gt; 比较有用，也可以用来在当前页面调试 Chrome 浏览器插件。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scope&lt;/code&gt; 显示当前断点处的可访问到的变量值。因为 JavaScript 的闭包和调用栈的特性，会显示很多闭包中的变量：&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/54D3E302-A251-4411-B366-D69B4C7B6CEE_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Call Stack&lt;/code&gt; 即函数的调用栈，最顶层的是最近的调用，可以通过点击不同的函数在其之间来回跳。需要注意的是，跳转的时候不会真的再次执行到那个位置，只是方便你查看那个位置的闭包变量。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ui-断点&quot;&gt;UI 断点&lt;/h3&gt;

&lt;p&gt;有些情况下，你不知道或者无从定位一个 UI 问题为什么会这么变化。比如，你的同事写了一个 hover 到按钮上之后，按钮颜色变化的代码。你需要为这个逻辑添加新的逻辑，但是你并不知道他的代码逻辑写在哪个文件（他没有交接工作就休假了，可恶！）。&lt;/p&gt;

&lt;p&gt;你发现 hover 到按钮上的时候，按钮会增加个 class 类名，于是你可以使用 dom 断点进行调试，在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Elements&lt;/code&gt; tab 中，你需要检查的那个元素上右键：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/C9A19CAE-BEC6-4180-B618-73CA95E0CA90_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;UI 断点可以将代码停到你指定的 UI 事件所执行的代码发生之前的那一刻，UI 事件包括：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;子树修改：如果子树有任何修改，如增加、属性变更等，会将代码断到该逻辑即将执行的地方。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;属性修改：如果当前右键的元素有任何修改，会将代码断到该逻辑即将执行的地方。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;节点移除：如果当前右键的元素移除，会将代码断到该逻辑即将执行的地方。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;举个例子，飞书文档中，如果 block 聚焦，则会在节点上添加一个 focus 类名：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/3690BB50-7AB1-4798-AEE3-98D1EEC495B3_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/C7500F06-2A4D-47A5-8DE6-2ED7CB43868B_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此时就可以使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;attribute modifications&lt;/code&gt; 进行断点：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/9A783370-A839-4995-A5E3-2C1D4421ED7D_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当然，默认情况下线上代码是压缩后的，点击左下角的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{}&lt;/code&gt; 就会格式化：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/A4049060-72F8-476F-A1D2-A21B099EF177_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;格式化之后，Chrome 会新建一个 tab，在文件后面加上 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:formatted&lt;/code&gt; :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/CD25F7CA-7ABD-4B32-A28D-0E60935DB707_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;需要注意的是，如果你右键的元素在变更的时候是父节点变更，如父节点整体移除，则 UI 断点不会执行。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;overwrite&quot;&gt;Overwrite&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Charles 有类似的功能叫 Map js（没记错的话），ProxyMan 的类似功能叫 Map Local，都是一个意思。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;有时候，因为上线/测试链路比较长（尤其是编辑器这种基础工具组件，需要发包），想快速验证一个 case 的时候就会比较麻烦，因此可以使用 Chrome 的 Overwrite 功能。&lt;/p&gt;

&lt;p&gt;此功能类似于 Charles 的 Map js 功能，即可以将本地文件作为页面的请求进行响应，你需要先在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sources&lt;/code&gt; 中启用该功能，当然，如果没有执定本地的文件存储的位置，需要先让你指定位置才行：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/B5ADFA65-51E3-44AD-967F-311A3604D016_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此时 Chrome 会提醒你需要本地该路径的完全访问权限，同意即可：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/416C9680-96DF-40AF-861B-6C74EFC6C1DF_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择一个本地文件夹后，（这里我选用的是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/Developer/Overwrite&lt;/code&gt; 文件夹）就可以启用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Overwrite&lt;/code&gt; 功能：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/362CACE4-9BBD-41B3-80FD-A69C85EF8209_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后转到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Network&lt;/code&gt; tab，选择一个资源，如 css/js，我这里选择的是 js：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/31AB1FF1-4016-4818-AFB3-3B823209319E_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;注意，如果没有在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sources&lt;/code&gt; 中启用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Overwrite&lt;/code&gt; 的话，这里是不会显示 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Save for overrides&lt;/code&gt; 的。&lt;/p&gt;

&lt;p&gt;之后就可以各种修改该文件，然后刷新页面查看修改后的效果了。&lt;/p&gt;

&lt;p&gt;需要注意的是，如果 js 文件请求后有时间戳，则 Overwrite 不会生效，因为 Chrome 是使用严格的路径匹配来 map 文件的。&lt;/p&gt;

&lt;h3 id=&quot;snippet&quot;&gt;Snippet&lt;/h3&gt;

&lt;p&gt;准确说，这个不算是「调试方法」，但是平常有个代码验证的片段，我也会存到这个里面，相当于一个 Sublime（可以对输入过的变量进行自动补全），挺好用的：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/E231449D-FED8-4E4E-8446-D6A3AAEC87A4_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;filesystem&quot;&gt;Filesystem&lt;/h3&gt;

&lt;p&gt;该功能跟上面几个在同一个位置，用来实时同步浏览器中的修改到本地文件系统。该功能适合一个简单的 HTML Web 服务，如 Express 这种服务端返回 js/css/html 等的本地调试时候用。&lt;/p&gt;

&lt;p&gt;但是该功能官方明确说了，不适合 React App。因为现在基本项目都是 React、Vue 等的现代框架构建的，因此此功能用的较少，这里仅放个官方截图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/image.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;其他&quot;&gt;其他&lt;/h2&gt;

&lt;h3 id=&quot;macvim&quot;&gt;MacVim&lt;/h3&gt;

&lt;p&gt;上面的 Overwrite 来的 js 一般都是压缩后的线上代码，有些可能会比较大，所以我一般会用 Vim 打开后格式化一下。Vim 配置起来太费劲，而 MacVim 提供了开箱即用的体验，稍加改造即可为己更好的所用。为什么用 MacVim 是因为它性能非常强，格式化大到几十 Mb 的文件都是几秒钟的事情。我一般都会配置一个 js-beautify 进行格式化，虽然叫 js-beautify，但是它可以格式化 js、css、html。&lt;/p&gt;

&lt;p&gt;使用 js-beautify 需要先安装 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vim-plug&lt;/code&gt; ，它是一款 vim 插件管理器：&lt;a href=&quot;https://github.com/junegunn/vim-plug&quot;&gt;https://github.com/junegunn/vim-plug&lt;/a&gt;，使用步骤见：&lt;a href=&quot;https://github.com/junegunn/vim-plug/wiki/tutorial&quot;&gt;https://github.com/junegunn/vim-plug/wiki/tutorial&lt;/a&gt;。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注：安装需要魔法。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js-beautify&lt;/code&gt; 使用这个：&lt;a href=&quot;https://github.com/beautify-web/js-beautify&quot;&gt;https://github.com/beautify-web/js-beautify&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;这是我的 vim 配置，我使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[]&lt;/code&gt; 快捷键作为调用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js-beautify&lt;/code&gt; 的方式，这样就不用每次都输入命令了：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;set number
set relativenumber
set smartindent
set autoindent
set hlsearch
set display=lastline
set scrolloff=3
set laststatus=2
set showmatch
set ruler
set guifont=Monaco:h12
syntax on
autocmd FileType *.js setlocal equalprg=js-beautify\ --stdin
nmap [] :%!js-beautify&amp;lt;CR&amp;gt;
colorscheme evening
call plug#begin(has('nvim') ? stdpath('data') . '/plugged' : '~/.vim/plugged')
Plug 'jelera/vim-javascript-syntax'
call plug#end()
if !has('gui')
    set term=$TERM
endif

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;vscode&quot;&gt;VSCode&lt;/h3&gt;

&lt;p&gt;VSCode 也有断点调试功能（感谢 Chrome 内核），但是只能调试 Node 应用（可以配合浏览器插件调试 Web 应用，但是没必要，因为已经有 Chrome 了），基本使用方法跟 Chrome 类似，这里就不介绍了，放个图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-use-of-chrome-devtools/D7AD7683-F0C4-46D2-8632-2ADB519B230C_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 07 Aug 2022 20:39:47 +0800</pubDate>
        <link>https://www.xheldon.com/tech/the-use-of-chrome-devtools.html</link>
        <guid isPermaLink="true">https://www.xheldon.com/tech/the-use-of-chrome-devtools.html</guid>
        
        <category>技术</category>
        
        <category>Chrome</category>
        
        <category>调试</category>
        
        <category>技巧</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>差生的学习问题</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;本文是作为职业高中的教师老爹写的，虽然不是教语文，但是平常也爱写点教学感悟、生活体会什么的。此类文章也许投稿到某个报纸的教育专栏会更好，但是一方面苦于没有这方面的门路，一方面即使投稿后也想将其放到网上以让更多人看到，因此他让我帮他放到我的博客中。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;差生是指那些听不懂课，看不懂书，作业不会做，考试成绩差的学生。这样的学生一般学习态度差，给人的感觉是不求上进。其实这只是表面现象，其背后的原因是学习困难。因为听不懂课，看不懂书，做作业太难，所以不愿意做作业。别的学生几分钟就能完成的作业，他需要很长的时间也做不好。由于学习困难，产生了厌学的情绪。这种情况首先找到学习困难的原因，帮助他克服困难，使学习过程变得轻松愉快，克服厌学情绪，他的成绩才能有所提高。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-problem-of-poor-student/photo-1560785496-3c9d27877182.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;一听不懂课怎么办&quot;&gt;一、听不懂课怎么办?&lt;/h2&gt;

&lt;h3 id=&quot;听不懂课是常见的现象&quot;&gt;听不懂课是常见的现象&lt;/h3&gt;

&lt;p&gt;原因是基础知识有欠缺，理解能力差，如果听不懂课，那一定要趁课下时间把课本看懂，遇到不懂的地方，就问老师，或同学。老师会及时发现教学中的一些问题，以改善以后的教学工作。老师讲课，要降低学生理解知识的难度，要从简单的、初步的、直观的知识开始讲起，多补习基础知识。&lt;/p&gt;

&lt;p&gt;教师的教学语言，要贴近学生的生活经验，让学生有真情实感。只有真情实感才能触动学生的内心，才能抓住学生的注意力。&lt;/p&gt;

&lt;h3 id=&quot;教学要符合认识的规律&quot;&gt;教学要符合认识的规律&lt;/h3&gt;

&lt;p&gt;理性认识必须以感性认识为基础，教学上要先建立感性认识，没有条件也要积极创造条件，让学生在实践中学习，实地观察，动手操作，通过思考分析原因，对观察到的现象做出准确的描述和科学合理的解释，从而总结出概念和规律。在感性认识的基础上建立理性认识。举例说明问题不能脱离学生的生活经验。&lt;/p&gt;

&lt;p&gt;要经常对教学效果进行检测，及时发现学生的掌握情况不断改进教学方法。&lt;/p&gt;

&lt;p&gt;不能让困难积累，遇到困难要及时解决，一些同学听不懂课，下课也不看书，不会就算了。这样知识欠缺就会越来越多，学习就会越来越困难。&lt;/p&gt;

&lt;p&gt;课能听懂，书能看懂，题通过努力能够做会，学习是件快乐的事情。有个学生在普通高中上学，因为学习成绩差，听不懂课，学校要求又严格，就不愿上学了。他的家长就把他送到职高上学，在职高上一段时间，他家长发现孩子变得快乐了，每天唱歌回家，以前在家从不学习，家长怎么劝都不听，现在居然开始学习了，做作业看书到夜里十点多。他爸说职业高中的老师比普通高中的老师教的好。不是职高的老师教的好，而是他的孩子能学会，职高的教材比普高的教材简单，孩子在普高学不会所以不学，在职高能够学会，所以开始学习了。&lt;/p&gt;

&lt;h3 id=&quot;学习难度应与学习能力相匹配&quot;&gt;学习难度应与学习能力相匹配&lt;/h3&gt;

&lt;p&gt;学习内容不能太简单，也不能太难，要让学生感觉通过努力可以学会。学习能力强，可以跳级，学习能力差就要留级，人们喜欢做具有一定挑战性的活动，从中能获得快感。如果学习内容难度太大，通过努力也学不会，就会产生厌学的情绪。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-problem-of-poor-student/photo-1605711285791-0219e80e43a3.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;二正确的学习方法读书与做题&quot;&gt;二、正确的学习方法：读书与做题&lt;/h2&gt;

&lt;h3 id=&quot;书山有路勤为径学海无涯题作舟&quot;&gt;书山有路勤为径，学海无涯题作舟&lt;/h3&gt;

&lt;p&gt;学习方法是多读书多做题。首先把课本读懂，一遍一遍地读，读一遍是不行的，多读几遍才能记住，才能把知识融会贯通。书读懂了就等于学会了。如果书读不懂怎么办？那是因为你的知识有欠缺的地方，就像看电视剧，如果不是一集接着一集连着看的，故事情节看着看着就看不懂了。你需要把欠缺的知识补起来。&lt;/p&gt;

&lt;p&gt;其次是做题，看懂书还要多做题，才能灵活运用所学的知识。从简单的题开始做。如果感觉做题比较困难，就先看例题，看有答案的习题，要看那种有详细分析和解题步骤的学习资料。看会了，自己再做一遍，再思考一下有没有其他的解题方法，做到能举一反三。&lt;/p&gt;

&lt;p&gt;要做到每做一道题，要达到真正会做，不要似懂非懂，真正弄明白方法原理，而不是死记硬背。有时候感觉自己学会了，再做一遍还不会做。做数学题的时候经常发生这种现象。数学差的学生特别擅长死记硬背，学习数学也使用死记硬背的方法。数学有数学的思维方法，数学是不需要死记硬背的，而更强调的是思维方法和运算。结果是根据条件用用公式，定理数学方法算出来的。采用死记硬背的方法学习数学就不灵了。&lt;/p&gt;

&lt;p&gt;小学初中高中的知识是相互连贯的，如果有一部分有欠缺，遇到这方面的问题就无法理解，学习就会遇到困难，就会产生听不懂课，看不懂书，题不会做的情况。哪里有欠缺就从哪里开始补起。&lt;/p&gt;

&lt;p&gt;有位在大学教数学的教授介绍他的学习经验，他上高中时刚刚恢复高考，由于小时候不重视学习，他的基础知识很差，做数学题时感觉困难很大，这也不会那也不会，连乘法口诀都忘了，就从小学开始自学乘法，遇到解方程等不会的问题，就把初中的书找来看，从基础知识开始学起，基础知识掌握牢固之后，做题越来越容易了，学习上遇到的困难也少了。如果你能够自己学习，任何困难都不能阻挡你的进步。&lt;/p&gt;

&lt;h3 id=&quot;温故而知新学而时习之&quot;&gt;温故而知新，学而时习之&lt;/h3&gt;

&lt;p&gt;「习」的意思就是多复习过去学过的东西，把基础知识打牢。基础知识扎实了，理解新事物的能力就会增强。学习之后要经常练习，练习多了才能记得牢，才能灵活运用。学过知识要经常复习，把新学的知识和过去的知识进行融会贯通，总结出规律，便于理解和记忆。&lt;/p&gt;

&lt;h3 id=&quot;学而不思则罔思不学则殆&quot;&gt;学而不思则罔，思不学则殆&lt;/h3&gt;

&lt;p&gt;一道题不会所有类型的题都不会，一道题会了所有类型的题都会了。做一道题一定要彻底搞明白做题的方法和步骤，不要似懂非懂，一知半解。做题不一定要多但一定要做到能够消化吸收。&lt;/p&gt;

&lt;p&gt;读书是学习的过程，做题时思考的过程，把读书和做题结合起来，也就是把学习和思考相结合，自古以来都被当作最有效的学习方法。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-problem-of-poor-student/photo-1560785477-d43d2b34e0df.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;三背书的方法先记住文字的意思再记怎样叙述&quot;&gt;三、背书的方法：先记住文字的意思，再记怎样叙述&lt;/h2&gt;

&lt;h3 id=&quot;正确理解&quot;&gt;正确理解&lt;/h3&gt;

&lt;p&gt;如果要背一段文字就先理解文字的意思，记住文字的意思，再记怎样叙述。先用自己的话把意思说出来，再按课本上的叙述把意思说出来。如果说不出来，是因为关键词没有掌握。关键的名称，动作，状态，不知道用什么词语描述。&lt;/p&gt;

&lt;p&gt;在背书时，理解文字的意思很重要，如果不理解文字的意思就记不住文字的意思，记不住文字的意思也就不能叙述文字的意思，记忆起来就比较难。经常出现叙述混淆颠倒甚至逻辑错误的情况。叙述的和原来的意思大相迳庭。例如在物理上要叙述电磁继电器的工作原理，书上是这样叙述的，电磁继电器的线圈通电产生磁场，将街铁吸合，带动开关动作。线圈断电，磁场消失，衔铁在拉力弹簧的作用下释放，开关复位。如果理解意思了就知道电磁继电器事实上是电磁力控制的开关，就可以用自己的话来叙述：线圈通电产生电磁吸力，将开关吸合，线圈断电磁吸力消失，开关复位。&lt;/p&gt;

&lt;p&gt;有个同学不理解意思，他叙述说线圈通电开始膨胀，开关闭合，线圈断电收缩，在弹簧的作用下开关断开。还有同学说线圈通电开关闭合，产生磁场，线圈断电，开关断开，磁场消失，把因果关系搞错了。为什么会出现这种现象呢？那是几年以前的事情，学校的仪器设备十分缺乏，该做的实验不能做，上课全靠老师在黑板上写画，教学中用到的东西学生都没有见过，该动手操作的没有动手操作，没有产生对知识的感性认识，上课就是要求学生死记硬背课本上的内容。不求甚解的死记硬背，记起来非常难，好不容易记住了，明天就忘了。现在情况好多了，国家很重视教育，教学上所用的仪器设备学校都有了，教室里还有大屏幕电子白板，通过实物演示和电脑动画学生一看就知道工作原理。&lt;/p&gt;

&lt;h3 id=&quot;准确叙述&quot;&gt;准确叙述&lt;/h3&gt;

&lt;p&gt;知道工作原理，下一步就是叙述。但是，知道电磁继电器的工作原理不一定会叙述，就像我们看到的现象不一定能把它很好地叙述出来。因为你还得记住一些事物的名称，不知道哪个部分叫线圈，哪个部分叫衔铁，虽然知道意思，但不知道关键的东西叫什么名字，只能说那个东西通电，那个东西动作，就像看一场篮球比赛，看着很热闹，但一个人也不认识怎么去说呢，只能说那个人，这个人，或者那个高个，那个胖子，那个穿什么衣服的人等等。文学大师能写出好文章，为什么我们写不出来呢？因为虽然是我们天天见到的现象，但是在我们知识库里没有足够的词汇来描述。所以记住关键词很重要，一些东西怎样称呼，一些动作用什么语言描述，一些状态用什么语言形容。意思弄明白了，关键词也记住了，叙述起来就不会出错了。&lt;/p&gt;

&lt;p&gt;记忆是对感觉的记忆，感觉越丰富，记忆越牢固。回忆起来就越容易。如果感觉比较单一，就越容易遗忘，因为联想的线索太少了。感觉越丰富，联想的线索就越多，越容易联想，所以就不容易忘记。有时拿在手里的东西，刚放下一小会儿就找不到了，不是因为你得了健忘症，而是联想的线索太少了。记不住的东西就通过一件事去记忆。实地观察，动手操作，和别人讨论，这样会增加联想的线索，回忆起来就容易。&lt;/p&gt;

&lt;p&gt;不求甚解的死记硬背，不仅占用大量的学习时间，而且非常耗费精力，是造成学生厌学的原因。遇到必须要背的东西要弄明白道理，记住一些关键的词语，和事物之间的逻辑关系。这些做到了，记起来就简单了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-problem-of-poor-student/photo-1599493782407-2fe53235d2c8.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;四教与学态度决定一切&quot;&gt;四、教与学：态度决定一切&lt;/h2&gt;

&lt;p&gt;教学过程是教师和学生双向互动的过程。教师教学就是帮学生理解所学的知识，记住所学的知识，达到灵活运用的目的。学生对知识理解了，记住了，会灵活运用了，就学会了。&lt;/p&gt;

&lt;h3 id=&quot;学生是教学的主体教学以学生为主&quot;&gt;学生是教学的主体，教学以学生为主&lt;/h3&gt;

&lt;p&gt;只有学生积极主动的学习，教师的教学才能起到作用。就像鸡蛋在外部条件下变成小鸡，教师教学是外因，学生主动学习是内因。外因通过内因起作用。教师讲课一定要让学生能够理解，能够听懂。学生听不懂，不理解，就不能启发学生思考，教学是没有效果的。学生要主动积极的学习，如果学生不愿意学习，对所学的内容不感兴趣，就不会认真听课，老师讲的再多也没有用。无论外界条件怎样，石头不会变成小鸡。学习是学生自己的事，是不可强求的，也是不可代替的。&lt;/p&gt;

&lt;h3 id=&quot;学生要主动学习态度积极教学才有意义&quot;&gt;学生要主动学习，态度积极，教学才有意义&lt;/h3&gt;

&lt;p&gt;子曰：不愤不启，不悱不发。举一偶不以三偶反则不复也。翻译过来就是，孔子说：教导学生不到他想弄明白而不得的时候就不去开导他，不到他想说出来而说不出来的时候就不去启发他，交给他一方面的东西他却不能举出其他三方面的东西就不要再教他了。意思是如果学生不主动积极的学习，对学习不感兴趣，就不要去教他。教他他也不学，他不学你教不会，徒劳无功。学习态度非常重要。学习态度积极的学生，有不会的问题会主动向老师问，这样的学生自学能力很强，能主动积极的学习。从来不问问题的学生，遇到不会的问题，不会就算了。也没有打算学会。刚考过的试卷再做一遍还是不会，该考多少分还是考多少分。考试就是查漏补缺的，好不容易发现一个自己不会的问题应该立即解决才对，自己不去解决，该不会的还是不会，永远也进步不了。学习是自己的事，要靠自己努力，就像学习体育的运动员，如果自己不刻苦训练，力量和技术就不会进步。学习也是这样，是不能由别人代替的，老师教的再好也教不会不学习的学生。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-problem-of-poor-student/photo-1546410531-bb4caa6b424d.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;后记&quot;&gt;后记&lt;/h2&gt;

&lt;p&gt;差生成绩差不是一朝一夕形成的。长期的学习困难没有克服，困难日积月累就会越来越多，就会对学习失去信心，从而放弃学习，上课看小说，下课玩手机，作业不做，成绩越来越差。遇到学习困难要及时解决，才不至于积累起来，困难越来越大。&lt;/p&gt;
</description>
        <pubDate>Thu, 26 May 2022 19:10:28 +0800</pubDate>
        <link>https://www.xheldon.com/life/the-problem-of-poor-student.html</link>
        <guid isPermaLink="true">https://www.xheldon.com/life/the-problem-of-poor-student.html</guid>
        
        <category>生活</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>AppleScript 初体验</title>
        <description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;最近新买了 Mac Studio，配备了 M1 Max 芯片和 64G 的内存，性能非常强。与此同时，之前的 &lt;a href=&quot;/tech/my-blog-ci-in-2022.html&quot;&gt;博客处理流程&lt;/a&gt; 中，因为需要使用 Github Action 将从 Craft 拉取的图片（这一步很快，毕竟二者都在国外），往腾讯云 COS传的时候，经常遇到网络过慢的问题&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/FBB4B556-8472-4C92-8EFD-E07015DC5FBB_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;调研了一番发现，Github 貌似 &lt;a href=&quot;https://github.community/t/is-there-a-way-to-specify-virtual-machine-region/120438&quot;&gt;不支持设置 Action 服务器的区域&lt;/a&gt;。鉴于此，所以打算之后将发布流程放到本地，，以加快构建流程，遂有此文。下面的 AppleScript 简称 AS。&lt;/p&gt;

&lt;h2 id=&quot;为什么用-applescript-而不是其他&quot;&gt;为什么用 AppleScript 而不是其他？&lt;/h2&gt;

&lt;p&gt;首先，我当然是想尽可能的缩短操作路径和复杂度，因此先规定了操作步骤：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;点击 Craft 中的发布按钮。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;本地构建，同时显示出构建 log 在终端。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将构建结果推送到 github。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;由于需要在一个 App 中通过链接调用另一个 App，因此使用 AppleScript 是唯一选择。不过，虽然使用的是 AS，但是其实执行的还是已有的 js 文件，只是将 &lt;a href=&quot;https://github.com/Xheldon/craft_publish_ci/blob/master/.github/workflows/publish.yml&quot;&gt;craft_publish_ci 中的 workflow任务&lt;/a&gt; 挪到了本地执行而已。&lt;/p&gt;

&lt;h2 id=&quot;applescript-简介&quot;&gt;AppleScript 简介&lt;/h2&gt;

&lt;p&gt;概念图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/6C1FA0DD-5875-4C15-BCA8-495B34F5F699_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;applescript-能做什么&quot;&gt;AppleScript 能做什么&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;能与用户交互，如响应用户输入、通知中心发送通知等。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;能控制其他 app ，如果其他 app 提供了相关 AS 接口可以直接控制，如果没有提供相关接口则需要通过 AS 语法来获取界面上的按钮等操作元素进行操作。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;能执行自动化任务如发送邮件、执行定时脚本、打开音乐播放器、锁屏、响应自定义的 URL Scheme 后执行脚本等。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;基本语法&quot;&gt;基本语法&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;每行的前面加上 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;---&lt;/code&gt;（三个短横线）或者 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; 表示注释本行。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(*&lt;/code&gt;&lt;em&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xxx*&lt;/code&gt;&lt;/em&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;)&lt;/code&gt; （括号+星号）包裹的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xxx&lt;/code&gt; 表述块注释掉 xxx 的内容。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;其他的基本跟口头预类似，不过如果你对英文语法不自信，比如不清楚 besides against over 等在具体语境中的意思，建议还是老老实实使用基本语法。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;applescript-的形式&quot;&gt;AppleScript 的形式&lt;/h3&gt;

&lt;p&gt;AppleScript 常用的有两种形式，Script（脚本）、Application（应用），这里只介绍前两种，Script bundle 和 Text 我没用这里不展开。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/08F57517-C6AC-49C1-9B5E-9606F2DD2A8E_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注：这里需要说明一点的是，即使是相同的代码，保存成脚本运行和保存成应用运行，界面是不一样的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;脚本&quot;&gt;脚本&lt;/h4&gt;

&lt;p&gt;脚本顾名思义就是像 js 一样的可执行文件，不同的是 as 是在 Mac 桌面环境执行，而 js 是在 Chrome 中执行的。双击即可运行。下图是脚本 process 显示进度的界面，通过点击脚本右上角的「运行」按钮运行：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/A8E4D5D2-C4A6-4E6D-80DA-7E3A0EFA7D41_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;应用&quot;&gt;应用&lt;/h4&gt;

&lt;p&gt;保存成 Application 的 AS 的后缀名跟普通的应用如 Safari、Chrome、微信等应用一样，会以 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.app&lt;/code&gt; 结尾，也可以查看包内容。有多种运行方式如 URL Scheme 调用、双击、拖拽内容到 app 图标上，你需要写相关的事件函数来响应相关用户操作。下图是 应用process 显示进度的界面，通过双击 「xxx.app」运行：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/E0B4F2DA-21AA-4EF1-B059-9C500E18B67C_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;其他&quot;&gt;其他&lt;/h4&gt;

&lt;p&gt;除了上述两者，其他的不常用，不过如果你需要将 script 保存成服务以在状态栏或者任意界面的右键的服务中能够调用该脚本，这需要上述两者之外的形式：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/D09A2EEB-72DC-4CA1-8812-59E4BC4206DB_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;你可以选择将脚本保存成系统 Service，此时上述 process 代码运行的时候，进度条会显示在顶部状态栏：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/B936F8C6-DCA3-4B98-B995-7F4F3F013E74_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;常用操作代码&quot;&gt;常用操作代码&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;以下操作基于「应用」类型的 AS，下列的语法在终端中使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osascript -e '语法内容'&lt;/code&gt; 可以快速验证。需要注意的是，类似于多行的表达如 process 进度条的显示，osascript 是没办法做到的，虽然你可以在很多多行命令如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tell&lt;/code&gt; 中使用多个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-e&lt;/code&gt; 参数来串联如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;osascript -e ‘tell application “Finder”’ -e ‘end tell’&lt;/code&gt; ，但是此语法对 process 进度条无效。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;用户交互&quot;&gt;用户交互&lt;/h3&gt;

&lt;h4 id=&quot;在通知中心显示信息&quot;&gt;在通知中心显示信息&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;display notification &quot;通知内容&quot; with title &quot;通知 title&quot; subtitle &quot;通知副标题&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/AC96218F-E238-4695-9220-7933C27BC841_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;弹窗&quot;&gt;弹窗&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;display dialog &quot;这是个通知&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/B945A1B9-4704-4F39-9A68-C0287846A061_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;获取用户输入&quot;&gt;获取用户输入&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;display dialog &quot;What's your name?&quot; default answer &quot;&quot; with icon note buttons {&quot;取消&quot;, &quot;确认&quot;} default button &quot;确认&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/F4002573-AD3C-4D4E-BF98-9B6696788442_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注：AS 没有办法生成类似表单一样的组件，只能生成上面这种对话框，类似网页中的 prompt&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;播放给定文本&quot;&gt;播放给定文本&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;say &quot;What is your name?&quot; using &quot;Alex&quot; speaking rate 140 pitch 42 modulation 60
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;其他-1&quot;&gt;其他&lt;/h4&gt;

&lt;p&gt;让用户选择文件夹、文件、颜色、从列表中选择一项等，暂时省略。&lt;/p&gt;

&lt;h3 id=&quot;执行命令行&quot;&gt;执行命令行&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;do shell script &quot;echo $PATH&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意，命令行中的 PATH 环境变量为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/bin:/bin:/usr/sbin:/sbin&lt;/code&gt; ，因此无法在其中执行诸如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node&lt;/code&gt; 、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvm&lt;/code&gt; 等后来安装的命令，这些命令执行的时候需要手动指定命令所在位置。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;执行 node 脚本：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;set node to &quot;/Users/x/.nvm/versions/node/v14.19.1/bin/node&quot;
set appPath to &quot;/Applications/Xhelper.app/Contents/Resources/Scripts/&quot;
do shell script node &amp;amp; &quot; &quot; &amp;amp; appPath &amp;amp; &quot;index.js&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;获取上一个语句的输出结果&quot;&gt;获取上一个语句的输出结果&lt;/h3&gt;

&lt;p&gt;直接在上一句语句后立即使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;result&lt;/code&gt; 表示结果即可：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;do shell script &quot;echo $PATH&quot;
display dialog result with title &quot;通知&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/6214E292-E4CB-49BC-B8D2-945C135E5B45_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;显示调试信息&quot;&gt;显示调试信息&lt;/h3&gt;

&lt;p&gt;直接使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;log&lt;/code&gt; 语句即可，然后在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Script Editor&lt;/code&gt; 下方的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Replies&lt;/code&gt; 中获取输出信息，可以在这里看到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shell script&lt;/code&gt; 命令执行的过程中，脚本向控制台输出的内容，如执行 js 脚本的时候的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;console.log&lt;/code&gt; 等。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;log do shell script &quot;echo $PATH&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/1089533E-DE38-418F-A20C-592669941C2D_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;显示进度&quot;&gt;显示进度&lt;/h3&gt;

&lt;p&gt;显示进度用到 progress ，语句相对来说比较复杂，因为需要显示不同的状态进度，需要多行：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;set progress total steps to 3
set progress completed steps to 0
set progress description to &quot;处理中...&quot;
delay 1
set progress completed steps to 1
delay 1
set progress completed steps to 2
delay 1
set progress completed steps to 3
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;相关的截图可以在上面看到。&lt;/p&gt;

&lt;h3 id=&quot;延迟一段时间后执行&quot;&gt;延迟一段时间后执行&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;delay n
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt;  表示秒数，支持小数。一般用来模拟用户操作的时候的延迟操作，否则可能因为脚本操作过快页面还未来得及显示等。一些奇怪的问题也可以通过延迟执行来解决，此语句可以类比于 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;js&lt;/code&gt; 中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setTimeout&lt;/code&gt; 大法。&lt;/p&gt;

&lt;h3 id=&quot;调用其他应用&quot;&gt;调用其他应用&lt;/h3&gt;

&lt;p&gt;注意，此处会有系统警告，需要你确认才能执行:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/898D7F67-700E-40F2-AC6C-D999F5543578_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;确认后可以在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;设置-安全与隐私-隐私-自动化&lt;/code&gt;中确认：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/47444D53-68E4-4518-87FD-521AE42B737F_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以调用其他应用来执行相应的操作，下面是唤起 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Terminal&lt;/code&gt; 应用后，激活然后执行命令：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;tell application &quot;Terminal&quot;
	if not (exists window 1) then reopen
	activate
	do script &quot;echo $PATH&quot; in window 1
end tell
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;此语句做了一个判断，如果第一个打开的窗口存在，则激活之，然后在其内执行命令（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;do script&lt;/code&gt; ）；如果不存在的话则会新建一个窗口然后在其内执行命令。因为每个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;do script&lt;/code&gt; 都会打开一个新的 Terminal 这个判断可以保证复用窗口。不过需要注意的是，如果 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window 1&lt;/code&gt; 内已经有一个已经存在的进程（如 server 未中断），那么这个命令是不会执行的，还需要额外的判断，此处不展开。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/8701C38B-8CE9-479A-816A-9126692B313D_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;响应-url-scheme&quot;&gt;响应 URL Scheme&lt;/h3&gt;

&lt;p&gt;有些时候你不想先找到 AS 脚本，然后双击运行；或者有时候你需要从另一个应用中调起你写的 AS 应用，这个时候就用到了 URL Scheme，少数派有 &lt;a href=&quot;https://sspai.com/post/31500&quot;&gt;一篇介绍&lt;/a&gt;，可以看看。&lt;/p&gt;

&lt;p&gt;首先你需要修改 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Info.plist&lt;/code&gt; 文件，可以在 Script Editor 的右侧，右键 「显示在 Finder」 中：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/E1F3DFE5-54E3-4615-9A74-1B084686CC37_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后向上一级，可以看到该文件：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/DE5F9B08-4F60-4B2A-9645-DF37B420C96B_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;内容是一个类似 XML 的东西编辑之，在其内加入如下字段：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;lt;array&amp;gt;
	&amp;lt;dict&amp;gt;
		&amp;lt;key&amp;gt;CFBundleURLName&amp;lt;/key&amp;gt;
		&amp;lt;string&amp;gt;Open File&amp;lt;/string&amp;gt;
		&amp;lt;key&amp;gt;CFBundleURLSchemes&amp;lt;/key&amp;gt;
		&amp;lt;array&amp;gt;
			&amp;lt;string&amp;gt;xhelper&amp;lt;/string&amp;gt;
		&amp;lt;/array&amp;gt;
	&amp;lt;/dict&amp;gt;
&amp;lt;/array&amp;gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后确认一下，用 XCode 打开该文件可以看到类似的条目：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/901047E8-38AA-4B9C-BA60-680EC60864F5_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;表示添加成功。&lt;/p&gt;

&lt;p&gt;这个操作的意思是，将该 AS 应用响应以 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xhelper&lt;/code&gt; （可以任意修改成你想要的开头，不要与已有的重复即可）开头的 URL。&lt;/p&gt;

&lt;p&gt;设置完成后，需要在 Script Editor 中保存一下，或者 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmd + L&lt;/code&gt; 一下或者运行一次（或者都做一遍），重新编译，然后才能生效。&lt;/p&gt;

&lt;p&gt;然后，为了让 AS 响应该 URL，需要设置一个事件监听：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;on open location this_URL
	display dialog this_URL
end open location
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上述代码中，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this_URL&lt;/code&gt; 即为以你 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xhelper&lt;/code&gt; 打开的链接。&lt;/p&gt;

&lt;p&gt;此时在浏览器中（截图是 Chrome）测试一个链接：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/01F724A1-041B-4143-80CC-5F4F3D6ECFC8_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后 AS 应用就会响应然后弹窗显示 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xhelper://你好！&lt;/code&gt; ，注意这里是不用 encode 编码的。&lt;/p&gt;

&lt;h2 id=&quot;我的使用&quot;&gt;我的使用&lt;/h2&gt;

&lt;p&gt;在这里放出我自己的 Craft build 代码，用的是上述的 URL Scheme，其中的 node 执行的 js 都是从 &lt;a href=&quot;/tech/my-blog-ci-in-2022.html&quot;&gt;之前的工作流&lt;/a&gt; 改造的，没有什么新逻辑。另外 AS 的语法比较口语化，直接看就能看懂每句话是什么意思，这里就不一一解释了。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;on open location this_URL
	try
		set startOffset to offset of &quot;://&quot; in this_URL
		set the content to text from (startOffset + 3) to -1 of this_URL
		set node to &quot;/Users/x/.nvm/versions/node/v14.19.1/bin/node&quot;
		set appPath to &quot;/Applications/Xhelper.app/Contents/Resources/Scripts/&quot;
		--- 如果有两个参数表示需要发布到 wechat，如果只有一个参数则参数即为 base64 编码的内容
		set AppleScript's text item delimiters to &quot;&amp;amp;&quot;
		set arguments to every text item of the content
		set AppleScript's text item delimiters to &quot;&quot;
		set listLength to the length of arguments
		if listLength = 2 then
			set realContent to item 2 of arguments
			do shell script &quot;echo &quot; &amp;amp; realContent &amp;amp; &quot; &amp;gt; &quot; &amp;amp; appPath &amp;amp; &quot;content.base64.txt&quot;
			tell application &quot;Terminal&quot;
				if not (exists window 1) then reopen
				activate
				set alive to do script node &amp;amp; &quot; &quot; &amp;amp; appPath &amp;amp; &quot;index.js&quot; in window 1
				--- 等待上一个脚本执行完毕后再执行下一个脚本
				repeat
					delay 0.1
					if not busy of alive then exit repeat
				end repeat
				beep
				do script node &amp;amp; &quot; &quot; &amp;amp; appPath &amp;amp; &quot;wechat.js&quot; in window 1
			end tell
		else
			do shell script &quot;echo &quot; &amp;amp; content &amp;amp; &quot; &amp;gt; &quot; &amp;amp; appPath &amp;amp; &quot;content.base64.txt&quot;
			tell application &quot;Terminal&quot;
				if not (exists window 1) then reopen
				activate
				do script node &amp;amp; &quot; &quot; &amp;amp; appPath &amp;amp; &quot;index.js&quot; in window 1
			end tell
		end if
	on error error_message
		display dialog error_message buttons {&quot;Cancel&quot;} default button 1
	end try
	
end open location
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/applescript-simple-use/F7A4DDFF-2698-4E1E-8D72-C8B3D0EC5020_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;参考链接&quot;&gt;参考链接&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/LanguagesUtilities/Conceptual/MacAutomationScriptingGuide/index.html#//apple_ref/doc/uid/TP40016239-CH56-SW1&quot;&gt;Mac Automation Scription Guide&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/archive/releasenotes/AppleScript/RN-AppleScript/RN-10_10/RN-10_10.html#//apple_ref/doc/uid/TP40000982-CH110-SW8&quot;&gt;AppleScript 10.10 Changes&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html#//apple_ref/doc/uid/TP40000983-CH208-SW1&quot;&gt;Introduction to AppleScript Language Guide&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/42815166/customize-applescript-app-icon&quot;&gt;Customize AppleScript app icon&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://ohdoylerules.com/snippets/using-node-in-applescript/&quot;&gt;Using Node.js in an AppleScript&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://apple.stackexchange.com/questions/21602/where-can-i-access-official-applescript-documentation&quot;&gt;Where can I access official AppleScript documentation?&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://apple-dev.groups.io/g/jxa/wiki/3202&quot;&gt;关于使用 JavaScript 写 AS 的相关资料&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.notion.so/AppleScript-c07b90f850ea42e990b3ea2333f9b252&quot;&gt;AppleScript 教程&lt;/a&gt; （Write on Notion）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://sspai.com/post/44425&quot;&gt;在 macOS 中制作自己的 URL Schemes&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;AppleScripe 简明基础教程（iDoraemon Nathan 编著）&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 03 May 2022 13:38:32 +0800</pubDate>
        <link>https://www.xheldon.com/tech/applescript-simple-use.html</link>
        <guid isPermaLink="true">https://www.xheldon.com/tech/applescript-simple-use.html</guid>
        
        <category>技术</category>
        
        <category>AppleScript</category>
        
        <category>初体验</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>我的家庭观影之路</title>
        <description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;看电视是家里必不可少的娱乐活动，但是如何舒服的看自己想看的内容却不是一件简单的事，有时候甚至有钱都买不来舒心，更别提诸如会员专属广告、会员还需要额外购买观影券来看当前热播的剧等喂屎行为。于是此处记录一下有关家庭观影的折腾记录，一来可以给大家一个思路，二来可以帮助大家提高生活质量。&lt;/p&gt;

&lt;h2 id=&quot;我的基本情况&quot;&gt;我的基本情况&lt;/h2&gt;

&lt;p&gt;这里先介绍一下我的基本情况，如果情况和你相符的话可以继续看下去；如果与你的需求不甚吻合，也可以继续看下去做个参考。&lt;/p&gt;

&lt;h3 id=&quot;设备&quot;&gt;设备&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;索尼 65X90J 电视作为播放设备，京东 618 买的，￥6000+，实际任意电视均可。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Apple TV 4K 2021 款作为附属播放设备，京东国际买的 ￥1300，Infuse 只在苹果平台有，直接在电脑上播放也行。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;联通宽带送的普通 ZTE WiFi6 路由器作为主路由，免费。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;NanoPi R4S 作为&lt;a href=&quot;https://baike.baidu.com/item/%E8%BD%AF%E8%B7%AF%E7%94%B1/4824918&quot;&gt;软路由&lt;/a&gt;，OpenWrt 系统，淘宝买的 ￥500左右，其他软路由系统/硬件均可。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://firecore.com/infuse&quot;&gt;Infuse Pro 订阅&lt;/a&gt; 软件做为播放客户端，Apple 美区买的，订阅一年 ￥70 左右，其他支持 WebDAV 等协议的播放软件均可。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;联通宽带作为基础设施。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;注：我的 R4S 的连接方式是 &lt;a href=&quot;https://sspai.com/post/59708&quot;&gt;旁路由&lt;/a&gt; 方式，这样家里一些无需特殊上网的设备就不会异常，比如家里的 360监控摄像头、华为智能灯、小米晾衣架、小天鹅智能洗衣机等，这些智障硬件在家里网络特殊的情况下，无法连接网络，尤其是 360监控摄像头。因此这些设备必须直连，所以只能使用旁路由的方式，大部分的设备默认走直连，少部分设备特殊配置后走特殊网络即可。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;需求&quot;&gt;需求&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;吃饭的时候看央视新闻等电视直播。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;看老旧的美剧、英剧如《老友记》、《权利的游戏》，对新出的美剧不感兴趣，不追剧。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;看会被阿里网盘和百度网盘和谐的电影/电视剧，比如当下正在影院放映的电影、流媒体正在热播的电视剧、爱国敬业诚信友善的电影等。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;无聊的时候就想听个响，随便放点动画什么的如《猫和老鼠》、《哆啦A梦》、《蜡笔小新》等每集独立的电视节目等。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;看一些蓝光画质的纪录片。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;流畅播放不能卡。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;设置一次之后，后续不需要再操心，喜欢稳定和一劳永逸。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;不想到处找资源下载电影/电视剧，又怕电脑下载迅雷等 BT 下载，会对 SSD 固态硬盘有损害。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对电脑软件有洁癖，能不装尽量不装新软件，如果一个软件能解决的，不会装两个；即使装软件，也尽可能的不影响电脑的环境（此处特指从 Github 上下载的软件），因此优先考虑 &lt;a href=&quot;https://www.docker.com/get-started/#&quot;&gt;Docker&lt;/a&gt; 安装。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;注：有些人喜欢自动化，比如使用 Sonarr + Jackett + qBittorrent ，设置好之后就可以实现自动追剧，即剧集有更新后自动下载，全程不用手动，但是我的需求没这么强烈，因为我看的大多数剧集大多数都是能通过阿里云盘转存看的国内的剧集，比如一些CCTV 的纪录片和常见的国外剧集如一些 BBC 的纪录片、老友记之类的。因此我没有使用此自动化方案，一来是因为需要额外购买大容量硬盘，二来是因为我主力看电影途径还是通过阿里云盘进行的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;前期的无效折腾&quot;&gt;前期的无效折腾&lt;/h2&gt;

&lt;p&gt;想了想，为了避免大家少走弯路，这里还是放上我走过的弯路，给大家个经验教训。如果对此不感兴趣，直接跳到下一节即可。&lt;/p&gt;

&lt;h3 id=&quot;emby&quot;&gt;Emby&lt;/h3&gt;

&lt;p&gt;一开始的时候，鉴于画面优美性、配置简便性，我想使用 &lt;a href=&quot;https://post.smzdm.com/p/735222/&quot;&gt;Emby 服务&lt;/a&gt;，但是市面上的公共的、收费的此类服务，要么是需要特定方式连接，要么是需要特定方式使用（如定时签到、按时回答问题等），最头痛的是此类服务的速度非常差，尤其是看那种蓝光高清的电影，动不动 20G+ 容量起步的时候；或者是晚上观看高峰期，服务质量会非常恶劣。再加上其他的问题如 infuse 客户端会进行扫库操作（当然这个不是 Emby 的锅），因此在我 &lt;a href=&quot;https://www.xheldon.com/life/apple-tv-using-and-problem.html#:~:text=infuse%20%E9%A6%96%E6%AC%A1%E4%BD%BF%E7%94%A8%E6%97%B6%EF%BC%8C%E7%99%BB%E9%99%86%E5%AE%8C%20Emby%20%E6%9C%8D%E5%8A%A1%E5%90%8E&quot;&gt;折腾了一次&lt;/a&gt; 之后就放弃了此种方案。&lt;/p&gt;

&lt;h3 id=&quot;iptv&quot;&gt;IPTV&lt;/h3&gt;

&lt;p&gt;想观看一些各个地方的电视台的直播，于是想到可以使用 &lt;a href=&quot;https://baike.baidu.com/item/iptv/113036&quot;&gt;IPTV&lt;/a&gt;，一般办宽带时候，运营商会有介绍其各自提供的 IPTV 服务，只是运营商的需要额外收费，我用的是免费的。如何免费呢？首先需要下载一个客户端，我用的是 iPlay TV for Apple TV，5.99 美元。然后在 Github 上搜一些直播源的地址填进去（页面 README 会有些怎么使用这些地址），这些地址都是好心人从网络上抓取的运营商的 IPTV 地址。&lt;/p&gt;

&lt;p&gt;但是这个方案的坏处是，直播源是不稳定的，时不时的你就需要手动更新地址，或者地址里面的某个播放源就无效了，经历过几次之后就很头痛，于是后续的看央视直播，我都是要么手机投屏，要么就是用安卓电视安装的 新视听 app 看央视直播。&lt;/p&gt;

&lt;h2 id=&quot;当前方案&quot;&gt;当前方案&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意，下面的所有设置的基础的前提是，家里的设备如 Apple TV、 R4S 、Mac 都在同一个网段，否则无法相互识别。我目前的网段地址是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.7.x&lt;/code&gt; ，比如 R4S 位于 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.7.2&lt;/code&gt; 主路由位于 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.7.1&lt;/code&gt; ，从一个路由出来的都是在同一个网段，因此此处无需特别关心，此处只是提醒一下，如果总是设置不对，可能有这方面的原因。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;配合 R4S，通过阿里云盘提供的&lt;a href=&quot;https://baike.baidu.com/item/WebDAV/4610909?fr=aladdin&quot;&gt; WebDAV 协议&lt;/a&gt;，使用 Infuse 进行电影观看，只需要网上搜索想看的电影名 + 阿里云盘 转存即可，高阶一点的，电视剧的话搜 电视剧名 + 阿里云盘 + 刮削（意即整理好剧集名和海报、演员表、每季的海报介绍等各种信息了，可以直接在 Infuse 上以电视剧的形式查看）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;配合 R4S，通过 qBittorrent 配合 Jackett 搜索插件和软路由的外接硬盘，实现将电影下载到外接硬盘上观看，这样也不会损害电脑的 SSD，同时也不用在电脑上多下一个软件等，此途径是为了弥补上面阿里云盘因为一些原因而被和谐的电影的一种方案。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/869A0533-9AE7-463E-9664-D9A61AD17D47_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;具体实践&quot;&gt;具体实践&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;下面说的全部 R4S 软路由的插件，都是购买的时候商家已经给刷好的系统，可以让商家帮忙刷，无需自己手动安装。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;阿里云盘&quot;&gt;阿里云盘&lt;/h3&gt;

&lt;p&gt;使用 R4S 的阿里云盘插件 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;阿里云盘 WebDAV&lt;/code&gt; ，&lt;a href=&quot;https://github.com/messense/aliyundrive-webdav&quot;&gt;项目地址&lt;/a&gt;：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/FAD4964F-C3B3-4DA1-8E22-59CC9F206DE8_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;插件装好后非常简单配置一下即可，主要是两个配置，一个是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Refresh Token&lt;/code&gt; 这个需要使用 Chrome 手动打开阿里云盘的 Web 页面，按 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmd&lt;/code&gt; + &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;opt&lt;/code&gt; + &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt; 打开控制台，然后在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Application&lt;/code&gt; Tab 中，点击左侧的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Local Storage&lt;/code&gt; 查找 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;token&lt;/code&gt; 这个键，在下方的值中找到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;refresh_token&lt;/code&gt; 的值，粘贴到上图中即可：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/A081D0DA-BD8E-4440-8E88-304941A8182C_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注：这个 refresh_token 顾名思义，是用来获取真正 token 的值，我看过其代码，其逻辑是每 117 分钟重新获取一次（可能 token 是 2 小时过期），否则的话 token 就会过期。因此如果 R4S 断电、网络断开之后，如果发现阿里云盘无法访问了，需要重新获取一次该 refresh_token 填入。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;端口的话，就随便写一个不会冲突的即可，我这里设置的是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8982&lt;/code&gt; ，然后勾选 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;启用&lt;/code&gt; 后，点击右下方的保存并应用，即配置完毕。此时你可以直接使用浏览器访问（假设家里路由器地址是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.7.2:8982&lt;/code&gt; ）：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/C09F1F1F-4743-4F33-8400-36E0E237814F_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后再在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Infuse&lt;/code&gt;  中配置，让其识别到局域网的这个 WebDAV 服务即可，操作如下，进入设置-网络-共享-添加共享：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/61069572-196F-4874-8122-BAD70096CE68_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;位址就是刚刚的局域网 ip 地址，下方高级中填写端口。然后进入设置-媒体库，把阿里云盘中的文件夹都打上勾，这样就可以在首页看到文件夹了，记住，每次如果有文件删除和新增，如果想及时看到的话，都需要执行一次打勾/取消打勾的操作：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/C12D97E3-66AB-41F5-B1CF-559752C3B721_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;首页视图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/48F4102C-C6AA-4DB0-8372-8FF271EC5CF5_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其他 Infuse 的使用可以自己发掘一下。&lt;/p&gt;

&lt;h3 id=&quot;qbittorrent&quot;&gt;qBittorrent&lt;/h3&gt;

&lt;p&gt;有时候阿里云盘因为一些众所周知的原因，部分资源会被和谐掉，因此为了下载一些热门剧，或者下载国外的一些剧集的话，只能采用此种方法。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://baike.baidu.com/item/qbittorrent/9179482&quot;&gt;qBittorrent&lt;/a&gt; 支持磁力下载和 BT 下载，可以直接在电脑上安装此软件，但是 BT 下载对 SSD 是有损伤的，我不想直接在新买的 Mac Studio 上使用，于是就将其放到软路由上，然后在 R4S 挂载外接硬盘使用。需要配置一下，才能在路由器上使用此软件，过程如下：&lt;/p&gt;

&lt;h4 id=&quot;挂载外接硬盘&quot;&gt;挂载外接硬盘&lt;/h4&gt;

&lt;p&gt;家里有一个大学时期买的 500G 的机械硬盘（磁盘分区类型建议是 &lt;a href=&quot;https://baike.baidu.com/item/exFAT&quot;&gt;exFAT&lt;/a&gt;，Mac 的 APFS 不被识别，可以使用 Mac 的磁盘管理工具进行格式化），一直放在抽屉吃灰，于是拿来用了。硬盘直接插到 R4S 上可以识别，但是需要挂载，这是个 &lt;a href=&quot;https://baike.baidu.com/item/%E6%8C%82%E8%BD%BD&quot;&gt;计算机概念&lt;/a&gt;，就好比是对软路由来说，有一个外接的硬件通过通用协议 USB 接入到系统中，但是并不知道接入后要如何对待这个硬件。因此此处外接硬盘后，软路由会显示一个挂载点虚拟挂载点（下方的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dev/sda&lt;/code&gt; ），表示这个硬盘挂载到路由系统的这个路径下，然后你需要配置一下要将该挂载点映射到实际位于 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/mnt/&lt;/code&gt; 物理挂载点的哪个路径，才能正确访问该路径下的该外接硬盘设备。&lt;/p&gt;

&lt;p&gt;进入到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;系统-磁盘管理&lt;/code&gt; ，可以看到已经设备了外接硬盘（红框指示的地方），这时需要点下方的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;挂载点&lt;/code&gt; 然后添加该设备即可：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/7EEFE44B-F57F-4FC9-AF8A-FEB0D88B90A1_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;进入到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;系统-挂载点&lt;/code&gt; ，如图可以看到下方有个 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;挂载点&lt;/code&gt; ：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;图中我是已经挂载了，所以会有第一个红框，默认是没有的，你在下方的挂载点添加后即可在上面的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;已挂载的文件系统&lt;/code&gt; 中看到。 注：Linux 外接设备挂载的路径一般都是位于 /mnt 下的，添加后注意看容量是否是外接硬盘的容量即可。因为分区的原因，虚拟挂载点 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dev/sda&lt;/code&gt; 下可以挂载的物理硬盘有两个，一个是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/mnt/sda1&lt;/code&gt; 只有几百 M，一个是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/mnt/sda2&lt;/code&gt; 才是真正的可读写硬盘。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/54303E2E-02EC-4EFA-8156-3356B8E458AD_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;之后如果你使用的是 Mac，就可以直接在 Finder 的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;网络&lt;/code&gt; 中发现该设备了，因为 R4S 默认带了一个 SMB 共享的程序，即下面说的配置，如果你想更定制一点，可以修改该共享配置（不过在 R4S 中你能修改的也只有名称了）&lt;/p&gt;

&lt;h4 id=&quot;配置-samba-共享&quot;&gt;配置 Samba 共享&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;此处先配置路由器的&lt;a href=&quot;https://baike.baidu.com/item/samba/455025&quot;&gt; Samba 共享&lt;/a&gt;（也即 SMB 协议）的原因是，这样的话就不用使用 SSH 终端登陆路由器来通过命令行修改配置文件了，对小白比较友好，因此将这一步放到首位。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;浏览器进入到路由器配置页面，然后进入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;网络存储-网络共享&lt;/code&gt; ， 进行如下填写，其中主机名是显示在 Finder 中的名字，描述和工作组默认就可以，可以看到默认状态下 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;自动共享&lt;/code&gt; 选项是打开的，也就是我上一节说的这一步其实不是很需要。但是如果默认自动共享的话，是共享的根目录，会将 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/mnt/sda1&lt;/code&gt; 也显示出来，我这个强迫症一定要改掉，于是配置下方的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;共享目录&lt;/code&gt; 即可：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/7C7C0A2E-520C-4B00-9374-36214F11E288_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此处需要注意的是，需要配置一下本页面的第二个 Tab，即 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;编辑模板&lt;/code&gt; 然后将需要使用密码和 security 共享类型为 User 的配置改成不需要使用密码和共享类型是 Share 即允许匿名连接，否则需要输入账号密码，麻烦：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/79FA04AC-4689-412A-8C81-EBE17EF8A0D8_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后点击右下角的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;保存并应用&lt;/code&gt; 即可。&lt;/p&gt;

&lt;p&gt;做完以后，直接在 Mac 中的 Finder-网络 就可以看到：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/AD4BFF23-BC65-4601-B44B-DEAB0D0E27C6_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;也可以手动连接服务器，如图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/F81F6D6A-210E-41E4-84A5-BE6F7828E555_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/7CF3B88C-09B8-42F8-96ED-FCDE506F539A_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;配置-qbittorrent&quot;&gt;配置 qBittorrent&lt;/h4&gt;

&lt;p&gt;进入软路由 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;网络存储-qBittorrent&lt;/code&gt; 插件中，根据上面的挂载点和挂载目录为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/mnt/sda2/&lt;/code&gt; 按如下配置即可：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/A1529EB2-17DE-4825-8DB5-8EC285616B16_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;主要配置的是 配置文件存放路径 和 下载文件存放目录，改成外接硬盘的地址 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/mnt/sda2&lt;/code&gt; 下面的路径即可（上图中是已经启动后的界面，未启动的话不会有 「打开 Web 页面」和「qBittorrent 运行中」的提示）。设置完成后点击保存，先不要应用，然后进入到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;下载设置&lt;/code&gt; tab中，将&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;启用临时目录&lt;/code&gt; 选项关闭，否则会产生大量的临时文件：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/C64A0BF2-23FB-4F40-AB39-9757904C1010_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后点击保存并应用即可。&lt;/p&gt;

&lt;p&gt;之后，进入到 qBittorrent 的 Web 管理界面，即路由器地址+刚刚设置的端口号 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.7.2:9091&lt;/code&gt; ：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/5C47B593-D0D6-4B0D-BFAE-3B2CF21FAB32_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此就安装完成了，你有什么网上搜到的磁力链接或者 torrent 种子都可以进行下载。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;如果你还是不想到处找种子，或者说网上搜到的磁力链接都是死链，无法下载，那么继续看下面。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;设置-qbittorrent-的-jackett-搜索插件&quot;&gt;设置 qBittorrent 的 Jackett 搜索插件&lt;/h4&gt;

&lt;p&gt;该插件可以直接在 qBittorrent 中调用 Jackett 服务搜索资源然后右键下载，如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/D10C0DCC-31AB-405D-B7E9-8FEA68D23414_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是这并不是默认配置（好像如果直接下载 qBittorrent 的 Win 或者 Mac 客户端，Jackett 搜索插件是默认启用的，但是路由器没有带任何默认插件），需要单独安装，步骤如下，直接看图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/0C025BE5-98C1-4260-9F38-C0AB79199FD5_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击安装新插件后，会让你输入一个地址，该地址可以从 &lt;a href=&quot;https://github.com/qbittorrent/search-plugins/wiki/How-to-configure-Jackett-plugin&quot;&gt;这里获取&lt;/a&gt; ，或者直接填写这个地址也行，都一样： https://raw.githubusercontent.com/qbittorrent/search-plugins/master/nova3/engines/jackett.py&lt;/p&gt;

&lt;p&gt;之后就会在已安装的搜索插件中出现该插件的列表。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注：上述安装只是安装了 qBittorrent 的 Jackett 插件，以让 qBittorrent 配合 Jackett 使用，好比是 Safari 安装了迅雷插件一样，此时还不能使用，还要安装迅雷软件本身，Jackett 插件也是一样，只装插件是不行的，还要装 Jackett 服务才行。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;安装-jackett-服务&quot;&gt;安装 Jackett 服务&lt;/h4&gt;

&lt;p&gt;在路由器上直接装 Jackett 这一步我没搞定，总是报错，应该是缺少某个环境配置，最后也不想搞了，因为我会使用 &lt;a href=&quot;https://baike.baidu.com/item/Docker&quot;&gt;Docker&lt;/a&gt; 在 Mac 本地，因此我将这一步放到了 Mac 本地，只需要配置一下 qBittorrent 的 Jackett 插件即可。&lt;/p&gt;

&lt;p&gt;Docker 可以在官网&lt;a href=&quot;https://www.docker.com/get-started/#&quot;&gt; 这里下载&lt;/a&gt;，下载后可以在终端命令行输入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker&lt;/code&gt; 测试是否环境变量安装成功。&lt;/p&gt;

&lt;p&gt;在 Docker 中安装 Jackett 很简单，步骤在官方的 &lt;a href=&quot;https://github.com/Jackett/Jackett#installation-using-docker&quot;&gt;这个地方&lt;/a&gt;，这里简述一下即可：&lt;/p&gt;

&lt;p&gt;打开终端，复制在官方的安装步骤中的 docker cli 代码：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker run -d \
  --name=jackett \
  -e PUID=1000 \
  -e PGID=1000 \
  -e TZ=Asia/Shanghai \
  -e AUTO_UPDATE=true `#optional` \
  -p 9117:9117 \
  -v &amp;lt;本地硬盘路径（去掉本句左右两侧尖括号）&amp;gt;:/config \
  -v &amp;lt;本地硬盘路径（去掉本句左右两侧尖括号）&amp;gt;:/downloads \
  --restart unless-stopped \
  lscr.io/linuxserver/jackett
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;比如上面的配置，我的本地硬盘路径就是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/Code/Docker/config&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/Code/Docker/downloads&lt;/code&gt; 。这个配置简单解释一下就是，映射本机端口 9117 到 Docker 容器的 9117 端口，启用自动更新，禁止重启停止除非已经意外停止。&lt;/p&gt;

&lt;p&gt;之后就可以在 Docker 中看到这个服务了（默认直接启动了）：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/5CD0C81A-15D4-46F6-B174-C158A782675D_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后在浏览器访问该地址： &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;127.0.0.1:9117&lt;/code&gt; （或者如下图访问本机局域网 ip 也行，是一样的）即可看到 Jackett 的 Web 配置页面：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/6DAB50B8-BBFC-442C-A707-D7E2E542808E_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里记住这个 API Key，下一步会用到，接下来配置 qBittorrent 中的 Jackett。&lt;/p&gt;

&lt;p&gt;因为 Jackett 是安装在本地的，因此如果想让安装在路由器的 qBittorrent 的插件能够访问安装在本地的 Jackett，需要知道本机的局域网 ip，可以在系统设置中查看：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/13072C1C-51B3-4AA2-94AA-7F6380094D6A_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;之后，在 Finder 中打开 qBittorrent 的配置目录（还记得刚才设置 qBittorrent 的配置目录吗？我们存放在了软路由外接硬盘中），Finder 路径是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config/qBittorrent/data/nova3/engines/jackett.json&lt;/code&gt;设置该地址和端口：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/7B4A1D7C-6A2F-44C4-A486-4839C7604284_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后刷新 qBittorrent 的页面，打开插件设置，就可以看到该地址和该插件已经配置成功了：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/5EA4A29E-0CD0-4ED6-9AAA-43BF96F70307_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此配置完毕。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注：配置完 Jackett 后，还要在 Jackett 服务中添加 Indexer ，让 Jackett 知道从哪些网站搜索种子，这个过程比较简单，如下：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;点击 Add Indexer 然后从弹出来的界面，右侧点击 + 即可，我是将所有类型是 Public 的同时语言是中文或者英文的站点都加入了（加入后这个待加入列表就不显示已经加入后的了，所以截图中很少有中文、英文和 Public 的站点）。Private 的需要会员 cookie：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/9643CEC0-1D25-4931-8411-B37EB09F96FF_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/35B84985-B043-4FD8-B153-45DD8F75EDA8_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Categories 顾名思义就是网站资源类型，其中 XXX 是 你懂的，不过这种资源下载的人比较少，所以比较难用 BT 下载到，因为 BT 的原理是下载的人越多，下载越快。&lt;/p&gt;

&lt;p&gt;另外因为一些历史原因，国内的资源很少，而国外的资源无论多旧，总是很多且很快，哎，大环境下我们每个人都有责任，这里不多说。&lt;/p&gt;

&lt;p&gt;比如下载一个旧的两年前的国产电影《疯狂的外星人》：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/6F54A106-42DB-40AB-A8D9-A9DD5A7E5F66_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;做种和资源都很少，但是下载一个十几年前的国外电影 Harry Potter 却很多：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/3A378FA4-66BD-474D-A38B-CA2DF8FA6CE8_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/8DB69130-0789-43E4-B192-BB8E73DA74B7_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此路由器端配置结束，接下来就是最后一步，在播放端如 Infuse 中添加软路由外接硬盘，观看上面的电影了。&lt;/p&gt;

&lt;h4 id=&quot;配置-infuse&quot;&gt;配置 Infuse&lt;/h4&gt;

&lt;p&gt;这一个步骤就比较简单了，用的还是刚才的配置 WebDAV 的那个方式，只是这次把 WebDAV 协议换成了 SMB 协议，直接上图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/A467446C-B096-4ADD-B14E-E6454425FA34_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其中 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;位址&lt;/code&gt; 就是软路由地址，我的就是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.7.2&lt;/code&gt;. 端口默认 445 即可。&lt;/p&gt;

&lt;p&gt;下面是效果图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/DA2FBBEA-E138-4BD0-A330-4F3C17A98AFD_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/1A6CBC88-BD46-4F11-8058-E7B41ABD4644_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;测试&quot;&gt;测试&lt;/h2&gt;

&lt;p&gt;试试阿里云盘的网速测试：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/1BC91F6C-490D-4F64-9B97-7CEFE566C169_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;试试软路由外接硬盘的网速测试：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-way-to-watching-tv/5EC99DBA-D277-4FC4-9F36-CA1B0ADCF42D_2.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;本地外接硬盘（走的是局域网）还没有远端挂载阿里云盘（走的是 HTTP）的速度快的原因是，SMB 有速度限制。&lt;/p&gt;

&lt;h2 id=&quot;后话&quot;&gt;后话&lt;/h2&gt;

&lt;p&gt;电子产品或者软件的目标应该是以人为中心进行服务的，而不是让人来适应软件。这也是 MacOS 口碑比 Windows 好的原因。我相信没有人愿意每天折腾这些东西，谁都想有一个开箱即用的电视、电视盒子、电视软件，但现实的种种使我们无法做到省心，此时不要怕麻烦，为了哪些不会折腾的人而折腾（比如家人），给他们提供一种开箱即用的电视、电视盒子、电视软件，也是一种幸福。&lt;/p&gt;

&lt;p&gt;祝大家都能观影自由！&lt;/p&gt;
</description>
        <pubDate>Sun, 24 Apr 2022 00:57:15 +0800</pubDate>
        <link>https://www.xheldon.com/life/the-way-to-watching-tv.html</link>
        <guid isPermaLink="true">https://www.xheldon.com/life/the-way-to-watching-tv.html</guid>
        
        <category>生活</category>
        
        <category>Apple</category>
        
        <category>折腾</category>
        
        <category>软路由</category>
        
        <category>自由</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>豆角焖面</title>
        <description>&lt;h2 id=&quot;食材&quot;&gt;食材&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;豆角 1 斤左右，太多不好吃&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;大葱、姜、花椒&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;西红柿半个，调味用&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;五花肉或臀尖 1 斤左右，其实猪肉都可以&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;盐 2 克&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;生抽、老抽、料酒&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;面条 两人份，细的比较好，多了不容易熟，我一般买 3 块钱的&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;准备工作&quot;&gt;准备工作&lt;/h2&gt;

&lt;p&gt;豆角，掰掉两头的尖儿，然后顺势往下拉，把豆角丝儿给去掉：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/28175445-50CD-488F-80ED-F01B139DD3B5_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/1E302DB0-D199-423E-BF67-9F5410FD9F90_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后把豆角手动掰成 4~5 厘米的长度即可，然后用水冲洗干净放在一遍备用：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/671FE42B-3523-4C48-891F-8E91FB1AF1B2_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;五花肉切成块，大葱切碎，姜切片，西红柿切片：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/F4514241-9778-4098-A2A8-C1F867BED547_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此处理完毕。&lt;/p&gt;

&lt;h2 id=&quot;开始干&quot;&gt;开始干&lt;/h2&gt;

&lt;p&gt;把锅用水冲一遍，然后擦干：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/4C1462B7-3ABB-4DD0-BED0-1FC223F6990E_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后大火把锅烧干，看不到水之后，放入适量油，所谓「适量」，差不多就是基本能盖住锅底即可：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/8AD313F5-F2C9-4051-8073-964F191808A7_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;放入葱、姜、花椒，炒一下香一香锅，然后放入肉。&lt;/p&gt;

&lt;p&gt;注意，刚放入肉的时候，肉会粘底，此时不要铲它，稍微等个几秒钟再铲，就可以轻松铲起来而不会粘底了（经验之谈）：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/2545D3C9-8BAF-4FC5-9313-A62F69346298_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此时可能火比较大，葱姜略糊了些，因此可以倒点料酒，顺便去去肉腥味，一举两得：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/B08B1090-E4DC-4BD1-ADE4-746B8E42A268_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;翻炒均匀，肉炒白以后，倒入生抽提味：&lt;/p&gt;

&lt;p&gt;翻炒均匀，炒半分钟左右后，放入西红柿，目的是提鲜：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/2BBBAD00-BE53-46EB-9F99-7FB5090A57FC_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/27D10E5A-0EA2-47FC-B7C9-07E9960080FE_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;翻炒均匀，大概炒半分钟后，加入半勺盐（约 1 克）：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/4C5055FA-4C55-486A-A5F2-0056322E160C_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;继续翻炒均匀，直到西红柿变软到皮都掉，西红柿肉变烂，然后加入豆角：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/FE8C37AD-430A-47EA-AE39-08E2BB99CA72_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;翻炒均匀，至豆角都沾上锅内的食材的味道后，加入老抽上色：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/36EF7CE4-78E3-4022-9E88-E553909129B3_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此时再加入半勺盐（约 1 克）：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/4E6D7E77-6130-4024-AFEC-F159F6D3711D_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;翻炒均匀，然后加入食用水至刚好没过食材：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/93846377-B686-4184-800B-79380961CDEF_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;之后盖盖，小火煮 20 分钟：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/5C254E48-FDB8-4E37-A76F-E24C66FAE219_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;干完以上活儿之后，随手擦干净灶台：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/CCE94AE1-46AD-4A34-B17B-190CC53D9BFD_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;时间到了差不多的时候，看食材基本熟了后，尝一尝咸淡，没问题之后，保证水刚好处在食材下面一点（不能过少，也不能没过食材）：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/1398C533-B68D-4DE5-B7E2-EA36EFF99EB4_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后放入面条，摊均匀，注意不要把面条接触到锅，不然锅的温度比较高，而且没有水，比较容易糊：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/53397255-EC27-42B3-BB32-1A105F812223_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;盖上盖子，继续煮个5分钟：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/F2717211-4D4A-495C-BF7B-DE050B8D72F0_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在此过程中，不要走开，随时观察水量的多少（如果对水蒸发的速度没有把握的话），水不要烧干，要还有一点水，这样可以适当浸润面条，然后将食材和面条搅拌均匀，就可以出国了。&lt;/p&gt;

&lt;h2 id=&quot;成品欣赏&quot;&gt;成品欣赏&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/dou-jiao-men-mian/0E24E86D-52ED-4770-BFD9-3D077E4D183F_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;关键点&quot;&gt;关键点&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;一定要加西红柿，这是秘方。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;最后的水，不要太多，也不要太少。太多的话，面条会比较咸，太少的话，面条又太干。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 11 Apr 2022 23:07:19 +0800</pubDate>
        <link>https://www.xheldon.com/life/dou-jiao-men-mian.html</link>
        <guid isPermaLink="true">https://www.xheldon.com/life/dou-jiao-men-mian.html</guid>
        
        <category>生活</category>
        
        <category>美食</category>
        
        <category>主食</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>Apple TV 使用体验及相关问题</title>
        <description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;房子刚装修完要添置家具家电，因此电视肯定是必不可少的。以我这么些年买东西的经验，电子产品的话国产的品牌肯定是不考虑的，因为 &lt;a href=&quot;https://baike.baidu.com/item/%E6%87%82%E5%BE%97%E9%83%BD%E6%87%82/53156849&quot;&gt;懂得都懂&lt;/a&gt;。因此最后理所当然的选择了高端电视品牌——索尼——的低端型号：XR-65X90J，是所谓次世代 XR 芯片的入门款。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/9CD31EF6-CA60-4BBB-BA88-B92485438867_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;虽然买的是国外的牌子，但毕竟是国行的产品，因此按照广电总局一贯的尿性，会阉割一些功能。由于我在研究电视之前忽略了这一点，在电视上墙装好开机准备使用的时候才发现其原本支持的 AirPlay 功能被阉割了，这导致如果要想在电视上看视频，要么买一个乐播投屏的会员用手机上的视频会员投屏到电视上观看，要么再在电视上买一个各种视频服务的 TV 版本。&lt;/p&gt;

&lt;p&gt;乐播投屏，据称使用的是&lt;a href=&quot;https://www.v2ex.com/t/793532&quot;&gt;破解版的 AirPlay 协议&lt;/a&gt;，因此在安卓设备上（电视使用的都是安卓系统）可能会有一些视频的声画不同步，且不支持 4K 画质，而且还得额外下载软件，很不优雅。而再买一个各种视频服务的 TV 版…「我为什么花了 6000 多买电视之后，还要在同一家视频服务提供商手机和电视上掏两份钱，就因为安卓的电视动了某些人某些部门的蛋糕？」——媳妇儿的原话。&lt;/p&gt;

&lt;p&gt;因此，最终本着宁可把钱扔水里听响也不惯着国内的某些恶心服务的反骨原则，买了 Apple TV。至于为什么不买国产盒子，一个是因为家里设备都是苹果生态，还一个是因为「&lt;a href=&quot;https://zh.moegirl.org.cn/index.php?title=%E6%88%91%E6%98%AF%E8%AF%B4%E5%9C%A8%E5%BA%A7%E7%9A%84%E9%83%BD%E6%98%AFoo&amp;amp;variant=zh-hans&amp;amp;mobileaction=toggle_view_desktop&quot;&gt;恕在下直言，我不是针对谁，我是指国产的所有电视盒子&lt;/a&gt;」都是低价卖硬件，然后通过植入广告追回成本的电子垃圾。&lt;/p&gt;

&lt;p&gt;这里分享一个我之前使用乐视电视遇到的奇葩经历。我有次在用 Switch 连接电视玩儿塞尔达，Switch 跟电视之间的连接当然使用的是 HDMI 线连接。就在我肆无忌惮的在海拉鲁大陆耍流氓的时候，乐视电视屏幕的下方突然弹出来一个 XXX 剃须刀的广告。这让我大为震惊：Switch 输出信号到电视的时候，乐视电视居然能做到将广告浮层覆盖掉游戏信号，这种肆无忌惮的广告行为，简直太离谱了！&lt;/p&gt;

&lt;p&gt;加上其他一些原因如，开机广告、4K 支持、软件生态、以及最重要的，一个智能电视盒子该有的样子：简单和省心，而不是和电视盒子开发商、视频服务提供商斗智斗勇，因此最终选择了 Apple TV。&lt;/p&gt;

&lt;p&gt;我购买的 Apple TV 是直接从京东国际买的 32G 支持 4k 的 2021 最新款，用了大概半个月才邮到。需要注意的是京东国际买的东西不支持 7 天无理由退换货。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/111CFE67-B728-4917-8436-B0931BDB4C0D_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;网上有个关于 Apple TV 的笑话，大致意思是嘲讽苹果的这个命名方式，即叫 XX TV 却不是 TV（电视）。这个笑话不是没有道理，因为 Apple TV 其实就是一个和小米盒子、机顶盒一样的电视盒子而已。只不过它是苹果生态的东西，因此如果有其他苹果的设备，体验会无缝一点，除去这一点之外客观上讲没有其他优点。你说它支持 4K 视频输出、WiFi 6？&lt;a href=&quot;https://store.google.com/us/product/chromecast_google_tv?hl=en-US&quot;&gt;谷歌 TV 盒子&lt;/a&gt; 和 &lt;a href=&quot;https://www.amazon.com/fire-tv-stick-with-3rd-gen-alexa-voice-remote/dp/B08C1W5N87&quot;&gt;亚马逊火棒&lt;/a&gt; 也都支持。&lt;/p&gt;

&lt;h2 id=&quot;使用条件&quot;&gt;使用条件&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;这里说的使用条件，如果不满足并不是说不能用，而是说会缺少很多很棒的体验。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;非国区账号&quot;&gt;非国区账号&lt;/h3&gt;

&lt;p&gt;首先「因为一些众所周知的原因」，Apple TV 是没有国区国行的，这也是为什么你只能买海外版的原因。因此，你拿到设备后登陆中国的 Apple ID 账号后会发现，你甚至不能装任何软件（没有 App Store），而只能纯粹的用来当成一个 AirPlay 的设备。&lt;/p&gt;

&lt;p&gt;鉴于此，你需要一个非国区的 Apple ID，推荐使用美区的账号，应用比较全。因为需要和爱人组成家庭共享，所以我的主力账号是国区账号。而 Apple TV 使用的是美区的账号，充值是在苹果的美国官网上通过 Visa 信用卡购买充值卡进行充值（单独使用 Apple TV 不需要充值，只是这里多提一句，购买部分 App 的时候才需要付费，很多软件是免费的，比如 Youtube 等）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/E7325139-665F-4F0D-9A20-700B1145F956_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;科学上网的路由器和机场&quot;&gt;科学上网的路由器和机场&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;什么是科学上网？点击查看 &lt;a href=&quot;https://baike.baidu.com/item/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/56550286?fr=aladdin&quot;&gt;百度百科的解释&lt;/a&gt; ，本文的科学上网指的是&lt;strong&gt;合法的使用代理软件&lt;/strong&gt;，为了&lt;strong&gt;符合社会主义核心价值观的目的&lt;/strong&gt;，&lt;strong&gt;合法的访问国际互联网&lt;/strong&gt;的行为。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;什么是机场？点击查看 &lt;a href=&quot;https://baike.baidu.com/item/%E6%9C%BA%E5%9C%BA/74273?fr=aladdin&quot;&gt;百度百科的解释&lt;/a&gt;，本文的机场指的是提供代理节点的服务商，需要配合科学上网使用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因为 Apple TV 的封闭，其系统名叫 tvOS，基本可以认为是阉割版的 iOS 系统，且其没有开放系统代理的接口。因此你无法通过像在 iOS 单独安装小火箭、QuanX 等代理软件的方式让 Apple TV 科学上网。因此如果你想有一个较好的体验如在电视上看 Youtube、NetFlix、HBO 等服务的时候，你一定是需要一个科学上网的路由器。&lt;/p&gt;

&lt;p&gt;这个过程看似很麻烦，不过好在这个成本是一次性的，一劳永逸，因此值得投资。我用的是朋友推荐的 R4S 软路由的方式，以旁路由的方式进行连接。&lt;/p&gt;

&lt;h2 id=&quot;硬件介绍&quot;&gt;硬件介绍&lt;/h2&gt;

&lt;p&gt;包装内只有一个 Apple TV 本体、一个遥控器和 DC 电源线，因此你拿到手之后还需要一根 HDMI 的线才可以连接电视（买电视会带 HDMI 的线）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/D0D65DC4-7A09-47F9-8FF5-420F52A0730F_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;apple-tv-本体&quot;&gt;Apple TV 本体&lt;/h3&gt;

&lt;p&gt;本体接口有三个，DC 电源接口、HDMI 接口、网线接口，具体参数可以上网查。需要注意的是，你最好使用一根 HDMI2.1 的线连接电视，才能保证输出 4K 的视频（当前视频得是 4K的）。&lt;/p&gt;

&lt;h3 id=&quot;遥控器&quot;&gt;遥控器&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/4D193C9F-5404-4D0E-B93A-7C23F94867C6_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2021 最新款的遥控器相比于上一个版本移除了陀螺仪。其在右侧有一个 Siri 的按钮，但是 Siri 语音有限制，需要将系统语言设置为支持的语言才行，否则是不可用的。不过好在我也没有在 Apple TV 上使用 Siri 的场景。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/550701FF-6652-44B4-A6AB-90520A0BC068_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/45E7926C-5290-48FE-9909-C2ACF215CFA7_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;另外，我始终没有搞明白苹果的这个账号体系之间的关系。&lt;/p&gt;

&lt;p&gt;我的播客和照片是跟着国区 id 的，打开可以看到是我的主力国区账号的内容，但是音乐和 App Store 是美区的。我之前一直以为播客和音乐及 App Store 和 iTunes 是跟着 iTunes id 的，照片是跟着 iCloud id 的，看来我还是不够了解苹果的账号体系。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/95B42D16-2181-4CE6-A349-A97AB7681E83_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/85C81340-5ED6-4C6C-9FED-54EBDFF90021_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;新购 Apple TV 送三个月的苹果自产的视频服务 Apple TV+ 和三个月的 Apple Music。&lt;/p&gt;

&lt;h2 id=&quot;安装软件&quot;&gt;安装软件&lt;/h2&gt;

&lt;p&gt;安装软件和在 iOS 一样在 App Store 中搜索即可，没有上手成本。&lt;/p&gt;

&lt;p&gt;不过这里需要注意的是，如上所言，推荐在 Apple TV 上对 App Store （iTunes Store）单独登陆非国区账号，而&lt;strong&gt;设备账号（iCloud 账号）还是使用国区的账号&lt;/strong&gt;较好（如果你的主力账号是国区的话），这样的话你的照片应用中显示的是国区账号的照片，可以在 TV 上查看照片（否则白白浪费了一个应用）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/AA65E53B-E17C-4B63-BD7E-EF20BCF76DC0_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;另外这么做的最大的好处是，当时在 TV 上需要使用键盘的时候，你登陆相同 Apple ID 的手机或平板会自动显示出一个通知（仅限当设备在附近的时候），提示你可以通过手机键盘输入内容，甚至不用手机解锁也可以使用，体验非常好（相信你肯定有过使用遥控器在电视上输入内容的糟糕体验了）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/22C1A388-7EAE-4F48-9CB8-CAE3793AFCFC_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;手机会弹出如下界面，直接输入即可：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/FB9FB5B6-2EA1-47BD-8E56-7E1DF62936FE_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;视频&quot;&gt;视频&lt;/h2&gt;

&lt;p&gt;我通过 Apple TV 看视频的方式有四种，分别是：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;AirPlay&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;视频整合服务，代表是 Emby 等&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;直接下载视频软件观看&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;使用国内支持 WebDAV 协议的网盘观看（我目前使用的方案），如 阿里云盘。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;airplay&quot;&gt;AirPlay&lt;/h3&gt;

&lt;p&gt;最直接也最简单的方式是 AirPlay，毕竟是苹果生态的东西，体验都是无缝的，可以将手机上的任何内容投屏到 TV 上观看，需要在同一 Wifi 下。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/5BB8B979-8DA3-42D2-9FF9-D3D52C6A5956_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;不过这里需要注意的是，由于国内各大视频服务提供商的一贯尿性，如果你是直接通过手机系统级的投屏，放到 TV 上进行观看，优点是手机上的全部内容都会显示在 TV 上，包括弹幕和手机的通知等，但是缺点也是很大的，即无法全屏：视频的上下总会有黑边，无法放大无法铺满。&lt;/p&gt;

&lt;p&gt;而如果使用视频服务提供商提供的投屏服务（一般在视频播放的右上角），会有一定几率出现无法投屏或者手机上显示已经投屏但是电视只有声音的情况，这个现象我目前没有发现必现的路径，纯粹是运气，不过好在一般情况下还是支持良好的，十次有七八次是成功的。不过这个方式的缺点是无法显示弹幕，如果要显示弹幕则必须在安卓电视上（不是 Apple TV 上）使用对应视频服务提供商的 TV 版本才行，手机上的视频客户端投屏（也是使用的 AirPlay）无法显示弹幕。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/6086592B-D350-4288-AAE4-1052C960B011_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;正常播放应该是这样子：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/21166625-89F6-4493-B831-2613E5755B9E_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;另外一点是，有些视频因为受版权保护，视频服务提供商是不提供投屏的功能的，此种情况常见于一些当下热门的剧，此时也只能使用第一种方式（可能也无法实现，因为软件会检测到是否当前正在投屏）。&lt;/p&gt;

&lt;p&gt;从这里也可以看出，如果厂商不想让你投屏，是完全有能力进行限制的。&lt;/p&gt;

&lt;h3 id=&quot;视频整合服务&quot;&gt;视频整合服务&lt;/h3&gt;

&lt;p&gt;此类服务有很多，违法是肯定违法的，但是因为比较难判定，比如我纯粹做慈善不收费（但是需要保持活跃度）的人很多，所以算是法律的灰色地带，另外一般情况下热门剧是不会立即上的，因为那段时间视频服务提供商是严堵时期，因为直接侵犯了其合法权益，不过如果是一个过气的剧集，就没这么麻烦了。另外这类服务大部分是国外的未过审的剧集如权利的游戏（未删减版）、武大头未删减版等等。&lt;/p&gt;

&lt;p&gt;当然，所谓存在即合理。当前版权问题愈发严重，有时候你只是为了看某一个平台的独占剧但是该平台其他的剧都很垃圾不感兴趣（点名优酷的甄嬛传）而不得不开通它的会员的话，就非常浪费钱了，因此就出现了一个可以整合各个视频服务的私有平台。&lt;/p&gt;

&lt;p&gt;窃以为此类服务没有受到国内各大视频服务提供商的围剿的一个很大的原因是，它太小众了，且里面的内容大多数是国外流媒体平台的内容，对国内的厂商没有直接的利益损失。&lt;/p&gt;

&lt;p&gt;我使用的服务是一个叫 Emby 的东西，它是一个协议，其设计目的是用来给个人构建家庭点播影院，类似于 NAS 的东西，不过也可以用来对外提供收费视频服务。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/84DD7704-7AFF-4103-BF31-72A350E9B9B4_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;基本原理就是将尽可能多的电影存到硬盘里面（此类硬盘通常以 T 甚至 PB 来计数），然后在连接上网络之后，就可以点播硬盘上任意一部电影，非常适合电影收集癖或者追求高级，非8K 电影、非杜比音效不看的人。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/9CFAE45F-DBA5-4CB2-85D5-4F49373BBDC3_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;有些 Emby 服务的提供商属于是自产自销类型的（我目前主力机场服务即是），即一边卖科学上网节点的（其靠流量收费），同时提供免费的 Emby 服务，然后限制使用此 Emby 服务观看视频需要使用它们的特定节点进行连接，这就消耗了它们的流量，于是你就需要付费购买流量，形成了一个闭环。&lt;/p&gt;

&lt;p&gt;说到这就说一下我的经历，在我使用的这家机场还未提供 Emby 服务的时候，我购买的套餐一个月有 500G 的流量，我平常只是查查资料、看看文档、看看 TED 和 Youtube、刷刷 Tiktok，每月最多使用10 G 的流量，非常浪费。然而当机场提供 Emby 服务之后，我一个周六就可以消耗 70G 的流量，可见该自产自销策略的成功之处。&lt;/p&gt;

&lt;p&gt;于是有些人就发现了商机。这些人专门提供 Emby 视频服务，然后和机场服务合作，让其将 Emby 当作一项增值服务提供给它的机场用户，如此一来，既提高了机场用户的粘度，又能让 Emby 服务商专心做 toB 的服务，解决了用户群体的问题，简直双赢。此类服务以 普拉斯影业 为代表。&lt;/p&gt;

&lt;p&gt;现在网上有很多号称免费提供 Emby 服务的播放源，懂得都懂，它们并不免费，消耗的是你的精力和时间（如需要回答问题、定时签到做任务、保持活跃度否则销号等，简直把人当猴耍），因此这里建议找一些靠谱的朋友，去买一个口碑较好的 Emby 服务提供商（从实际情况看，因为违法，因此此类服务并不能通过搜索引擎得到，需要注意甄别假冒骗钱的网站，靠已经在使用的朋友推荐是最保险的办法）。&lt;/p&gt;

&lt;p&gt;目前我在 Apple TV 上使用的支持 Emby 协议的客户端是大名鼎鼎的 Infuse 7。此类软件的最大好处一个是即点即播，一个就是可以给你自动匹配你想要的字幕，不用你再单独上网找字幕然后设置为与视频同名来挂载了，还会自动下载元数据。它的元数据不是根据你的视频名，而是根据你的视频内容来拉取的，具体是怎么实现的不清楚。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/9AFF44A0-6796-4ADA-B5F6-1DE5EDDDA1E0_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;也即，即使你下载了一个名叫《夏洛T烦恼》（懂得都懂，热门剧刚出的时候，用迅雷下载防和谐会故意将名字改名），它也能正确给你匹配出影片的信息。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/A642EE4B-CE4A-4DE0-B6AE-5CB58FEDBA9B_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;该软件需要付费订阅或者买断。我选择的是按年一年 9.99 美元，一个月不到 6 元人民币。其服务可以试用一个月，过期后将无法再看视频，点播放的时候会直接跳到付费页。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/E4E8CE18-2FF8-4B11-A012-B8D5975DF451_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;需要额外说一句的是，这个价格只是你的软件价格，视你的美区账号设置的地区情况，你可能需要额外再缴一笔税：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/1D875C5F-9D7B-4055-A147-48E05476D45B_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;infuse 首次使用时，登陆完 Emby 服务后，会进行一个扫库操作，也即是将该 Emby 服务中的所有电影都扫描一遍 meta 信息，建立索引，以方便你通过搜索进行电影查找。该扫库过程视节点速度、网络带宽、是否高峰期等因素影响，这个过程中右上角的搜索 icon 会一直 loading 转圈，此过程进行的过程中无法播放视频（因为没完全建立索引）。我的 Emby 服务提供商库里面约有 17万部电影，机场峰值速度据称是 300Mbps，扫库这个操作花了大概 1 个小时左右的时间。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/FEAEE241-DDC0-479D-A4BF-AD7A725BBF37_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里需要注意的是，infuse 如果看多了视频的话，似乎很占用空间，我的 Apple TV 是32G 版本的，除去系统占用和其他 App，怎么着也得有个 20G 的空间，但是有一次我打开 infuse 的时候，软件居然提示我文件因为占用空间过多被系统清理了，因此又重头进行扫库操作。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/64A8E3C7-A5DE-4E89-B3FA-A53EF4B82FDD_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个软件还大概一个月约两三次的时候，打开会提示正在优化空间和 meta 信息，需要等几分钟才能使用。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/A76CE877-8D49-4741-8380-CCE90F8E3A57_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;不知道这个跟我的 32G 空间太小有关，还是软件设计如此。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/9B557ECC-AB37-44B1-A1BF-A061AACF2387_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;播放效果（跟片源和电视有关）：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/6F924E4B-8D8A-44AA-8DB7-DB452D5CA567_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;另外，还可以使用一个叫 Emby 的 App，不过它经常抽风打不开（就是一直在 Loading 界面），而且无法拖动进度条（后来才知道是视频服务提供商的锅）我就没用了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/2A7966B3-F09B-4256-8C72-50DAA2ADC959_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果有幸能使用的话，播放界面也很精美：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/DAE61178-D292-4C8F-B8C6-30D29DE34270_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/98EA12E1-B7A3-4B47-A3B5-0E3018DCE436_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是，因为这类服务是需要机场的，&lt;strong&gt;因此服务并不稳定&lt;/strong&gt;，一直 Loading 加载是常用的事情，所以除非觉得网速非常好，所以一般跟媳妇儿一起看电影的时候，我不使用此方案，因为看一会儿就 Loading 的时候很影响心情，会被骂。&lt;/p&gt;

&lt;h3 id=&quot;视频软件&quot;&gt;视频软件&lt;/h3&gt;

&lt;p&gt;当然，你也可以选择直接在 Apple TV 上安装视频软件，但是美区的 App Store 无法下载国内的各大视频软件如爱奇艺、腾讯视频等，你只能下到这些视频的海外版。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/8BF071E5-7B34-4770-AD8F-CBC51F1AE046_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这些国内视频服务提供商的提供的海外版本，没有广告，或者广告非常短（相比于国内 30s 视频让你看 45s 广告而言），但与此相对应的，视频内容也少的可怜，猜测可能是版权问题如当前热剧只能在大陆播放，且会员费用很贵（因为是按国外的收入标准收费的，换算成人民币当然很贵）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/F581090E-0280-489D-970C-1B572E9F94DB_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此方案用来追国内剧属于是不可用的，我只是拿来说说，因为指不定万一哪天文艺复兴、晋太元中、大清亡了呢？国外剧的话可以直接下载 Netflix 等软件即可，因为国外的视频服务提供商对版权保护很严格，比如美洲的剧不能在亚洲播放，因此你的机场要购买能够解锁这类视频服务的才行，购买机场服务的时候此功能会被当作一个卖点拿出来说的（下图中的机场价格属于是高端产品了，请无视）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/IMG_0022.jpeg.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;另外如果你不追剧，只是看一些博主的话，直接在 Apple TV 上下载 YouTube 就可以了，不像在安卓电视上得单独下载 YouTube for TV（也叫什么 smart Youtube）。安卓电视直接下载 YouTube 的话会因为缺少谷歌套件无法使用出现闪退的情况。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/CBAB1105-B9B1-48A2-81CF-18016684CDFD_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;另外，Apple 也有自己的自制剧，该服务叫 Apple TV+，只需要订阅即可（跟订阅 NetFlix 一个道理），新购 Apple TV 送一个月的会员（还是三个月我忘了，之前都是送一年的），有一些苹果的自制剧如《看见》（马王主演）、《基地》、《为了全人类》等，我没兴趣，所以试用了一个月后就取消了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/847B3C92-5C9D-4DCA-A0B1-056AB1A866D0_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/AE2EED5B-0F2A-4B2B-82B3-93DE99CCBEE9_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;支持-webdavsmb-等协议的云盘或者本地共享&quot;&gt;支持 WebDAV、SMB 等协议的云盘或者本地共享&lt;/h3&gt;

&lt;p&gt;此类以阿里云盘为代表（此处点一下 百度网盘），其不限速的同时支持 WebDAV 协议，使用一个支持 WebDAV 协议的 Apple TV 客户端即可观看网盘里面保存的视频。上面说的 Infuse 软件「恰好」就支持 WebDAV。加上由于是国内的网速，因此观看 4K、蓝光等片源是非常棒的体验。缺点是无法看违禁电影会被和谐。&lt;/p&gt;

&lt;p&gt;另外此方案有一个门槛是，你必须有一个软路由/Docker 来进行一个所谓的中转服务的作用，直接使用客户端是不行的（阿里云盘不提供直接对外的 WebDAV 服务）。因此这里我还是使用 R4S 软路由，装了 Github 上的阿里云盘 WebDAV 插件，简单配置一下，即可构建一个本地的 WebDAV 服务，然后在 Infuse 中填写本地软路由的 ip 和端口号即可播放。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/434E2D9C-7661-4BB6-A829-F0F2D38BED07_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;还可以通过电脑的 SMB 共享的方式，让 Infuse 播放电脑上下载的电影：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/D0234040-BB60-409C-B6E4-77EDCCACCF3F_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;其他方案&quot;&gt;其他方案&lt;/h3&gt;

&lt;p&gt;有一些非正式的、比较 HACK 的方案，我自己没精力搞，各位看官有兴趣可以研究下，如：&lt;/p&gt;

&lt;h4 id=&quot;在-apple-tv-上刷-b-站miao-项目-网图&quot;&gt;在 Apple TV 上刷 B 站：&lt;a href=&quot;https://github.com/Paladinfeng/MiaoProject&quot;&gt;miao 项目&lt;/a&gt; （网图）&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/3BB01686-1848-475B-B4A2-12F2C1537730_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;电视直播&quot;&gt;电视直播&lt;/h2&gt;

&lt;p&gt;有些时候是有看直播的需求的，比如春节联欢晚会、冬奥会开幕式等，此时 Apple TV 就有明显的不足了，你可以淘宝购买一些直播源（如 IPTV 的），然后通过特定软件观看，但是终归不是正途，且这些直播源基本都是有时效性的，很快就会过期，这里不推荐。&lt;/p&gt;

&lt;p&gt;如果非要使用的话，可以使用 iPlayTV 这款软件，美区价格 5.99 美元，可以在 github 找一些播放源，如 &lt;a href=&quot;https://github.com/imDazui/Tvlist-awesome-m3u-m3u8&quot;&gt;这里&lt;/a&gt; ，直接添加地址即可，如下所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/94283D89-0867-4BE5-BE82-843DD9F2A6DF_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/518E6DBA-D33A-4635-849A-5C8059C76C8B_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/301C07D2-42EF-4D33-9E90-069805E3628B_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/64F471F8-25D0-404E-9A0C-3F0D2B95B1A8_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;更推荐的方式是直接在安卓电视上安装软件，我在电视上安装的软件叫 「央视频」，偶尔看看 CCTV-1 的直播，找回一下小时候的感觉，还是不错的。&lt;/p&gt;

&lt;h2 id=&quot;游戏&quot;&gt;游戏&lt;/h2&gt;

&lt;p&gt;是的，Apple TV，一个电视盒子是可以打游戏的，不过最新款（2021款）的Apple TV 的遥控器取消了陀螺仪的体感加速计传感器，因此无法使用遥控器玩儿一些需要体感的游戏如赛车了，不过你可以用上一代的遥控器，或者外接配对手柄，手柄我目前自测的支持 PS4，我还有一个 XBox 的手柄，但是没做测试，理论上应该也支持。&lt;/p&gt;

&lt;p&gt;不过，Apple TV 总归是个电视盒子，其主力并不是用来玩儿游戏，因此其机能十分有限（从它才 1000 多的售价就能看出来），因此除了最开始的好奇心之外，我一直没有用它来玩游戏。&lt;/p&gt;

&lt;p&gt;Apple TV 上玩游戏跟手机上一样，下载相应游戏 App 即可，没有上手成本。&lt;/p&gt;

&lt;h2 id=&quot;其他使用问题&quot;&gt;其他使用问题&lt;/h2&gt;

&lt;h3 id=&quot;apple-tv-无法控制电视音量&quot;&gt;Apple TV 无法控制电视音量&lt;/h3&gt;

&lt;p&gt;有些老旧的电视（如我之前用过的乐视电视），Apple TV 的遥控器无法控制电视音量，因此需要特别在 Apple TV 的系统设置中单独设置，基本操作是会让你使用电视遥控器先调到最低印象，再调到某一个音量，即可完成设置，之后你就可以通过 Apple TV 的遥控器控制电视音量。我买的索尼电视比较新，因此默认支持无需设置。&lt;/p&gt;

&lt;h3 id=&quot;打开-apple-tv-自动打开电视&quot;&gt;打开 Apple TV 自动打开电视&lt;/h3&gt;

&lt;p&gt;有些老旧的电视（如我之前使用过的乐视电视）无法做到，因此当时只能依次打开二者。这其实是靠一个通用的协议来实现此功能的，稍微新点的电视均支持。&lt;/p&gt;

&lt;h3 id=&quot;软件强退&quot;&gt;软件强退&lt;/h3&gt;

&lt;p&gt;有些时候软件会卡死，此问题尤其是我用 infuse 的时候经常出现，比如按了播放之后，进入播放 loading 界面，然后在还未开始播放的时候我按了暂停，之后再按播放就无法播放了，只能强退后重新进，而强退后大概率是需要重新 loading 的，非常烦人，我都想放弃 infuse 了。软件强退的方式是双击 home 键，也即返回键右侧的那个键即是，然后和 iOS 一样，上滑退出：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/apple-tv-using-and-problem/8B3D08CD-72B7-42F7-AD76-9CB6E73B754F_2.jpeg&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;其他&quot;&gt;其他&lt;/h3&gt;

&lt;p&gt;其他想到的，在这里补充。&lt;/p&gt;

&lt;h2 id=&quot;写在后面&quot;&gt;写在后面&lt;/h2&gt;

&lt;p&gt;本文整体上写了使用 Apple TV 可能会遇到的各种问题，有些问题如果没有一些技术背景可能很难解决。不过，只要想解决，你总会有办法的。&lt;/p&gt;

&lt;p&gt;本文内容并不全面，有一些还没有谈到的东西，欢迎交流。&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Mar 2022 10:16:48 +0800</pubDate>
        <link>https://www.xheldon.com/life/apple-tv-using-and-problem.html</link>
        <guid isPermaLink="true">https://www.xheldon.com/life/apple-tv-using-and-problem.html</guid>
        
        <category>Apple</category>
        
        <category>生活</category>
        
        <category>使用体验</category>
        
        
        <category>life</category>
        
      </item>
    
  </channel>
</rss>
