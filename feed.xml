<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xheldon Blog</title>
    <description>The Answer to Life, the Universe and Everything is...</description>
    <link>https://www.xheldon.cn/</link>
    <atom:link href="https://www.xheldon.cn/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 03 Feb 2023 09:49:37 +0800</pubDate>
    <lastBuildDate>Fri, 03 Feb 2023 09:49:37 +0800</lastBuildDate>
    <generator>Jekyll v4.2.1</generator>
    
      <item>
        <title>Slate 和 ProseMirror 简单对比</title>
        <description>&lt;p&gt;本人之前使用 PM 不到两年，开发过大型模块如智能表格等；使用 Slate 至今，经历过从 0.47 到 0.5+ 的大版本升级，算是有点发言权，鉴于圈内一些人总问我二者之间的差异，干脆写个博客简单来说说。&lt;/p&gt;

&lt;h2 id=&quot;slate-优点&quot;&gt;Slate 优点：&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;上手快，开箱即用，概念易懂，代码容易理解，尤其是对熟悉 React 的同学来说，其视图层完全基于 React，基本上一周就能上手理解。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;定制性强，可以根据自身的业务场景，魔改底层核心模块如 slate、slate-react 来扩展各种插件和架构，底层修改起来相对 PM 来说较为简单。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;可以很好的适配协同的场景，如 sharedb，基于 json 的几乎就是为 Slate 准备的。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;slate-缺点&quot;&gt;Slate 缺点：&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;作者修复 Bug 速度很慢，并不全职开发，基本靠社区维护，有些 API 明显不合理（如 .include，被坑过），或者有些 API 抛出异常，但是有些 API 会返回 null，明显没设计好，但是作者让你给他提 PR，而不是自己修复。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;API 不稳定，目前仍未发布正式版，还在 0.x 版本，将来架构变动可能会比较巨大。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;官方版本基本不可用，尤其针对 CJK 语言用户的输入法事件等来说，必须下载下来之后自己魔改一下才行。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;性能优化较为困难，因为视图层完全基于 React，所以优化这部分的代码几乎只能从优化 React 出发，React 只是通用型框架，在速度上并没有任何优势。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;代码没写好的话，很容易导致编辑器崩溃而导致编辑器不可用，除了修改框架代码，也没什么好的容错机制。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;数据流动不清晰，容易导致 bug 的产生，如你可以直接 editor.children 赋值，覆盖掉已有的编辑器内容，而不会有任何报错。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;光标问题、Mark 问题难以 hack，代码属于是入门级水平（个人理解）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;文档垃圾，有些文档和实际 API 表现不一致。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;跟 React 强绑定。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;移动端目前支持的不算太好，需要魔改。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;prosemirror-优点&quot;&gt;ProseMirror 优点：&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;作者全职维护，非常热心，积极回答社区问题。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;正式版发布三年多，API 一直很稳定。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;有大公司背书，Google 也是用作者的另一个 CodeMirror 项目（Chrome Devtools 的 Element Tab 用的就是），可信度高。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;数据流动清晰（虽然不好理解）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;没有 Slate 那么容易崩溃，报错也不会导致整个编辑器框架不可用，稳定性较高。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;作者是自由工作者，靠捐款维持生活，名正言顺的接受付费解 Bug，按小时计费，每小时 200欧（邮件问过，没记错的话）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;文档树模型我觉得很好用，Schema 限制严格以及基于文本/Token偏移的定位系统是精髓，不过也是难以协同的地方。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;不跟任意的视图框架依赖，可以用 React、View、Angular 开发视图框架，不过一般只有定制组件才需要，像 paragraph、heading、list 等，无需自定义 View 层，只需要使用 API 描述 DOM 结构即可。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;移动端支持较好。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;prosemirror-缺点&quot;&gt;ProseMirror 缺点：&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;一些概念较难理解，一些代码也难以理解（作者技术个人感觉深不可测）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;模块分散非开箱即用，需要一定的上手成本才能跑起来。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;基于 PM 的协同方案，实现起来相较于 Slate 来说比较困难，作者17年开了个 issue，说要写一个协同的 demo，现在还没写。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;上手难度较大，往往需要两周甚至一个月的时间才能开始开发基础功能。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;因为是自己实现的视图层（开发者也可以使用 API 来实现渲染自定义组件如 React 组件），所以如果框架本身的视图层出问题，较难定位和修复。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;几乎不可能魔改源码，成本很高，只能靠作者来修复。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;可以看下这个答主的对比，说的基本没什么大问题：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/404836496/answer/1323431059&quot; target=&quot;_blank&quot;&gt;主流的开源「富文本编辑器」都有什么缺陷？ - 知乎&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;美团的学城用的是 PM：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/404836496/answer/1326453810&quot; target=&quot;_blank&quot;&gt;主流的开源「富文本编辑器」都有什么缺陷？ - 知乎&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;

&lt;p&gt;Slate 适合大公司，因为他上手快（大公司依赖投入产出比，不然项目拿不到资源，做了 2 月还是个 Demo 你怎么给领导交代？），因此可以很快出成果，但是打磨完美又需要很大的人力来魔改底层，所以适合大公司，前期快速上手，后期加人魔改。另外扩展性非常强，魔改后几乎可以满足任何要求（比如我们就搞了各种模块和功能，如划线评论、分级标题折叠、嵌入第三方模块等）。&lt;/p&gt;

&lt;p&gt;Prosemirror 适合中小型公司，各平台支持的算不错，如果有 bug 也可以放心交给作者来修复，如果实在修不好就付费让作者修。虽然上手成本高，但是让中小型公司的主力研发摸索个两周应该也可以出 demo 了。&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Jan 2023 12:14:58 +0800</pubDate>
        <link>https://www.xheldon.cn/tech/prosemirror-comparison-with-slatejs.html</link>
        <guid isPermaLink="true">https://www.xheldon.cn/tech/prosemirror-comparison-with-slatejs.html</guid>
        
        <category>技术</category>
        
        <category>SlateJS</category>
        
        <category>ProseMirror</category>
        
        <category>对比</category>
        
        <category>编辑器</category>
        
        <category>选型</category>
        
        <category>框架</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>使用 Sharp 转换 HEIC/HEIF 图片遇到的问题</title>
        <description>&lt;p&gt;苹果相机在 iOS 11 之后，将相机默认的格式设置为了 HEIC，据说可以在不缩减照片质量的前提下，大幅缩减照片体积，你可以在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;设置-相机-格式&lt;/code&gt;  来查看，「高效」表示的就是 HEIC 格式，「兼容性最佳」表示的是原始的 JEPG 格式。关于 HEIC 格式更多介绍可以看 &lt;a href=&quot;https://www.adobe.com/hk_zh/creativecloud/file-types/image/raster/heic-file.html&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;由此带来的问题是，目前所有的 Web 浏览器都不支持显示 HEIC 格式的图片，因此如何转换该格式的图片就成为了一个问题。&lt;/p&gt;

&lt;p&gt;我经常将苹果相册中的图片直接从相册中拖拽或复制粘贴到 Craft 中，因此如果直接将该格式的图片上传到个人博客的话，是无法显示出来的，因此必须转换成通用格式如 PNG 或者 JPEG，这里我选择使用 Sharp 库进行转换，将其转换成了 Webp（因为 HEIC 转 PNG 太大了）。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lovell/sharp&quot; target=&quot;_blank&quot;&gt;GitHub - lovell/sharp: High performance Node.js image processing, the fastest module to resize JPEG, PNG, WebP, AVIF and TIFF images. Uses the libvips library.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;如果仅仅转换普通的格式如 JPEG 到 PNG，那么是没有什么问题的，但是如果是转换 HEIC 到其他格式，那麻烦就来了，因为这个过程 Sharp 依赖一个平台原生的工具库，叫 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;libvips&lt;/code&gt; ：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/libvips/libvips&quot; target=&quot;_blank&quot;&gt;GitHub - libvips/libvips: A fast image processing library with low memory needs.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;来处理 HEIC 格式的文件，因此如果你本地没有全局安装这个工具，那么处理 HEIC 格式的图片的时候就会遇到下面的错误：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Bash&quot;&gt;(node:11469) UnhandledPromiseRejectionWarning: Error: source: bad seek to 807962
heif: Unsupported feature: Unsupported codec (4.3000)

(Use `node --trace-warnings ...` to show where the warning was created)
(node:11469) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说是无法处理 HEIC 格式的文件。&lt;/p&gt;

&lt;p&gt;遇到问题第一时间当然是去官方仓库的 issue 查找相关解决办法，果然有人遇到类似的问题：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lovell/sharp/issues/2924&quot; target=&quot;_blank&quot;&gt;heif: unsupported feature · Issue #2924 · lovell/sharp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;于是按照他的说法，我使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;homebrew&lt;/code&gt; 安装了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;libvips&lt;/code&gt; :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.libvips.org/install.html&quot; target=&quot;_blank&quot;&gt;libvips&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这个过程需要挺久，会一直有 log 出现，耐心等待完成无报错即可。&lt;/p&gt;

&lt;p&gt;然后满怀信心的再次安装 Sharp &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install sharp&lt;/code&gt; 期待能看到这条信息：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Bash&quot;&gt;sharp: Detected globally-installed libvips v8.13.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;出现这条信息表明 Sharp 的安装脚本检测到本地安装了 libvips，但是当我再次安装 Sharp 的时候，它依然用的是已经下好的缓存:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Bash&quot;&gt;&amp;gt; sharp@0.31.3 install /Users/x/Code/test2/node_modules/sharp
&amp;gt; (node install/libvips &amp;amp;&amp;amp; node install/dll-copy &amp;amp;&amp;amp; prebuild-install) || (node install/can-compile &amp;amp;&amp;amp; node-gyp rebuild &amp;amp;&amp;amp; node install/dll-copy)

sharp: Using cached /Users/x/.npm/_libvips/libvips-8.13.3-darwin-x64.tar.br
sharp: Integrity check passed for darwin-x64
npm notice created a lockfile as package-lock.json. You should commit this file.
npm WARN test2@1.0.0 No description
npm WARN test2@1.0.0 No repository field.

added 45 packages from 206 contributors and audited 45 packages in 4.5s

10 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;于是我删除了上面 log 中缓存的文件 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rm -rf /Users/x/.npm/_libvips/&lt;/code&gt; 目录，然后再次执行，依然 无法使用系统版本的 libvips：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; sharp@0.31.3 &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; /Users/x/Code/test2/node_modules/sharp
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;/libvips &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; node &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;/dll-copy &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; prebuild-install&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;node &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;/can-compile &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; node-gyp rebuild &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; node &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;/dll-copy&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

sharp: Downloading https://github.com/lovell/sharp-libvips/releases/download/v8.13.3/libvips-8.13.3-darwin-x64.tar.br
sharp: Integrity check passed &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;darwin-x64
npm notice created a lockfile as package-lock.json. You should commit this file.
npm WARN test2@1.0.0 No description
npm WARN test2@1.0.0 No repository field.

added 45 packages from 206 contributors and audited 45 packages &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;10.727s

10 packages are looking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;funding
  run &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;npm fund&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;details

found 0 vulnerabilities
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;于是我决定 debug 这个包。&lt;/p&gt;

&lt;p&gt;首先从 log 开始，随便找一个看上去像是版本判断的 log，如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Using cached&lt;/code&gt; 作为关键字，在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules/sharp&lt;/code&gt; 包中搜索相关关键字，在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sharp/install/libvips.js&lt;/code&gt; 中发现如下代码：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;libvips&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`Using cached &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tarPathCache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;于是继续寻找，发现这个函数顶上有一个决定是使用系统内置的 libvips 还是它自己编译的不支持 HEIC 格式的二进制包的逻辑：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useGlobalLibvips&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;libvips&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useGlobalLibvips&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;基本就是这里了，debug 了这个函数，发现在判断 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;isRosetta&lt;/code&gt; 的时候，返回了 true。发现如果是返回 false，就会使用系统内置的 libvips，否则就使用它自己编译的 libvips：&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/problem-use-sharp/ACF229E4-D77E-46AD-B1D2-98A4AA970669_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里出现了一个奇怪的情况是，在 debug 的时候，process.arch 输出的是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x64&lt;/code&gt; ，且 log 这个代码输出的是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sysctl.proc_translated: 1&lt;/code&gt; ：&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/problem-use-sharp/A0492569-B12D-45B5-B05B-40B5DB1B7459_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是直接在控制台执行该代码，输出的是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sysctl.proc_translated: 0&lt;/code&gt; ：&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/problem-use-sharp/4616C1B5-102F-4A3C-AF71-CC0BA49530AB_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里我就得出结论，肯定是 node 的版本问题导致了它使用了自己编译的 libvips。于是我使用 nvm，将默认 node 版本切换到 arm64 版本后，再次执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm i sharp&lt;/code&gt; ，问题解决。&lt;/p&gt;

&lt;p&gt;下面是这个过程可能用到的代码：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// 列出 nvm 版本&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;nvm&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 输出当前电脑的架构&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;arch&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 如果输出的是 arm64 表示就是 M1 芯片&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 使用最新的稳定版&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;nvm&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stable&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 我的机器给我安装了 19.3.0 的 arm64 版本的 node&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 将该 node 作为默认&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;nvm&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 在当前终端使用 19.3.0 版本的 node&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;nvm&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;19.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;随后给作者提了个 PR，来修改 isRosetta 的逻辑：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lovell/sharp/pull/3514&quot; target=&quot;_blank&quot;&gt;Get real architecture of M1 Mac regardless of Rosetta by Xheldon · Pull Request #3514 · lovell/sharp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;但是作者解释说这个函数这么做是有原因的，因此我建议他在安装 Sharp 的时候提醒用户并未使用全局安装的 libvips 包的原因，最终作者采纳并接受了我的意见：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lovell/sharp/commit/5be36c2deb735577fc76fa52242836d40df276bd&quot; target=&quot;_blank&quot;&gt;Install: log Rosetta detection, improve related docs · lovell/sharp@5be36c2&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 05 Jan 2023 12:06:50 +0800</pubDate>
        <link>https://www.xheldon.cn/tech/problem-use-sharp.html</link>
        <guid isPermaLink="true">https://www.xheldon.cn/tech/problem-use-sharp.html</guid>
        
        <category>技术</category>
        
        <category>格式</category>
        
        <category>转换</category>
        
        <category>压缩</category>
        
        <category>开源</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>2023 年展望和 2022 年回顾</title>
        <description>&lt;p&gt;本来我是并不打算写这些东西的，因为我并不是一个仪式感特别重的人。但是 2022 年是一个从各个方面来说都注定不平凡的一年，因此我想趁着 2023 年元旦来临的时候，回顾一下我的 2022 年，算是对疫情时代的告别。当然有告别就有迎接，所以本文中也会有对 2023 年的规划和展望。&lt;/p&gt;

&lt;p&gt;可能有点偏时间线叙事或者流水账式的索然无味，看看就好。&lt;/p&gt;

&lt;h2 id=&quot;2022-年-q1辞旧迎新&quot;&gt;2022 年 Q1：辞旧迎新&lt;/h2&gt;

&lt;p&gt;2022 年元旦去了自然博物馆，感受了一下「我们是谁，我们从哪里来？」的灵魂拷问：&lt;/p&gt;

&lt;p caption=&quot;灵魂拷问&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/60C79845-C0E2-4E75-84A6-E96210CDFD7F_2.webp&quot; alt=&quot;灵魂拷问&quot; title=&quot;灵魂拷问&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;迎新&quot;&gt;迎新&lt;/h3&gt;

&lt;h4 id=&quot;搬新家&quot;&gt;搬新家&lt;/h4&gt;

&lt;p&gt;当然，搬入新家是开年的头等大事。经过了 3 个多月的装修以及两个月左右的通风晾味，我们终于搬进了北京的这所属于我们自己的小房子里面。装修期间有很多不愉快，比如：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;我们发现卫生间暖气顶上「可能」存在漏水隐患，于是想联系楼上我们出钱让暖气公司把管道换一换，但是未果，甚至吵了起来，最终作罢。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;定制的橱柜、客厅柜，或多或少总存在一些与我们在店里体验的柜子丝滑度差异较大的问题；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;泥瓦匠施工的时候有些地方做的不地道，后期带来了一点麻烦。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;一些细小的地方。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;图为瓦工贴瓷砖期间所摄&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/DE1ED80A-1CE9-430E-AF22-A9DC7DFE084D_2.webp&quot; alt=&quot;图为瓦工贴瓷砖期间所摄&quot; title=&quot;图为瓦工贴瓷砖期间所摄&quot; /&gt;&lt;/p&gt;

&lt;p&gt;装修的事情如定方案、刷小红书、做功课装修注意事项、选建材、买家具，基本都是她一个人在操心，我扮演的角色只是早上去工地跑跑腿检查一下施工师傅有没有偷懒和施工进度以及家庭网络结构设计，在此感谢老婆的耐心、细心、操心和决心。&lt;/p&gt;

&lt;p caption=&quot;图为摆拍&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/B4CAF19C-9EDF-470B-ABDD-8B9A68AFF452_2.webp&quot; alt=&quot;图为摆拍&quot; title=&quot;图为摆拍&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;购买-ps5&quot;&gt;购买 PS5&lt;/h4&gt;

&lt;p&gt;因为一些众所不周知的原因，老婆打赌输了，赌注是一台国行 PS5，在朋友的以身试法确定可以登录外区账号之后，果断下单了一台。下单的同时还买了《双人成行》，但是由于一些莫名其妙我难以理解的原因，老婆并不跟我一起玩 PS5，原因不明。之后还开通了 PS 会员，开心的进入了主机玩家的行列。&lt;/p&gt;

&lt;p caption=&quot;图为 战神4 系列&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/BFC43007-C825-4548-A6EF-D657CA915FE1_2.webp&quot; alt=&quot;图为 战神4 系列&quot; title=&quot;图为 战神4 系列&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;辞旧&quot;&gt;辞旧&lt;/h3&gt;

&lt;h4 id=&quot;送走黏糕&quot;&gt;送走黏糕&lt;/h4&gt;

&lt;p&gt;因为媳妇儿的鼻炎日益严重，以至于到了要做手术（切除腺样体）的地步，因此我们做了一个艰难的决定：把黏糕送走。&lt;/p&gt;

&lt;p caption=&quot;图为可可爱爱的年糕&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/25D09F7E-550B-4C65-83D8-702F1A25D4FD_2.webp&quot; alt=&quot;图为可可爱爱的年糕&quot; title=&quot;图为可可爱爱的年糕&quot; /&gt;&lt;/p&gt;

&lt;p&gt;起先是联系了我的同事，他们家有一只大橘，想找一个伴陪着，两只猫不孤单——其实这也是我的想法，因为只有一只猫自己在家太孤单了——起初是挺好的，两只猫刚认识互相躲得远远的很正常，但是相处了一周之后还是会打架而且大橘这么大体型居然打不过我家猫…于是最终还是被「遣返」回来了。&lt;/p&gt;

&lt;p caption=&quot;图为年糕和大橘&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/20F64A0B-1EF4-4895-9CEB-8DE98ADA4EE3_2.webp&quot; alt=&quot;图为年糕和大橘&quot; title=&quot;图为年糕和大橘&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最终，我们把黏糕送给了老婆的朋友家「暂时」养着，将来还是需要找好心人领养，哎，苦命的黏糕。&lt;/p&gt;

&lt;p caption=&quot;图为黏糕和他的姐妹&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/DC85FB33-6D55-4FC9-9A56-EFA7A271CE20_2.webp&quot; alt=&quot;图为黏糕和他的姐妹&quot; title=&quot;图为黏糕和他的姐妹&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2022-年-q2万物复苏&quot;&gt;2022 年 Q2：万物复苏&lt;/h2&gt;

&lt;p&gt;去春游！&lt;/p&gt;

&lt;p caption=&quot;图为奥森公园里的花骨朵&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/DF75C5D3-EE39-4482-B362-AAE57BCABD00_2.webp&quot; alt=&quot;图为奥森公园里的花骨朵&quot; title=&quot;图为奥森公园里的花骨朵&quot; /&gt;&lt;/p&gt;

&lt;p&gt;去吃好吃的！&lt;/p&gt;

&lt;p caption=&quot;图为潮汕牛肉火锅&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/ABC55E8F-8869-4B01-8346-632722F0CEA4_2.webp&quot; alt=&quot;图为潮汕牛肉火锅&quot; title=&quot;图为潮汕牛肉火锅&quot; /&gt;&lt;/p&gt;

&lt;p&gt;去做手术！ （切除腺样体）&lt;/p&gt;

&lt;p caption=&quot;图为即将进手术室的小王&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/13A24EF3-E55F-45C9-9BA8-D92629996E7E_2.webp&quot; alt=&quot;图为即将进手术室的小王&quot; title=&quot;图为即将进手术室的小王&quot; /&gt;&lt;/p&gt;

&lt;p&gt;去踏青！&lt;/p&gt;

&lt;p caption=&quot;图为望和公园&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/F40BDD9C-8998-473E-96C5-3634CFF33A92_2.webp&quot; alt=&quot;图为望和公园&quot; title=&quot;图为望和公园&quot; /&gt;&lt;/p&gt;

&lt;p&gt;去做饭！&lt;/p&gt;

&lt;p caption=&quot;图为空气炸锅烤地瓜&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/EC9BB4C7-B91A-4ABF-A9B0-181A73A1E200_2.webp&quot; alt=&quot;图为空气炸锅烤地瓜&quot; title=&quot;图为空气炸锅烤地瓜&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;图为面包鸡蛋青椒丁早餐&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/BE802FDF-58F6-46ED-AAE6-3B52F2023006_2.webp&quot; alt=&quot;图为面包鸡蛋青椒丁早餐&quot; title=&quot;图为面包鸡蛋青椒丁早餐&quot; /&gt;&lt;/p&gt;

&lt;p&gt;去测甲醛！&lt;/p&gt;

&lt;p caption=&quot;图为甲醛检测仪工作中&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/7BAD55C9-033E-4FFA-A67F-8AD60E6AC47E_2.webp&quot; alt=&quot;图为甲醛检测仪工作中&quot; title=&quot;图为甲醛检测仪工作中&quot; /&gt;&lt;/p&gt;

&lt;p&gt;去加班！&lt;/p&gt;

&lt;p caption=&quot;图为工地夜景 &quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/88D2CC69-87FC-427D-8FBD-8A2830B4ABF8_2.webp&quot; alt=&quot;图为工地夜景 &quot; title=&quot;图为工地夜景 &quot; /&gt;&lt;/p&gt;

&lt;p&gt;去逛街！&lt;/p&gt;

&lt;p caption=&quot;图为蓝港街拍&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/23785079-569B-4724-9F95-4D79E65566A1_2.webp&quot; alt=&quot;图为蓝港街拍&quot; title=&quot;图为蓝港街拍&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2022-年-q3快乐暑假&quot;&gt;2022 年 Q3：快乐暑假&lt;/h2&gt;

&lt;h3 id=&quot;天文博物馆参观&quot;&gt;天文博物馆参观&lt;/h3&gt;

&lt;p&gt;侄子暑假过完要升初二了，加上丈母娘赔他去省城做一个口腔积液的小手术，顺道就来北京看看小王，顺便让我辅导一下侄子的物理。空闲之余还会去博物馆参观，打打游戏，我时常想：如果我小时候有一个能带我去天文博物馆的姑父，我不得乐疯了。&lt;/p&gt;

&lt;p caption=&quot;图为参观天文博物馆期间&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/A81E1B3F-65C0-4183-91ED-91380E2B4AA5_2.webp&quot; alt=&quot;图为参观天文博物馆期间&quot; title=&quot;图为参观天文博物馆期间&quot; /&gt;&lt;/p&gt;

&lt;p&gt;期间也跟老婆达成共识，侄子将来肯定要学文科的（搞得好像是自家孩子一样），因为他对物理现象和天体规律或者说白了就是世界运行的基本规律并不感兴趣，充其量只是想知道一个答案，并不细想背后的原因。加上对他乐观能说会道的性格的了解，我和老婆一致认为最适合他的工作是：公务员。&lt;/p&gt;

&lt;h3 id=&quot;通关双人成行&quot;&gt;通关双人成行&lt;/h3&gt;

&lt;p&gt;上面也提到，因为一些我不知道的原因，老婆不愿意和我一起打双人成行，于是趁着侄子来北京，和他将其通关了。他的评价：这游戏太好玩了！以至于我后续和他一起玩儿的如 Magicka、麻布仔大冒险、忍者神龟：施耐德的复仇、分手厨房、分手搬家、Unravel 等双人游戏，都表示不如双人成行，果然一上来就拔高了预期不行啊，由奢入俭难。&lt;/p&gt;

&lt;p caption=&quot;图为忍者神龟：施耐德的复仇&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/8D22F1AC-7C63-4899-B22D-3F43E73A879B_2.webp&quot; alt=&quot;图为忍者神龟：施耐德的复仇&quot; title=&quot;图为忍者神龟：施耐德的复仇&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;北大红楼&quot;&gt;北大红楼&lt;/h3&gt;

&lt;p&gt;基本就是电视书上宣传的那一套，里面的工作人员会不停走动来保证你在他们的视线范围不会消失超过 30s，以防你做出什么不好的举动。&lt;/p&gt;

&lt;p&gt;这里我还观察到的一个特色是，工作人员长得都非常帅气和漂亮，不知道是不是特意筛选过的。&lt;/p&gt;

&lt;p&gt;我寻思这里的工作人员工作挺棒的，每天来这儿走来走去，说不定还有轮岗调休之类的，还是体制内带编制。于是我上前问了一下其中一位工作人员：&lt;/p&gt;

&lt;p&gt;我：你们在这儿上班有编制吗？&lt;/p&gt;

&lt;p&gt;答：没有的，我们只是物业。&lt;/p&gt;

&lt;p&gt;说着亮了亮胸前的牌子，我这才看到他身上带着的「首开物业」的标志，尴尬。&lt;/p&gt;

&lt;p caption=&quot;图为北大红楼中所摄&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/85C93492-715F-47B8-866B-4A8D50E564B0_2.webp&quot; alt=&quot;图为北大红楼中所摄&quot; title=&quot;图为北大红楼中所摄&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;北灵山徒步&quot;&gt;北灵山徒步&lt;/h3&gt;

&lt;p&gt;在城市里呆久了总想想出去走走，于是和朋友一起去山上徒步看风景了。因为需要早上起的比较早，小王就没去。&lt;/p&gt;

&lt;p caption=&quot;图为徒步期间拍摄 &quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/47C6CB5F-AE96-4A44-BD54-A42549DACDE5_2.webp&quot; alt=&quot;图为徒步期间拍摄 &quot; title=&quot;图为徒步期间拍摄 &quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;环球影城&quot;&gt;环球影城&lt;/h3&gt;

&lt;p&gt;团建去的，用同事的话说就是：坐了一天的过山车。因为基本每个 IP 中，如小黄人、变形金刚、哈利波特、侏罗纪公园等，让你身临其境让你体验的方式都是「5D 过山车」，就是那种人在上面做，座位在轨道上动，带上 3D 眼睛，同时配合轨道两侧的声光特效甚至喷的水，让你体验到「身临其境」的感觉。&lt;/p&gt;

&lt;p&gt;说实话这种「5D」体验，玩个两次就开始腻了，期待能有更多的形式展现吧！&lt;/p&gt;

&lt;p caption=&quot;图为哈利波特中会飞的车&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/93DF15EC-5232-49B1-93BE-3F02B71AA17F_2.webp&quot; alt=&quot;图为哈利波特中会飞的车&quot; title=&quot;图为哈利波特中会飞的车&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;打乒乓球&quot;&gt;打乒乓球&lt;/h3&gt;

&lt;p&gt;同事间兴起一股打球热，最可气的是还是那种器材党的打球热，于是我也入手了一款 800 块左右的球拍，感觉还不错。&lt;/p&gt;

&lt;p caption=&quot;图为交流病情中&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/867DAE00-FB2D-434E-B9AC-715E24E230E6_2.webp&quot; alt=&quot;图为交流病情中&quot; title=&quot;图为交流病情中&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;陪父母游北京&quot;&gt;陪父母游北京&lt;/h3&gt;

&lt;p&gt;国庆的时候小王提出想回家看看，但是不想带我去，因为她觉得我什么都听她的，如果带我去她家，会让我父母觉得她不想去我家（哎我最烦这种亲戚关系猜心思了，但是小王考虑的很全面，这点我很佩服）。于是我又一个大胆的决定：把我父母接到北京旅游。于是当场问了下父母是否有时间，回答是有，于是立即下单购买了往返的高铁票。&lt;/p&gt;

&lt;p&gt;我妈说这一趟来主要目的是爬长城，于是在去过恭王府、北海公园、国际惯例的天安门之后，就带着她去爬长城了。&lt;/p&gt;

&lt;p caption=&quot;图为恭王府的猫&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/DCCD6BD7-A8F5-4FF8-A57A-F6D3A6388A56_2.webp&quot; alt=&quot;图为恭王府的猫&quot; title=&quot;图为恭王府的猫&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;图为胡同里的猫&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/9DC6B414-A33E-4F19-B0F5-F19A9DF66438_2.webp&quot; alt=&quot;图为胡同里的猫&quot; title=&quot;图为胡同里的猫&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这次终于爬上了最高点后又到了北 10 楼，几乎快走完全程了，我甚至没有感觉得很累，之前陪丈母娘爬长城的时候，爬到北四楼就很累了。难道是之前打乒乓球锻炼了脚力的原因？&lt;/p&gt;

&lt;p caption=&quot;图为爬长城期间拍摄&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/96FC2840-9756-42AA-9AA7-16BFFB494CBD_2.webp&quot; alt=&quot;图为爬长城期间拍摄&quot; title=&quot;图为爬长城期间拍摄&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2022-年-q4黎明之前的黑暗&quot;&gt;2022 年 Q4：黎明之前的黑暗&lt;/h2&gt;

&lt;h3 id=&quot;复苏的疫情和莫测的政策&quot;&gt;复苏的疫情和莫测的政策&lt;/h3&gt;

&lt;p&gt;进入到冬天了，疫情又开始复苏，加上政策的多变，每个人做核酸的时候都积攒着怒气，就差一个二段 EQ 闪 + W 红怒爆发了。&lt;/p&gt;

&lt;p&gt;要是和平常一样，3 天 72 小时做一次核酸也没什么，毕竟大家都习惯了。但是很奇怪的是政府在年末的时候，开始无规律裁撤核酸点，想做核酸必须去很远的地方排队，而且一天比一天远。因为核酸点比较少，排队的人也非常多。同时核酸点还经常只做一上午，下午不做了，或者今天这个点做，明天就不做了。没有人能说清楚今天到底哪个地方还能做核酸。&lt;/p&gt;

&lt;p&gt;据我亲身体验，每次我去做核酸的时候，都会起冲突然后叫来警察。为什么呢？因为比如核酸点规定是 12 点下班，但是并没有人阻止你排队（大白告诉我们一个亭子只有两个人），于是大家都排着 1 公里的队伍，冷风中排了两个多小时，到自己的时候说关门不做了，搁谁不生气？于是就有人开始闹，堵住核酸点的门不让里面的人出来等极端手段，于是政府政策和人民实际需求之间的矛盾在执行岗的末端爆发了。&lt;/p&gt;

&lt;p caption=&quot;图为堵门老太太被大白推门撞倒后讹人时所摄&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/3C34704C-589E-4782-A5E8-564A7DD426FF_2.webp&quot; alt=&quot;图为堵门老太太被大白推门撞倒后讹人时所摄&quot; title=&quot;图为堵门老太太被大白推门撞倒后讹人时所摄&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;黎明的起点阳了&quot;&gt;黎明的起点：阳了&lt;/h3&gt;

&lt;p&gt;其实我是个政策敏感的人，平常会浏览一些国际媒体，因此信息摄入量不算少，自认为是一名「理中客」——也即理性、中立、客观。一切的迹象都在表明似乎解封指日可待，比如石家庄等地就开始不再要求核酸了，虽然据传闻该政策的领导后来被批，但是随后美国驻华大使馆发布了一条微博，建议美国公民备足半个月的食物、药品、水等生活必需品，于是我在这个时候意识到，北京可能也要解封了。&lt;/p&gt;

&lt;p&gt;虽然这波预判了一下北京解封，但是并没有采取相应的行动，还是那句话，北京不是上海：北京一句话河北就得乖乖的送来物资，快递员就得响应东哥号召进京弥补稀缺的外卖、快递配送员岗位。所以我并没有准备诸如感冒灵、布洛芬等家庭常备药。&lt;/p&gt;

&lt;p&gt;但是万万没想到解封来的太快有点猝不及防，也没有料到医院、药企的物品储备竟然再一次的和疫情当初当初的口罩一样，供不应求（这些政策制定者难道都不会吸取教训提前部署动员一下的吗？）。&lt;/p&gt;

&lt;p&gt;千言万语汇成一句话：傻逼。&lt;/p&gt;

&lt;p caption=&quot;图为不可抗力的具体表现&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/9B85B7FC-0F50-49DE-985E-134B14FF6CC8_2.webp&quot; alt=&quot;图为不可抗力的具体表现&quot; title=&quot;图为不可抗力的具体表现&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;图为解封后抗原自测&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/05C748FB-E02D-4F52-90E1-C7A350DD9E19_2.webp&quot; alt=&quot;图为解封后抗原自测&quot; title=&quot;图为解封后抗原自测&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;其他总结&quot;&gt;其他总结&lt;/h2&gt;

&lt;h3 id=&quot;2022-年游戏&quot;&gt;2022 年游戏&lt;/h3&gt;

&lt;p&gt;今年玩儿了：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;战地 1，手柄瞄准好难，没手感。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;战地 4 ，手感比战地 1 强点，起码开放大镜会自动辅助瞄准了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;战地 5 ，手感不错。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;狙击手 4，虐杀…我喜欢二战题材的射击游戏。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;忍者神龟：施耐德的复仇，复古怀旧。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;双人成行，双人欢乐加倍。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stray，可可爱爱的小猫咪搭配赛博风。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;使命召唤：现代战争，射击游戏，手感不错。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;底特律：化身成人，交互式游戏，很棒，最终全员和平结局。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GTA 5：怀旧了算是，没怎么玩儿。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;分手搬家，和侄子、老婆一起欢乐。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;极品飞车：热焰，开车呜呜呜。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;泰坦陨落 2，买了还没打开，看着不错。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;荒野大镖客 2，朋友推荐，还不错，就是比较杀时间，现在还在第二章。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;尝试并放弃了：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Biomutan，射击和动作结合，但是射击不用瞄准，很难受。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;麻布仔大冒险，双人一起玩儿的，侄子走了就没玩儿了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;上古卷轴 5，重置版，玩不下去，画质感人。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;原神，自个儿玩儿不下去，而且 PS5 是港服，无法跟国服互通。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;怪物猎人：世界，玩儿不下去，太复杂。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;战神 3，感觉可以算是横版过关游戏了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The last of us 重制版，潜行玩儿法，杀时间，玩不下去。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;地铁：流亡，本来是打算好好玩儿的，结果看了测评，玩儿不下去了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;蜘蛛侠：迈尔斯·莫拉雷斯，有机会好好玩儿一下，因为着急给其他游戏腾地方，就卸载了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;刺客信条：起源，刺客信条系列我准备放弃了，太杀时间。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;空洞骑士，操作单调且难度较高，地图没指示。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;看门狗 1，潜行玩儿法，玩儿不下去，爽不起来。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;看门狗 2，潜行玩儿法，玩儿不下去，爽不起来。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;全境封锁，射击类游戏，没有真实背景，玩儿不下去。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;火线猎杀：野境，同上。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;地平线：零之曙光，操作手感没有战神 4 好，玩儿不下去。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;刺客信条：大革命，刺客信条系列我准备放弃了，太杀时间。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;城市天际线，PS5 操作难度太高。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;刺客信条：维京纪元，刺客信条系列我准备放弃了，太杀时间。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;小小梦魇，有点无聊和压抑。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;使命召唤：黑色行动 3，射击游戏没有背景，单纯突突突，玩儿不下去。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2022-年旅游&quot;&gt;2022 年旅游&lt;/h3&gt;

&lt;p&gt;因为疫情，基本没怎么出去玩儿过。&lt;/p&gt;

&lt;h3 id=&quot;2022-年软件订阅&quot;&gt;2022 年软件订阅&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Youtube Premium 土区，主要看教程学习视频。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Infuse Pro 港区&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;网易 UU 游戏加速器，买了半年的。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Craft 国区&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1Password&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;iCloud 国区&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Playstation Plus 高级 港区&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Nintendo Switch Online 港区&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Apple Music 国区&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2022-年网络电子硬件&quot;&gt;2022 年网络/电子硬件&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;R4S 软路由&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TP-Link XDR 5480&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TP-Link TL-SM410U 电口&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Apple TV 2021 4K&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Mac Studio&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;小米显示器挂灯 1S&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;罗技有线鼠标 G403、G502&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;NB G40 显示器支架&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;绿联 USB 3.0 转千兆 RJ45 网口转换器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Play Station 5 国行 1T&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;索尼 PS5 DualSense 无线游戏手柄充电座&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;bebird Note3 Pro 可视挖耳勺&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;优派 27’ VX2780-4K-HDU 显示器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;绿联 5V1A2A 3.1A 双口 Type-C 充电器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MCHOSE 迈从 iPad 支架&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ifacemall iPad 支架（吃灰）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安克双 Type-C 快充线&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安克双口 40W 充电线&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安克 20W 快充充电线&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;少数派xJSAUX PD 20W 快充 1.8m 充电线&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2022-年家电&quot;&gt;2022 年家电&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Sony XR-65X90J&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;石头 G10 扫地机器人&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;山本 S-2105 空气炸锅&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;米家小米踢脚线石墨烯电暖气&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2022-年独立开发者进度&quot;&gt;2022 年独立开发者进度&lt;/h3&gt;

&lt;p&gt;更新优化了大量博客的内容，如支持了优美的 bookmark、本地化了博客发布工作流，还学习了视频制作，录了个视频讲我的基于 Craft 插件的博客发布工作流。&lt;/p&gt;

&lt;p&gt;学习了 SwiftUI、Swift，开发了一个供老婆工作使用的 ZXP 文件安装小工具，原计划在 30岁（2022 年）发布一款 app 的计划未能完成，推迟到明年 （2023年）。&lt;/p&gt;

&lt;p&gt;今年博客发布了 13 篇技术博客，7 篇生活博客，明年再接再厉！&lt;/p&gt;

&lt;p caption=&quot;图为使用 Craft 写的博客截图&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/2F9C573D-FE26-49A6-A2CA-BFEC6CA1C751_2.webp&quot; alt=&quot;图为使用 Craft 写的博客截图&quot; title=&quot;图为使用 Craft 写的博客截图&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2023-年展望&quot;&gt;2023 年展望&lt;/h2&gt;

&lt;p&gt;2023 年的所有展望，都是基于疫情解封后，生活恢复到 2019 年之前的水平而定的，如果有变数…那就有变数吧。&lt;/p&gt;

&lt;p&gt;首先，今年应该会将黏糕接回来，然后再找下家哪位好心人能够收养。&lt;/p&gt;

&lt;p caption=&quot;图为元旦期间去看望黏糕时所摄&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/1E71875F-6233-4365-9F23-D19310A6FAEC_2.webp&quot; alt=&quot;图为元旦期间去看望黏糕时所摄&quot; title=&quot;图为元旦期间去看望黏糕时所摄&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;独立开发者方面&quot;&gt;独立开发者方面&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;写一款本计划去年 30 岁的时候写的 App，相关功能和原型图已经确定，技术和知识储备正在进行中。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;软件订阅方面争取保持当前订阅量，不再多增加新的订阅（不保证）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;至少两月一篇技术博客，今年至少产出 6 篇。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;读 2 本技术书籍。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;生活方面&quot;&gt;生活方面&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;出国旅游一次，暂定新西兰/欧洲/美帝。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;游戏考虑不再续订 PS 会员，因为玩儿的不多，想玩哪款游戏，开一个月的会员玩儿即可，可以遇见一定会玩儿的游戏有：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;塞尔达传说：王国之泪&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;最后给小王定的 KPI 是生孩子，其他的如工作之类的，不重要。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;至少两月一篇生活博客，今年至少产出 6 篇，做菜、游记等。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;2022 年最后一天的太阳落下，2023 年的太阳照常升起&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/my-2022/8C6EC641-EC50-4A63-9185-69B31EDE7FBF_2.webp&quot; alt=&quot;2022 年最后一天的太阳落下，2023 年的太阳照常升起&quot; title=&quot;2022 年最后一天的太阳落下，2023 年的太阳照常升起&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最后，祝愿大家新的一年都能平安顺遂，心想事成！&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Jan 2023 10:08:35 +0800</pubDate>
        <link>https://www.xheldon.cn/life/my-2022.html</link>
        <guid isPermaLink="true">https://www.xheldon.cn/life/my-2022.html</guid>
        
        <category>生活</category>
        
        <category>2022</category>
        
        <category>总结</category>
        
        <category>计划</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>为什么我要有一个香港手机号</title>
        <description>&lt;p&gt;因为一些众所周知的原因，国内的苹果 app store 商店有些软件是无法下载的，同时，大陆地区的苹果服务如 Apple TV、Apple TV+、iTunes Store、Book Store、Apple One、Apple Arcade、Apple News 都是没有的，而 Apple Music、Apple 播客、iCloud+ 的服务也是阉割版的，因此&lt;strong&gt;这是我想要一个国外手机号的直接动力&lt;/strong&gt;，但是国外的 app store 的充值付费并不像想象中的简单，通常情况下你都需要当地发行的信用卡来绑定消费。也就是说你不能使用大陆的信用卡来绑定美区的 app store，而又在通常情况下，都需要一个当地的手机号来完成这个操作，甚至只需要一个当地的手机号就可以直接 app store 付费而不用绑定信用卡，下面就来介绍一下我了解的相关情况。&lt;/p&gt;

&lt;h2 id=&quot;美区&quot;&gt;美区&lt;/h2&gt;

&lt;p&gt;我在上大学的时候刚使用 iPhone 5 就很有先见之明的申请了一个美区账号，专门用来下载一些特定的 app。当时美区账号在申请的时候还不需要绑定支付方式（好像现在也不需要，只要有美国 ip 就会出现支付方式为「无」的选项）。但是美区账号付费略微有点不爽，一般有以下几种方式：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;购买美区 app store 礼品卡。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;使用美国的 paypal 绑定 app store。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;淘宝代充值&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;美国信用卡绑定 app store。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;其中，第四种方式如果你不在美国的话，基本不可行，研究发现可以申请某个银行的「虚拟信用卡」（此方法在香港也可行），但是这种方法一个是有风险，一个是需要其他额外的条件，我没研究就放弃了。&lt;/p&gt;

&lt;h3 id=&quot;礼品卡&quot;&gt;礼品卡&lt;/h3&gt;

&lt;p&gt;最简单的是礼品卡，据我所知目前仅有美区和日区的 app store（购买软件、Apple Music、订阅等服务用的充值卡）和 apple store（用来购买苹果硬件如手机、Mac 等的礼品卡）的礼品卡合二为一了，其他地区大部分情况下仅线下售卖 app store 充值卡，而线上售卖 apple store 礼品卡。&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/why-i-need-a-hk-sim-card/3DFA0791-B39B-4280-A736-5823D641A1CE_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;因此，你可以直接使用大陆地区的信用卡来购买美区 app store 的礼品卡为美区账号充值。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.apple.com/shop/gift-cards&quot; target=&quot;_blank&quot;&gt;Apple Gift Card&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;美国-paypal&quot;&gt;美国 paypal&lt;/h3&gt;

&lt;p&gt;美区 paypal 也是一种曲线救国的方案，因为你可以将大陆发行的信用卡绑定美区 paypal，然后美区 paypal 绑定美区 app store，底层路基是 app store 将支付风险转移给了 paypal。但是此种方式有个问题是，paypal 风控非常严格:&lt;/p&gt;

&lt;p&gt;首先，美区 paypal 注册的时候你需要使用一个固定的美国 ip，然后无需验证手机号即可注册+绑定大陆信用卡成功。但是一旦你登录 paypal 的账号 ip 发生了变化，或者检测到多个账号都使用过你当前使用的美国 ip（如万人机场，这点还是用自建 VPS 访问好点），或者一些玄学的原因，它都会要求你提供一个可以验证的手机号。&lt;/p&gt;

&lt;p&gt;而我以迅雷不急掩耳的速度将大陆的信用卡绑定美区 paypal 成功之后再绑定美区 app store 账号成功，然后在 30 分钟后再次登录 paypal 账号，它就提示我发现风险让我验证手机号，我没验证，过了两天后发邮件给我说帮我重置了密码，现在我如果想重置密码就需要一个手机号，因此此账号基本是作废了。&lt;/p&gt;

&lt;p&gt;然后，这里并不是一个简单的 textnow、google voice 或者任意的接码平台给的美国虚拟手机号就是可以的，paypal 会准确识别你的手机号是否是一个虚拟手机号（就是美国的虚拟运营商提供的手机号），然后拒绝你的验证。&lt;/p&gt;

&lt;p&gt;最后，你除了购买一个美国实体手机号以供验证之外，没有其他办法。但是买个美国实体卡即使是最便宜的那种也价格不菲而且没有必要——仅仅是为了支付 app store 就付出这么高的成本是不可接受的，于是放弃了此种方案。&lt;/p&gt;

&lt;p caption=&quot;Paypal 要求我重置密码&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/why-i-need-a-hk-sim-card/80A27913-FEAC-4FE6-AAEF-5CCE0E862CCC_2.webp&quot; alt=&quot;Paypal 要求我重置密码&quot; title=&quot;Paypal 要求我重置密码&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;淘宝代充值&quot;&gt;淘宝代充值&lt;/h3&gt;

&lt;p&gt;这个方法严重不推荐，因为淘宝商家提供的便宜充值，比如充 100 到账200等，有很大可能是盗刷美区信用卡的黑卡，一旦被挂失、被发现，你的账号充值就有很大可能被封。&lt;/p&gt;

&lt;p&gt;以上就是美区支付的方式，但是这仍然是有风险的，具体可以查看 v2ex 站中的各种无缘无故平稳用了几年的美区账号被封而且无法解封的案例。&lt;/p&gt;

&lt;p&gt;考虑到各个区的支付便捷度和语言方面的原因（具体对比可以看这篇）：&lt;a href=&quot;https://steppark.net/16357088669226.html&quot;&gt;订阅 Apple Music 该选哪个区？——中美坡港台日六大地区全对比（第二版）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最终，我选择了港区。&lt;/p&gt;

&lt;h2 id=&quot;港区&quot;&gt;港区&lt;/h2&gt;

&lt;p&gt;香港虽然离大陆近，但是其 app store 依然不能绑定大陆发行的信用卡，而且相比于美区的 app store 和 apple store 礼品卡二合一网上购买充值这么简单的充值方式而言，居然还难上了不少。&lt;/p&gt;

&lt;p&gt;总的来说港区有以下几种充值方式：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;手机账单绑定 app store。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;信用卡绑定 app store。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;AliPayHK 绑定 app store。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;礼品卡充值。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;下面单独说说。&lt;/p&gt;

&lt;h3 id=&quot;手机账单&quot;&gt;手机账单&lt;/h3&gt;

&lt;p&gt;说简单点就是使用手机话费绑定 app store 消费，就相当于是把手机号当成了一个储值卡，提前充好话费，然后在 app store 绑定该手机号即可在消费的时候扣手机话费。&lt;/p&gt;

&lt;h3 id=&quot;信用卡绑定&quot;&gt;信用卡绑定&lt;/h3&gt;

&lt;p&gt;同美区，中国大陆的信用卡不行，需要香港地区发行的信用卡。&lt;/p&gt;

&lt;h3 id=&quot;alipayhk&quot;&gt;AliPayHK&lt;/h3&gt;

&lt;p&gt;以前这种方式是可行的，类似于美区 Paypal，也即app store 绑定 AliPayHK，然后 AliPayHK 再绑定中国大陆信用卡，但是不知道从什么时候开始，AliPayHK 不能绑定大陆的信用卡了，于是该方式不再可行。&lt;/p&gt;

&lt;h3 id=&quot;礼品卡-1&quot;&gt;礼品卡&lt;/h3&gt;

&lt;p&gt;香港的 app store 礼品卡只在线下售卖，如 711 等，线上只售卖 apple store 礼品卡。淘宝购买的港区 app store 我担心有黑卡，没敢买怕封号。&lt;/p&gt;

&lt;p&gt;综上，我把一直使用的美区账号转移到了港区，然后买了一个手机号，使用手机账号绑定 app store 付费。&lt;/p&gt;

&lt;p&gt;这里仍然有一些点需要考虑的。&lt;/p&gt;

&lt;h2 id=&quot;最佳性价比&quot;&gt;最佳性价比&lt;/h2&gt;

&lt;p&gt;首先，买一个香港号并不像想象中的容易（当然也没有想象中的难），现在在香港地区本地买的话都需要实名，也即需要香港身份证；如果是大陆人的话，就需要港澳通行证，因此你需要首先办理一个港澳通行证，这是基础门槛，没有的话就别想了。香港要求在 2023年2月23号之前需要全港的手机卡完成实名认证，过期就不能用了。&lt;/p&gt;

&lt;p caption=&quot;ClubSim 的实名认证提示👆🏻&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/why-i-need-a-hk-sim-card/667714C6-E2DD-403D-9995-BC93E796C9D1_2.webp&quot; alt=&quot;ClubSim 的实名认证提示👆🏻&quot; title=&quot;ClubSim 的实名认证提示👆🏻&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其次，如果你在各个香港手机卡售卖网站如中国移动香港、中国联通香港、3HK、Clubsim 等网站浏览下单的时候就会发现，他们快递只会配送到香港地区，不提供发货到中国大陆的方式，因此你要么选择转运（不划算，毕竟东西小，而且 &lt;em&gt;可能&lt;/em&gt; 存在被海关扣押的风险），要么选择淘宝。我选择了后者。&lt;/p&gt;

&lt;p&gt;既然这样，那目的就明确了：挑选一款性价比高的手机卡。研究了一番之后，有以下选择：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;中国移动鸭聊卡，月租忘了，很便宜，但是淘宝买不到了。&lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;鸭聊卡&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/why-i-need-a-hk-sim-card/7856CE83-CF3E-432E-8609-8E2300F9321D_2.webp&quot; alt=&quot;鸭聊卡&quot; title=&quot;鸭聊卡&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;中国移动万众卡，万众卡是一个系列，类似与神州行、动感地带等，最便宜的月租 2 块港币/月的月租，按使用量付费。但是搜了一圈淘宝，要么买的是二手回收号（就是别人用过的回收号，这种号可能被别人绑定过一些网站如 AliPayHK，因此有很大几率不能绑定一些服务，慎买），要么就没有卖而仅有充值话费的。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Clubsim 课金易充值卡，我选择了这个方式，该套餐就是用来绑定 app store 或者 google play 消费的。只是有限制，刚买的时候里面默认是 50港币的课金易套餐，有效期 180 天，充值一次，自充值那天起，可以延长 180 天有效期。还可以另外订购短信套餐，6 元一个月，订购一个月后，即使该短信套餐过期了，或者课金易没有余额了，你仍然可以保号 365 天，因此可以认为该方式的持有成本是 6 元每年，十分划算。该卡淘宝有售。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;Clubsim 课金易（氪金很容易）的介绍&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/why-i-need-a-hk-sim-card/521D9C59-2E33-4BC3-BA3B-1545BC72A447_2.webp&quot; alt=&quot;Clubsim 课金易（氪金很容易）的介绍&quot; title=&quot;Clubsim 课金易（氪金很容易）的介绍&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3HK，与 ClubSim 类似，也是一种储值卡，不过不同于 ClubSim 的是，它的一些通话套餐、短信套餐、上网更实惠。一般买它推出的，DIY 套餐，该套餐与 Clubsim 类似，就是你可以自己选择购买各种数据的组合如语音通话、上网流量、短信流量等。&lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;3HK 的 DIY 套餐介绍&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2023/why-i-need-a-hk-sim-card/A429CC3F-E330-4A2B-ADEB-5BC74E403A20_2.webp&quot; alt=&quot;3HK 的 DIY 套餐介绍&quot; title=&quot;3HK 的 DIY 套餐介绍&quot; /&gt;&lt;/p&gt;

&lt;p&gt;很多人买 3HK 就是用来使用香港的网络在大陆漫游，以访问一些在大陆无法访问的网站如 google 等，因为是原生 ip，所以可以解锁任何流媒体，如 NetFlix、Disney+ 等。但是相比于 ClubSim 专门用于绑定 app store、google play 消费的课金易套餐而言，3HK 并没有明显的优势。因为我并不使用该手机号打电话、上网、发短信，因此最终选择了 Clubsim 手机卡，并选择了 课金易 套餐：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.clubsim.com.hk/zh/gameeasy&quot; target=&quot;_blank&quot;&gt;課金易數據&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;注意事项&quot;&gt;注意事项&lt;/h2&gt;

&lt;p&gt;这里也有需要注意的地方，Clubsim 手机卡也是不能邮寄到大陆的，因此需要找淘宝购买，但是根据我对 Clubsim 的用户协议的理解，他们的卡的首次开卡激活需要在香港地区，在大陆是无法激活的。但是据淘宝卖家说，他们的顾客买了 Clubsim 后，在大陆激活也是可以的，我看了一些资料、视频后，好像说是可以找客服激活。因为我的卡还有几天才能到手，而且淘宝的卖家在我下单后找我要了我的 Clubsim 的账号（仅账号没要密码），说是需要绑定。卖家应该没必要骗我（因为毕竟钱还在淘宝，没打到他账户），因此基本可以确定的是 Clubsim 的卡是可以在大陆正常激活并使用的。&lt;/p&gt;

&lt;p&gt;最后还需要注意的是，正如上文这篇文章所介绍的那样： &lt;a href=&quot;https://steppark.net/16357088669226.html&quot;&gt;订阅 Apple Music 该选哪个区？——中美坡港台日六大地区全对比（第二版）&lt;/a&gt;，港区的 app store 及苹果的其他服务的完备性依然不如其他区如台湾区、日本区等，如港区没有 Apple One，没有 Apple Arcade，但是我的需求是一个完全版的 Apple Music 和Apple TV 和 ITunes Store 和 Books 以及相对更顺畅的文化环境（语言），因此选择了港区。&lt;/p&gt;
</description>
        <pubDate>Mon, 02 Jan 2023 23:25:48 +0800</pubDate>
        <link>https://www.xheldon.cn/life/why-i-need-a-hk-sim-card.html</link>
        <guid isPermaLink="true">https://www.xheldon.cn/life/why-i-need-a-hk-sim-card.html</guid>
        
        <category>生活</category>
        
        <category>苹果</category>
        
        <category>手机卡</category>
        
        <category>折腾</category>
        
        <category>服务</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>【视频】基于 Craft 插件的博客发布工作流介绍</title>
        <description>&lt;p&gt;此博文为视频，发布在：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Youtube：&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;embed-responsive embed-responsive-16by9&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/6En0qS_evH8?rel=0&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bilibili：&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;embed-responsive embed-responsive-16by9&quot; style=&quot;border-bottom: 1px solid #ddd;&quot;&gt;&lt;iframe src=&quot;//player.bilibili.com/player.html?bvid=BV1Me4y1g7bW&amp;amp;high_quality=1&amp;amp;as_wide=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;这里额外再补充一点：&lt;/p&gt;

&lt;p&gt;视频中提到的 XHelper.app 基本是这个仓库：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Xheldon/craft_publish_ci&quot; target=&quot;_blank&quot;&gt;GitHub - Xheldon/craft_publish_ci: 专门用于接收 Craft 文件然后拉取其图片转存到 cos，而 markdown 转发到 x_blog_src 的 ci 仓库&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;的 Apple Script本地化版，因为最终执行的也是 nodejs 的代码，只是利用 AS 实现了响应了自定义 scheme 链接的效果。&lt;/p&gt;

&lt;p caption=&quot;XHelper.app 的核心代码&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/workflow-of-blog-publish-base-of-craft/9585A422-AAF2-43F9-9691-9804CE43A0C0_2.webp&quot; alt=&quot;XHelper.app 的核心代码&quot; title=&quot;XHelper.app 的核心代码&quot; /&gt;&lt;/p&gt;

&lt;p&gt;具体为什么不用 Github Action 处理而将这个过程本地化的原因，以及 Apple Script 相关入门介绍我当时还写了个博客，见 &lt;a href=&quot;/tech/applescript-simple-use.html&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

</description>
        <pubDate>Fri, 30 Dec 2022 22:50:55 +0800</pubDate>
        <link>https://www.xheldon.cn/tech/workflow-of-blog-publish-base-of-craft.html</link>
        <guid isPermaLink="true">https://www.xheldon.cn/tech/workflow-of-blog-publish-base-of-craft.html</guid>
        
        <category>技术</category>
        
        <category>Craft</category>
        
        <category>视频</category>
        
        <category>工作流</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>【游戏时间】战神系列之四</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;不像很多「普通人家」的孩子，从小就能拥有一台「次时代」主机。长这么大第一次拥有自己的游戏主机是工作了几年之后。既然买都买了，按照我的人设，不记录点什么就白买了，遂成此系列。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意，内容有战神4大量剧透和战神5部分剧透，结尾有战神6、7的猜想。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;战神的前作我没有玩儿过，因为据说是运行在 PSP 或者 PS3 上的游戏。我上手就是从战神 4 开始的。&lt;/p&gt;

&lt;p&gt;奎托斯——人称「奎爷」的出身是一名斯巴达勇士，是到处播种的宙斯与人间女子的私生子，一名半神。大家都说战神4中的虽然奎托斯老了，但是眉清目秀了很多，我就找了找他过去的样子：&lt;/p&gt;

&lt;p caption=&quot;战神4之前的奎托斯&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/84791362-F962-4CF5-877B-F13C5DF8A2A9_2.webp&quot; alt=&quot;战神4之前的奎托斯&quot; title=&quot;战神4之前的奎托斯&quot; /&gt;&lt;/p&gt;

&lt;p&gt;和现在的样子对比了一下：&lt;/p&gt;

&lt;p caption=&quot;战神四中的奎托斯&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/F07B98C7-5EA3-4A32-A324-5998D9342D5B_2.webp&quot; alt=&quot;战神四中的奎托斯&quot; title=&quot;战神四中的奎托斯&quot; /&gt;&lt;/p&gt;

&lt;p&gt;嗯，除了纹身之外，不能说一模一样，只能说毫无关系，不过确实慈祥了许多。&lt;/p&gt;

&lt;p&gt;顺便说一下，战神4之前的系列&lt;del&gt;因为没有带小孩子出场所以&lt;/del&gt;有黄暴情节，比如跟性爱女神「阿佛洛狄忒」那段；但是在战神4中就是一本正经的杀怪过关了。&lt;/p&gt;

&lt;p&gt;另外奎托斯身上的纹身也是有由来的，是被他意外杀死的妻女的骨灰附着在身上形成的。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;一开始我并不清楚奎托斯（主角）的过去，也不知道他都干了啥。开场看到老婆死了，然后儿子啥也不会，所以奎托斯开始教儿子狩猎，我寻思这游戏为啥要有个儿子在一边叨叨叨的，一个人干不行吗？&lt;/p&gt;

&lt;p caption=&quot;战神4中的奎托斯之子阿特柔斯&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/56A1AFD4-BD9B-4953-BC03-CF64BC6390AD_2.webp&quot; alt=&quot;战神4中的奎托斯之子阿特柔斯&quot; title=&quot;战神4中的奎托斯之子阿特柔斯&quot; /&gt;&lt;/p&gt;

&lt;p&gt;老婆说是巨人族的（但是为啥身体就这么大点？），叫「菲」也就是北欧神话中战神「洛基」他妈「劳菲」，而洛基是劳菲给她儿子起的名字，奎托斯给他儿子起的名字叫「阿特柔斯」跟希腊神话中的战神「阿依瑞斯」很像是吧？前作中奎托斯干死了阿依瑞斯，自己做了战神。话说这两口子给儿子起名能不能统一一下？不过这可能是一个传统，因为劳菲给自己老公奎托斯也起了个名字叫「法布提」，在北欧神话中也是一个巨人，洛基的父亲。&lt;/p&gt;

&lt;p&gt;奎托斯准备按照她老婆生前的遗愿，把她的骨灰撒在世界（里面是九界）的最高峰上，所以整个游戏就是围绕这个目的来进行的，谁阻挠这个目的就干谁，真正的「人挡杀人，佛挡杀佛」。&lt;/p&gt;

&lt;p&gt;说到巨人族，后来查了查相关的希腊神话资料，巨人族是由最古老的神——大地之母盖亚（话说中国神话中的大地之母是女娲）和她创造的儿子——乌拉诺斯生的，希腊神不知道为啥有乱伦和有儿子弑父的传统，有够变态的，所以这游戏以及整个希腊神话背景的游戏就别想进国行PS了。&lt;/p&gt;

&lt;p&gt;接着有个小个子来找事儿，当场扭断脖子干死（当然后来没死）。小个子叫「巴德尔」，是希腊神话中的光明之神，象征着太阳，他的死会引起「芬布尔之冬」，这也是北欧神话中的重要事件（就好比「诸神黄昏」事件一样。&lt;/p&gt;

&lt;p caption=&quot;战神4中的巴德尔是个天生欠揍的神&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/FB51C6B1-E38C-4A33-9DA4-BD67EF016F94_2.webp&quot; alt=&quot;战神4中的巴德尔是个天生欠揍的神&quot; title=&quot;战神4中的巴德尔是个天生欠揍的神&quot; /&gt;&lt;/p&gt;

&lt;p&gt;巴德尔没有痛觉（有人说是没有感觉，不过我想他连吃饱没吃饱、屎拉没拉干净都不知道没感觉的话就有点扯了，所以不对，应该就是没有痛觉而已），受伤后会很快恢复（算是九尾之力了），这个能力并不是天生的，而是爱子心切的老母求，北欧神话中的爱情与魔法的神——芙蕾雅求来的。当初儿子出生的时候看他幼小可怜又无助，加上关于诸神黄昏中的预言——巴德尔会是诸神黄昏中第一个死掉的神，于是她走遍九界，要求所有她遇到的生物都发誓不能够伤害他。也因此，九界没有任何东西能够伤害他，但是唯独一个叫做「槲（hu）寄生」的东西，被她的老母亲给忘了，于是后来被这东西给干死了。&lt;/p&gt;

&lt;p caption=&quot;槲寄生&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/B5F487CB-B1DA-47BB-91CC-02AFE23511DC_2.webp&quot; alt=&quot;槲寄生&quot; title=&quot;槲寄生&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其实巴德尔来找奎托斯是想按照奥丁的指示杀死每一个巨人的，至于为啥要这么做，别问，问就是预言说的。预言说巨人族会将奥丁所在的阿萨神族杀光，会引起诸神黄昏，所以奥丁让他的两个儿子，雷神和巴德尔，简单粗暴杀光巨人族就好了。&lt;/p&gt;

&lt;p&gt;另外，因为没有痛觉，他非常想感受痛是什么滋味，所以算是个 M，受虐狂。巴德尔也因为感受不到疼痛，又死不了，所以非常怨恨自己亲妈芙蕾雅，甚至想杀了自己亲妈（这些神话的神都TM什么德行？）。&lt;/p&gt;

&lt;p&gt;暂时击退了巴德尔后就赶紧出发了，然后儿子打猎的时候射到了一头猪，于是就遇到了「风韵犹存的&lt;del&gt;俏寡妇&lt;/del&gt;」芙蕾雅（我以为是寡妇其实不是，老公就是奥丁那个老头子，可恶的奥丁，该死！），一开始自称是女巫，我也不知道就跟着剧情走了，后来才知道她也是个神，属于北欧神话中的华纳神族。是爱情与魔法的女神：&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/1DEFDC70-07CB-4681-A2E2-6C660A6FF127_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里也就知道，北欧存在两个神族和三个半神，阿萨神族，为首的就是奥丁；和华纳神族，为首的是海洋之神尼奥尔德（没出现过）。当时俩&lt;del&gt;帮派&lt;/del&gt;神族打的不可开交，后来用和亲的方式停战了。按理说和亲停战一般都是一方的王子迎娶一方的公主，但是北欧神话再次与众不同起来，他是阿萨神族的老大奥丁娶了华纳神族的芙蕾雅（芙蕾雅是算是质子），然后阿萨神族是把奥丁的低智商（字面意思）弟弟弗雷（没有出场）和智慧巨人密米尔（后面有出场）送给华纳神族作为质子。除了这两个神族外还有三个半神族，分别是巨人、精灵和矮人。其中，矮人是众多神器的制造者，如利维坦之斧、雷神之锤都是矮人制造的。&lt;/p&gt;

&lt;p&gt;这里也遇到了两个矮人，在游戏中的作用就是为奎托斯的武器升级和推动剧情发展和支线人物的，比较搞笑的是其中一位矮人叫辛德里，居然有严重的洁癖，要知道矮人都是怕光而且生活在肮脏的地下的。他解释到是因为有一次遇到了一位华纳神族的女巫，她用魔法让辛德里看到了肉眼看不到的细菌，从那以后他就受不了了，因为他知道脏东西上面都爬满了数不清的细菌微生物（这位华纳神族的女巫考虑学医吧，魔法太好用了，都不用显微镜）。女巫告诉他橡木可以阻止细菌的繁衍和传播，于是这家伙把所有工具的把柄都用了橡木。&lt;/p&gt;

&lt;p&gt;值得一提的是路上会遇到一些乌鸦（叫渡鸦）和提尔的神殿、提尔的壁画之类的。这里的渡鸦就是奥丁的化身，奥丁之眼，因此奥丁也被叫做乌鸦神。奥丁出场或者瞬移都是一大群渡鸦围绕着他然后就消失不见。在北欧神话中，奥丁肩膀有两只渡鸦，叫福金和雾尼，分表代表思想和记忆。&lt;/p&gt;

&lt;p&gt;而提尔，则是北欧神话中的战神。但是刚才不是说洛基才是吗？因为洛基是后来才成战神的。北欧神话中洛基是诡计之神。&lt;/p&gt;

&lt;p&gt;上面遇到芙蕾雅的事件是儿子射到了一头猪，这个猪也是有名字的，叫「希尔帝斯维尼」是芙蕾雅的好朋友（随从），在战神5中变成人有出场。&lt;/p&gt;

&lt;p&gt;芙蕾雅一下就看出来奎托斯是个神以及儿子并没有意识到自己是神的事实，然后告诉他你不告诉你儿子真相的话是不对的，他早晚得知道。儿子可能是从小没妈，对芙蕾雅很有好感，这也为后来战神5中阿特柔斯单独找她，芙蕾雅却没杀他做了铺垫。然后奎托斯一行人离开了芙蕾雅后，来到了九界之湖，之后的剧情基本都是在这里。&lt;/p&gt;

&lt;p&gt;九界之湖我搜了一下在希腊神话体系中没有什么故事，应该只是杜撰的一个地方，说是九界的「游客集散地」，从这里可以通往九界的任意一个国度。因此这里有很多神的雕塑和神殿，也有很多支线剧情如渴望亲自见神一面却被神杀死了儿子于是决定弑神却没能做到而含恨西北的人类交代的任务等。&lt;/p&gt;

&lt;p&gt;为什么是九界而不是十界、十八界呢？因为在北欧神话中，世界都在一棵叫做「世界之树」的上面，九个世界分别就位于这棵大树的九个地方，分别为：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;米德加尔德，人类居住的世界。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;阿斯加德，阿萨神族的国度，位于在天上的太阳和月亮之间，与人类世界可经过彩虹桥想通，位于世界之树的最上层。看到彩虹桥，是不是想到了漫威雷神里面的彩虹桥，没错，都是同一个神话背景的东西。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;海姆冥界，亡灵之国，位于世界之树的最下层。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;尼福尔海姆，迷雾之国，冰天雪地的国度，病死及老死者的归宿，位于北方。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;穆斯贝尔海姆，火之国，位于南方。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;约顿海姆，巨人之国，位于东方。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;华纳海姆，华纳神族的国度，位于西方。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;亚尔夫海姆，光精灵的国度，位于人类世界和阿斯加德之间。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;尼德威阿尔，黑暗精灵或侏儒的国度，位于人类世界和冥界之间。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在九界之湖中遇到了世界之蛇耶梦加得——不得不说这名字听上去像是佛教里面的名字。在北欧神话中，耶梦加得是北欧战神洛基（就是奎托斯的儿子阿特柔斯在北欧的名字）的儿子，它是从未来的诸神黄昏时间穿越过来的——这是后来的智慧之神密米尔说的，北欧神话中耶梦加得的宿敌就是雷神索尔。&lt;/p&gt;

&lt;p&gt;世界之蛇躺在九界之湖里面，引得湖面上升，盖住了一些地方的入口，后来的剧情世界之蛇起身离开了，湖面水位因此下降，解锁了更多支线任务和剧情，从中可以看出蛇有多大。&lt;/p&gt;

&lt;p caption=&quot;世界之蛇耶梦加得&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/AA604C27-D76C-4F79-9CDE-E619E106EDD0_2.webp&quot; alt=&quot;世界之蛇耶梦加得&quot; title=&quot;世界之蛇耶梦加得&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后他们继续走，爬山想去山上，但是遇到了一团黑雾，过不去了&lt;/p&gt;

&lt;p caption=&quot;黑色的迷雾不知道是啥过不去&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/74932127-C234-4EEF-B335-0ABA1DFD5E64_2.webp&quot; alt=&quot;黑色的迷雾不知道是啥过不去&quot; title=&quot;黑色的迷雾不知道是啥过不去&quot; /&gt;&lt;/p&gt;

&lt;p&gt;于是才知道，九界之湖的水中央就是提尔的神殿，里面有穿越九界国度的彩虹桥。于是通过彩虹桥，他们去精灵国度拿到光源来驱散迷雾，当时精灵国正在内斗，奎托斯秉着互不干涉原则不参与光精灵和暗精灵之间的战争，说他只要那个光源就行了，别的事儿不管。话虽这么说，但是最后还是帮光精灵干掉了暗精灵的 BOSS 取得了战争的胜利，然后顺利拿到光源继续爬山。&lt;/p&gt;

&lt;p caption=&quot;这暗精灵一看就不像正派啊&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/DFF90B48-7088-4C03-8FE6-DEF1825788C2_2.webp&quot; alt=&quot;这暗精灵一看就不像正派啊&quot; title=&quot;这暗精灵一看就不像正派啊&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;拿到光源之后的奎托斯遇到了回去的光精灵&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/4D895C0C-82A1-4946-AEBC-6B19C2A8A0D1_2.webp&quot; alt=&quot;拿到光源之后的奎托斯遇到了回去的光精灵&quot; title=&quot;拿到光源之后的奎托斯遇到了回去的光精灵&quot; /&gt;&lt;/p&gt;

&lt;p&gt;暗精灵 BOSS 死之前说「你不知道你的做法意味着什么」，我还以为会有什么伏笔，比如说其实长相丑陋的暗精灵才是正义被欺负的一方，但事实是我想多了，直到最后啥伏笔也没发生，无语子。&lt;/p&gt;

&lt;p&gt;光精灵这里应该只是简单的拉长剧情的，跟希腊神话没什么关系，所以也没什么希腊神话中的背景故事和人物介绍的。&lt;/p&gt;

&lt;p&gt;然后在山顶遇到了之前的巴德尔，跟另外两个也是雷神儿子的饭桶曼尼和摩迪。不知道在说啥，但是当时没打，等他们走后父子二人才出来，这里遇到了智慧之神密米尔，被奥丁囚禁了 100 年，想请求奎托斯父子解救一下他，他可以帮指路去巨人国度，但是他被嵌入到树里面跟树融为一体抠下不来，怎么办呢？&lt;/p&gt;

&lt;p caption=&quot;待会儿要被砍头的密米尔&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/D5B8BF1F-FE2D-43B7-BDE2-79A2683D5A51_2.webp&quot; alt=&quot;待会儿要被砍头的密米尔&quot; title=&quot;待会儿要被砍头的密米尔&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个剧情「程心」熟啊，方法就是→ 「只送大脑」&lt;/p&gt;

&lt;p caption=&quot;魔鬼配图&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/D3AC0F53-D1E2-40F7-B092-E374221AE4B2_2.webp&quot; alt=&quot;魔鬼配图&quot; title=&quot;魔鬼配图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当然只送大脑夸张了，不过类似，只需要头就行了，于是他的头被砍下来，然后送到芙蕾雅那里给复活了——当然，复活后也只有头，从此他变成了把头系到裤腰带上的人（字面意思）他之后一直被奎托斯绑在腰间带着，我常常想，奎托斯放屁岂不是第一个熏到他？&lt;/p&gt;

&lt;p caption=&quot;挂在腰间的密米尔&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/2955CCEC-5B1E-436D-BC5B-1A269E176827_2.webp&quot; alt=&quot;挂在腰间的密米尔&quot; title=&quot;挂在腰间的密米尔&quot; /&gt;&lt;/p&gt;

&lt;p&gt;密米尔是北欧神话中的巨人，负责看管智慧之泉，奥丁要来获取知识和智慧，最终他以牺牲一只眼睛为条件成功取得智慧。这也正是奥丁是独眼龙的原因。&lt;/p&gt;

&lt;p&gt;密米尔说九界最高峰根本不是他被困的那个山，最高山在巨人的国度约顿海姆。但是需要个什么东西（忘了），于是去找那个东西，遇到了索尔的两个儿子曼尼和摩迪。北欧神话中他们俩会在诸神黄昏后，雷神索尔跟耶梦加得同归于尽后继承雷神之锤，但是在战神4中，哥哥曼尼当场被干死了，摩迪赶紧逃跑了。&lt;/p&gt;

&lt;p&gt;之后儿子旧疾复发，需要亡灵国度赫尔海姆的一个看守者的心脏，来都来了，都是为了孩子，去就是了。但是在亡灵国度，现在用的这个武器「利维坦之斧」因为是蕴含冰冻魔法，在本来就是寒气逼人的亡灵国度不好使，得用本来就来自冥界的武器「混沌双刃」才行。&lt;/p&gt;

&lt;p caption=&quot;利维坦之斧&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/BF92D26C-6AF9-43A8-9536-82A9D3923D3C_2.webp&quot; alt=&quot;利维坦之斧&quot; title=&quot;利维坦之斧&quot; /&gt;&lt;/p&gt;

&lt;p&gt;说到利维坦之斧，它是由上面的矮人兄弟打造的，最开始是给劳菲，也就是奎托斯老婆在用，后来老婆死了他就用了，蕴含冰冻魔法。而「利维坦」这个名字，在北欧神话中并不存在，这个名字有迹可循的地方是在圣经中，意思是裂缝，是一头象征邪恶的巨大海怪。&lt;/p&gt;

&lt;p caption=&quot;战神前作中的混沌双刃&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/89385782-CB52-40DF-8A9D-F6DBD46C83D8_2.webp&quot; alt=&quot;战神前作中的混沌双刃&quot; title=&quot;战神前作中的混沌双刃&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这段因为我没有玩过战神的前作，因此没什么感觉，于是搜了搜战神的前作相关剧情。原来在战神4之前，奎托斯杀光希腊众神的时候用的都是混沌双刃，后来为了过平凡的日子，发誓不再使用它，于是收藏了起来。&lt;/p&gt;

&lt;p caption=&quot;据说老玩家看到这个场景的时候老泪纵横&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/0CD92A68-DCB7-456B-B8DD-4C5712730CE9_2.webp&quot; alt=&quot;据说老玩家看到这个场景的时候老泪纵横&quot; title=&quot;据说老玩家看到这个场景的时候老泪纵横&quot; /&gt;&lt;/p&gt;

&lt;p&gt;所以当奎托斯拿到混沌双刃的时候，外面的天气和背景音乐变的十分的恐怖，这个时候最后被他干死的希腊智慧女神雅典娜也若隐若现的出现在他的面前喊他：怪物！&lt;/p&gt;

&lt;p caption=&quot;雅典娜凡性的提醒&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/01BF0463-899F-4C45-8330-0E288F05C529_2.webp&quot; alt=&quot;雅典娜凡性的提醒&quot; title=&quot;雅典娜凡性的提醒&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是奎托斯并没有什么退缩，还是拿出了弑神的武器——混沌双刃，毕竟都是为了孩子嘛。&lt;/p&gt;

&lt;p caption=&quot;战神4中的混沌双刃&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/77DC8423-9FE6-4382-9CCD-3B7759337202_2.webp&quot; alt=&quot;战神4中的混沌双刃&quot; title=&quot;战神4中的混沌双刃&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后奎托斯就拿到了所需要的心脏，治好了儿子的病——这里其实孩子的病是不用治的，因为神是不会生病的，也不会病死，但是为什么儿子阿特柔斯就病了都走不动路了呢？因为他不知道自己是神啊！（唯心主义了算是，不觉得自己是神就不是神了？连神的基本属性不生病都没了，离谱），于是奎托斯为了救儿子，就听从了芙蕾雅的建议，告诉了儿子自己是神，他也是神的真相。&lt;/p&gt;

&lt;p&gt;知道自己是神之后，儿子阿特柔斯于是有点得意忘形，问自己是什么神？奎托斯说不知道，需要自己发掘，每个神都是独一无二的存在。好死不死，这里遇到了之前被干跑的摩迪，也就是索尔之子。&lt;/p&gt;

&lt;p caption=&quot;会用闪电的摩迪&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/465DDDDA-B586-4ADF-948F-462ED878CC8E_2.webp&quot; alt=&quot;会用闪电的摩迪&quot; title=&quot;会用闪电的摩迪&quot; /&gt;&lt;/p&gt;

&lt;p&gt;不过此时他的状态不太好，因为他之前由于没打过奎托斯，而且自己兄弟死了自己却活着回来太丢人，被奥丁胖揍了一顿打了个半死，一点斗志都没了，而此时阿特柔斯作为新神斗志正盛，于是「彼竭我盈故克之」，不顾老父亲的反对直接把摩迪给杀了，还说自己是神，想干嘛就干嘛，但是奎托斯一直认为身为神就是一种诅咒。&lt;/p&gt;

&lt;p&gt;这里奎托斯十分生气，说：弑神是要付出代价的！儿子说：你怎么知道的？！玩家内心OS：你还是不知道的好！&lt;/p&gt;

&lt;p&gt;然后此时巴德尔又出现了，一顿打斗把通往最高山巨人国度的传送门给弄坏了，最后只好去巨蛇身体内拿到一个东西才能从九界之湖开启去巨人国度的通道，于是就进到了耶梦加得身体内。&lt;/p&gt;

&lt;p&gt;然后拿到东西出来后，又又又碰到了巴德尔，于是又打了起来。事不过三，因为之前阿特柔斯意外获得了槲寄生做的箭矢，于是阿特柔斯一无所知的把槲寄生做的箭——唯一能伤害巴德尔的东西——射向了巴德尔，于是巴德尔领了盒饭。&lt;/p&gt;

&lt;p caption=&quot;无效攻击中的阿特柔斯&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/6C3B65C8-9BFD-48FA-85E7-01FDA7B12415_2.webp&quot; alt=&quot;无效攻击中的阿特柔斯&quot; title=&quot;无效攻击中的阿特柔斯&quot; /&gt;&lt;/p&gt;

&lt;p&gt;虽然巴德尔十分恨自己妈芙蕾雅，甚至在这里要掐死她，奎托斯是为了救芙蕾雅才杀了巴德尔的，但是芙蕾雅还是因为杀了巴德尔而十分的憎恨奎托斯，誓要杀了他，哎，这梁子算是结下了。&lt;/p&gt;

&lt;p caption=&quot;奎托斯杀巴德尔时说：人要学会成长&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/91753C16-BE95-42B9-B669-DA299C6870DB_2.webp&quot; alt=&quot;奎托斯杀巴德尔时说：人要学会成长&quot; title=&quot;奎托斯杀巴德尔时说：人要学会成长&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后奎托斯对自己儿子坦白了自己的过去。在知道了自己爹这么猛，杀了很多神之后，儿子乖了许多（其实并不是因为这个啦）。&lt;/p&gt;

&lt;p&gt;最终，上到了巨人国度约顿海姆的最高峰，洒下了骨灰。在去的路上还看到了预言壁画，有一幅画上画的是一个战神死在了儿子身边，但是这幅画被挡住了儿子没看到，但奎托斯看到了。难道说儿子杀爹是希腊神话绕不过去的坎？&lt;/p&gt;

&lt;p&gt;这一段撒骨灰的景色比较壮观，最高峰向远处看去，非常多的巨人的尸体，垒起来比山都高，一具挨着一具。这就是奥丁的杰作，也是母亲劳菲的目的：让他们知道奥丁对巨人族做过的事情，绝不原谅。&lt;/p&gt;

&lt;p caption=&quot;远处都是山一样的巨人的尸体&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/BA1A7CF4-F06F-4BE0-9485-BA17104B1C7E_2.webp&quot; alt=&quot;远处都是山一样的巨人的尸体&quot; title=&quot;远处都是山一样的巨人的尸体&quot; /&gt;&lt;/p&gt;

&lt;p&gt;不过后来在战神5中才知道，聪明的巨人族其实并不是死光了，而是自杀了，然后灵魂躲了起来，为后来复活有了个借口。而耶梦加得就是靠被阿特柔斯在战神5中将一个巨人的灵魂注入一条死去的巨蟒而创造的。&lt;/p&gt;

&lt;p&gt;在游戏的最后，时间显示是在五年后的一天，奎托斯突然在睡梦中被惊醒，连忙出门查看，一个胖子带着帽子站在门口，奎托斯问他是谁，胖子没有说话，亮出了自己标志性的武器——一把带闪电的锤子：雷神之锤，至此全游戏完毕。&lt;/p&gt;

&lt;p caption=&quot;雷神之锤&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/30CE910E-60B1-4B3A-97FC-3AB54706F197_2.webp&quot; alt=&quot;雷神之锤&quot; title=&quot;雷神之锤&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;在战神4中，九界中的一些国度被奥丁封锁因此无法前往，预计在战神5中会根据剧情开放，期待一下。&lt;/p&gt;

&lt;p caption=&quot;灵活的胖子雷神索尔&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/612C75AA-085D-47AA-A694-69C41561D1E0_2.webp&quot; alt=&quot;灵活的胖子雷神索尔&quot; title=&quot;灵活的胖子雷神索尔&quot; /&gt;&lt;/p&gt;

&lt;p&gt;另外据我目前云的战神5内容来看，会出场的有奎托斯父子就不说了，奥丁、索尔、芙蕾雅、芙蕾雅的猪变的人、战神提尔（提尔的著名特点是断了一只手臂）、巨狼芬里尔、俩矮人兄弟、密米尔（的头）、安格尔伯达（北欧神话的女巨人，北欧神话中洛基的外遇对象，他们俩的孩子会带来诸神黄昏）、海姆达尔（北欧神话中彩虹桥的操作员，光之神、破晓之神），其他的人物就没注意了。&lt;/p&gt;

&lt;p caption=&quot;安格尔伯达&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/6821BF6F-EB36-4668-8A48-DE700F4B1D4D_2.webp&quot; alt=&quot;安格尔伯达&quot; title=&quot;安格尔伯达&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;但我还是更喜欢白人，游戏而已别政治正确了行吗？&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/7AE7E522-625A-4FD5-B549-EF745D6FF685_2.webp&quot; alt=&quot;但我还是更喜欢白人，游戏而已别政治正确了行吗？&quot; title=&quot;但我还是更喜欢白人，游戏而已别政治正确了行吗？&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最后的最后，战神5结尾，奎托斯干掉了奥丁，成了新的北欧神王，重建九界秩序。而儿子去寻找之前说的自杀的躲起来的巨人族的灵魂而来到了埃及（因为儿媳妇儿女朋友安格尔伯达有埃及背景，在游戏中是个黑人女孩）。战神6奎托斯寻子去埃及屠杀众神也不是不可能。&lt;/p&gt;

&lt;p&gt;战神7中，奎托斯也许会来到神秘的东方，来寻找真正的大乘佛法以寻求自己内心的平静，顺便为儿子追寻长生不老之术，然后遇到了以「维稳」为名残暴统治众生的玉皇大帝等一众神；或者遇到了以极乐为诱饵，实则以苍生为食纵容手下杀人放火的西天佛祖；亦或者遇到了宣扬殉教后能升天堂，有8万奴隶和72个一直常为处女的新娘服侍的真主（不是我说瞎说的，自己去搜72处女）？不堪忍受比北欧神残暴和希腊神乱伦+弑父还恶心的奎托斯愤而全灭这些恶心又虚伪的东方神明？&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/269D345E-04FD-4ED7-9F55-2C96C8D0ECD8_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;盲猜奎托斯会和「&lt;del&gt;风暴&lt;/del&gt;岩石降生孙悟空、不焚者、&lt;del&gt;弥林的女王&lt;/del&gt;花果山的猴王、水帘洞的&lt;del&gt;卡丽熙&lt;/del&gt;洞主、定海神针的主人、齐天大圣、天宫大闹者暨十万天兵毁灭者、斗战胜佛，石之猴」并肩作战，科科~&lt;/p&gt;

&lt;p caption=&quot;连画风都跟奎托斯很像&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/god-of-war-4/CC5A9AD5-F908-492B-8664-AC9582ED3502_2.webp&quot; alt=&quot;连画风都跟奎托斯很像&quot; title=&quot;连画风都跟奎托斯很像&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Nov 2022 11:51:11 +0800</pubDate>
        <link>https://www.xheldon.cn/life/god-of-war-4.html</link>
        <guid isPermaLink="true">https://www.xheldon.cn/life/god-of-war-4.html</guid>
        
        <category>生活</category>
        
        <category>游戏</category>
        
        <category>战神</category>
        
        <category>希腊神话</category>
        
        <category>北欧神话</category>
        
        <category>奎托斯</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>家庭网络折腾之路由器</title>
        <description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;花了一周时间研究了一下路由器，浪费的时间如果不记录一下就白白浪费了，遂有此文。&lt;/p&gt;

&lt;p&gt;之前写过&lt;a href=&quot;/tech/my-home-network-2022.html&quot;&gt; 我的家庭网络拓扑结构&lt;/a&gt;，当时使用的路由器是联通宽带送的中兴 WiFi6 双频，速度说实话也还可以，有线大概能到 500M，但是无线就比较差了，把路由器放到客厅，卧室信号就不满格，厕所干脆就没信号了，而且媳妇儿经常抱怨说淘宝、抖音，刷着刷着打不开（断流？）。因此想趁着双十一，考虑入手一款路由器。&lt;/p&gt;

&lt;h2 id=&quot;我的需求&quot;&gt;我的需求&lt;/h2&gt;

&lt;p&gt;有了意向，第一步就是明确需求，我列了一下新路由器必须要满足的地方：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;信号强。这也是这次换路由器的原因。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;5 个网口，且均为千兆+。家里对网速有要求的有 Mac、PS、Swtich，都必须插网线，再加上 R4S 软路由，这就四个网口了，因此路由器必须有第五个网口才能接光猫。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;稳定性（低可玩性）。因为已经有 R4S 软路由了，因此其他花里胡哨的功能如内置 UU 加速器、可刷 Openwrt 等路由器附加功能就都不是必须的了，甚至，可玩性高意味着价格高，可玩性高还意味着不稳定。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;WiFi 6。这是趋势，就不多说了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;500 以内的预算。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;技术调研&quot;&gt;技术调研&lt;/h2&gt;

&lt;p&gt;基于以上需求，开始了路由器的研究。&lt;/p&gt;

&lt;p&gt;虽然我是做技术的，但是并不懂网络硬件，所想图简单省事儿，看到同事买了个 AX3000， 于是我也想买个小米路由器。看了一圈京东上的各种宣传加上论坛、百科，了解了一些基本概念，下面用大白话解释一下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;AX NNNN，其中「NNNN」表示的就是无线速率，所以如果你在网上搜索AX3000、AX5400、AX6000，会搜出来各种不同的品牌，也就是说这并不是某一款路由器的型号，而是标识着速率、档位，数字越大，价格越贵。另外 AX 表示的是使用了 IEEE 802.11AX 技术的路由器，也叫 WiFi6 路由器。AC 表示的是使用了 IEEE 802.11AC 技术的路由器，也叫 WiFi5 路由器。&lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/DF84BD30-BBB9-4AD0-B78B-1F476F90E478_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;mesh 组网，基本就是局域网漫游的意思，就是你家比较大，300平（夸张了，100多平的时候也需要），一台路由器覆盖不完全，那就需要多台路由器，但是在不同的路由器之间进行切换的时候就需要先断开再连接，于是 mesh 组网应运而生。原理是多个路由器相互连接，数据共享，信号覆盖全面，因此你一开始连接其中一台路由器，然后走到另一台路由器的时候，网不会断。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2.5G/1G 网口，1G 就是 1千兆，表示这个网口能传输的最大带宽。目前家庭带宽普遍都是在500~1000以内的，太大的 10G 的网口仅存在于局域网的 NAS 传输，如果家里没有 NAS 需求等家庭影音需求，就没必要。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;链路聚合，WLAN 口链路聚合，说是可以同时插入两条网线，比如同时插入两条 500M 带宽的联通宽带，然后网速可以叠加；LAN 口链路聚合同理，我没这个需求，没研究。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/1F612049-D1F1-4678-B7F3-A57C939B0CF8_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;双频，就是 2.4G 和 5G 频段同时存在，5G 这么快为啥还需要 2.4G 呢？是因为有些旧设备和智能家居只支持 2.4G。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;160MHZ 频宽，WiFi6 才有的这个东西，说是更快，之前都是 80MHZ。我看了下中兴的那款，确实 5G 也才到 80MHZ，越大越好。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/86D19FCB-F1F2-4F41-801A-39376CEA0F8C_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;4K QAM，没明白什么鬼说是能加快下载速度，但是目前说是只有小米手机有 20% 的提升，其他手机都不支持。&lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/557A4571-8D26-4562-9EBD-8DA7A2F3E560_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OFDMA 和 MU-MIMO，不知道什么东西，说是能降低多设备打游戏的延迟，奇怪的是 TP-Link 的这个选项默认是关闭的。&lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/E6B29FAB-C3A7-4930-A5C1-A3FDBCE0329D_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;多核，说是核越多越好（不是废话嘛），提高加解密的速度，咱也不知道，问了大佬的意见，高通的芯片方案就比较成熟，别用什么博通、联发科的方案，都是垃圾。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;信号放大器，顾名思义，说是能放大信号用的。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1G 超大内存，基本上内存大就表示可玩性强，因为内存大了，就可以变着法儿的折腾了，比如刷 Openwrt 机之类的，有些路由器只有 16M 内存，不存在可玩性（说的就是 XDR5480）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;USB 3.0 接口，路由器要 USB 接口，用来连接外置硬盘的，搞什么家庭文件传输。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;内置游戏加速器，基本都是跟网易 UU 合作，内置了游戏加速插件，可以在 Switch、PS5 联机的时候加速，不用单独再像我一样用软路由搞加速器了，本质是 VPN。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;主动散热，就是加了个风扇，被动散热，就是啥也不加，散热靠天意。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;IPV6，基本没用，路由器有这个功能也建议关闭，没普及的技术等于没有。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;回程，分有线回程和无线回程，mesh 组网需要的东西，说是用来提高传输效率和稳定性的，不懂。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/07ECFB04-C903-48AA-99D2-8835968488D2_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;多频合一，就是 2.4G 和 5G 合为一个网络信号，设备连的时候先试试支不支持 5G，不支持就让它连 2.4G，这个看了一圈，都建议不要开，开了的话一些智障家居用不了。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;技术选型&quot;&gt;技术选型&lt;/h2&gt;

&lt;p&gt;OK，以上是路由器购买的时候，商家宣传的一些内容，对于我来说实际是按我的需求来买的，对比了其他的路由器后，我买了TP-Link XDR5480，买它的时候有以下考虑：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;其实一开始是想买小米的，看了一圈它都是所有产品中相同价位用料最足和相同用料价格最便宜的。但是最后没买的原因有：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;鸡贼，旧的型号是 AX3600，下架了，说是搞了个 AX6000 的升级版，然后被人拆解后发现用料还不如 AX3600。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;只有四个 Lan 口，而且它的四个 Lan 口是共享的千兆的，离谱。加上小米的产品的其他尿性，当场放弃。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;可能是因为销量太大，因此我在各大平台上都看到有人说断流之类的，加上我同事买的 AX3000，也说有这个现象，但是他不确定是他家的网的问题还是路由器的问题，我秉持着宁可不买不可买错的原则，不买了！&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;对比上一代同定位机型硬件&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/6AEAAF56-6280-4259-9379-766209C1DF02_2.webp&quot; alt=&quot;对比上一代同定位机型硬件&quot; title=&quot;对比上一代同定位机型硬件&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;再然后问了同事，他用的是传说中的华硕 AC86U，在 WiFi5 时代很能打，口碑不错，一个是因为华硕就是专业做路由器的，并不是像某些厂家贴牌代工之类的。另一个是因为华硕一般出品的都是高端路由器，上千的那种，所以给人一种很吊的印象，再加上其路由器可玩性很强，可以刷梅林、刷 Openwrt，因此由专业玩家圈传出来的口碑还是不错的。但是我最终没买的原因有：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;贵。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;可玩性太强，我不需要可玩性，因此由于可玩性而带来的附加缺点「贵」，就成了最大的障碍。&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;华硕&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/EE73309D-B6BE-4E40-ACD5-4742D1EAD1A4_2.webp&quot; alt=&quot;华硕&quot; title=&quot;华硕&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;后来逛各种帖子的时候，如 V2EX、acwifi 等，经常有人在推 xdr5480，而且我研究了一圈，决定下单了，原因如下：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;我特意搜了一圈，很少有看到说有问题的。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;TP-Link 老牌子了，之前都说他做低端市场，然后出 5480 是想打个翻身仗，因为该机器的 CPU 一般都是上千元机型上才有的，性能很强，而且 5G 信号非常强。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;可玩性低，可玩性低就表示稳定，我正需要的就是稳定。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;除了四个千兆 Lan 口外，额外带 SFP 接口，可以买猫棒直插光纤，或者当 2.5G 网口使用。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;不到 500 的价格，在预算以内。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Lan 口可以作为 IPTV 口用，也就是说可以扔掉光猫了（当然我没这么做）。&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;买！&lt;/p&gt;

&lt;p caption=&quot;买贵了，后来价格保护了 60块&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/FB076D86-7E45-49B9-83BB-6930571BD834_2.webp&quot; alt=&quot;买贵了，后来价格保护了 60块&quot; title=&quot;买贵了，后来价格保护了 60块&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;继续折腾&quot;&gt;继续折腾&lt;/h2&gt;

&lt;p&gt;路由器到手之后，打开界面看了下，确实没什么好折腾的。不过这么强的路由器，什么也不做太可惜了，于是又开始了捣鼓。&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/210C2B71-DA81-4D73-A064-21F90B814979_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当前我的网络拓扑结构是，光纤入户插光猫，光猫是一级路由，然后分出来一个二级路由也就是现在买的这个 TP-Link 路由器，家里的设备都接的是 TP-Link 的无线/有线，但是仍然打开了光猫的 WiFi 功能，以便于网络故障的时候，可以连光猫的 WiFi 用来排查是路由器的问题还是光猫的问题。&lt;/p&gt;

&lt;p&gt;另外因为我没有路由翻墙的需求，因此将光猫的另一个千兆口（光猫有两个有线口，一个接二级路由了），接了索尼的电视，在上面装了安卓 TV 版的 Clash 看 YouTube，这个操作后来证明是很明智的，因为折腾路由的时候，可以保证电视是一直可用的。&lt;/p&gt;

&lt;h2 id=&quot;光猫-路由器连接方式&quot;&gt;光猫-路由器连接方式&lt;/h2&gt;

&lt;h3 id=&quot;名词解释&quot;&gt;名词解释&lt;/h3&gt;

&lt;h4 id=&quot;nat-地址转换&quot;&gt;NAT 地址转换&lt;/h4&gt;

&lt;p&gt;设备直接连接公网不行吗？为什么要NAT 地址转换呢？简单来说它存在的原因是，就是 IPV4 地址有限，因此运营商不会给你每家一个 IPV4 地址，所以你家里的上层网络其实还是个局域网，只不过是运营商的局域网。从你的设备发请求，请求经过路由器到光猫，需要一层 NAT 地址转换，然后从光猫到运营商的服务器又是一层 NAT 地址转换，但其实路由到光猫的这层转换这个过程是不必要的，下面说。&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/AB32DBA7-416B-4D17-B135-C603F6879C2D_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;网段&quot;&gt;网段&lt;/h4&gt;

&lt;p&gt;ipv4 中有四段（所以叫 v4），倒数第二个段不同即为不同网段，如 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.1.1&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.0.1&lt;/code&gt; 其中倒数第二段一个是1一个是2就是不同网段，不同网段之间不能直接互相访问。&lt;/p&gt;

&lt;h4 id=&quot;dhcp&quot;&gt;DHCP&lt;/h4&gt;

&lt;p&gt;就是动态分配 ip 的服务，一个网段只能有一个这个服务，否则会冲突导致上不了网。&lt;/p&gt;

&lt;h3 id=&quot;光猫路由-路由器路由&quot;&gt;光猫路由-路由器路由&lt;/h3&gt;

&lt;p&gt;这个就是普通的默认模式，光纤插光猫，从光猫的 Lan 口出来一根线插路由器的 WLAN 口，形成一二级路由。&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/E0465A42-43AC-4158-8D21-FDDD9A007089_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;简单，不需要任何设置。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;设备需要两级 NAT 地址转换才能到公网，会造成不必要的延迟。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;光猫路由-路由器-ap&quot;&gt;光猫路由-路由器 AP&lt;/h3&gt;

&lt;p&gt;就是将路由器当做光猫的信号放大器，可以将多个网络连接起来，可以两两连接。&lt;/p&gt;

&lt;p&gt;优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;简单，简单设置一下即可。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;光猫负载大，需要承担拨号、DHCP、NAT 等功能，浪费了路由器的性能。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;光猫路由-路由器桥接&quot;&gt;光猫路由-路由器桥接&lt;/h3&gt;

&lt;p&gt;跟 AP 模式差不多，也是用来放大光猫的信号的，其可以将多个网络连接起来，但是不能两两连接。优缺点同上。&lt;/p&gt;

&lt;h3 id=&quot;光猫桥接-路由器拨号&quot;&gt;光猫桥接-路由器拨号&lt;/h3&gt;

&lt;p&gt;就是光猫只作为光纤入户后，光信号转换成电信号的设备，其他的所有任务都交给性能更强的路由器。这也是我目前使用的方案。&lt;/p&gt;

&lt;p&gt;优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;性能差的光猫只负责光电转换（就是上面说的 SFP 猫棒的作用），不做其他作用。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;家庭网络里面只有一个网段，方便管理。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;通过申请公网 ip，加上路由器的端口映射（一般路由器都有这功能）方便外网管理局域网设备和软路由应用。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;只有路由器一次的 NAT 地址转换，延迟更低，带宽跑满。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;略麻烦，需要找运营商改光猫的配置，如果像网上一样自己悄悄改完了，运营商会自动下发配置改回去，需要一点点网络基础。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;路由器直插光纤&quot;&gt;路由器直插光纤&lt;/h3&gt;

&lt;p&gt;这个就需要上面说的 SFP 猫棒了，可以直接插到这个猫棒上，然后猫棒插入路由器的 SFP 口，让路由器既做光电转换，又拨号。但是据说这样做的话，SFP 会很烫，而且把风险都集中到一台设备上不合理，于是我没有这么做，因为：可以，但没必要。另外需要注意的是，据说 XDR 5480 这台设备只能用 TP-Link 自己出的猫棒，网上买的华为的猫棒不能用，不知道真假。猫棒也分 2.5G 和 10G（万兆）的，越大越贵。&lt;/p&gt;

&lt;p caption=&quot;SFP 光口（猫棒）&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/7E5DC73E-42DB-40C0-992E-3252AB123DDB_2.webp&quot; alt=&quot;SFP 光口（猫棒）&quot; title=&quot;SFP 光口（猫棒）&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;SFP 电口&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/C043F804-0595-4202-8BC1-72B5CE413FE1_2.webp&quot; alt=&quot;SFP 电口&quot; title=&quot;SFP 电口&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;如何让路由器拨号&quot;&gt;如何让路由器拨号？&lt;/h3&gt;

&lt;p&gt;坐标北京联通。网上搜了一堆的帖子，都是比较旧的，当时还是可以找联通师傅要光猫的超级密码来修改光猫的配置，让其从路由模式变为桥接模式。&lt;/p&gt;

&lt;p&gt;还有的地区，死活不让光猫桥接。&lt;/p&gt;

&lt;p&gt;但是现在都 2022 年了，于是我打电话跟联通，以下是对话：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我：你好，我家宽带需要公网 ip。 客服回复：好的稍等，我给您转接技术专家坐席。 技术专家：你是要公网 ip 吗？ 我：是的。 技术专家：好的，我这边后台给你改一下，十分钟后你重启一下光猫就可以了。 我：好的谢谢。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;完事儿。&lt;/p&gt;

&lt;p&gt;改完了公网 ip，还要让光猫改桥接（忘了一起给人说了），于是我又给客服打了个电话：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我：你好，我家的光猫想桥接，我应该怎么做？ 客服：我给您约了维修师傅上门，明天八点半前联系您。 我：你们不能直接后台操作，然后我这边配置一下吗？必须要师傅上门吗？  客服：是的。 我：好的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;第二天，师傅联系我：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;师傅：你是想改桥接是吧？ 我：是的，想外网访问局域网的设备和服务。 师傅：行，你等会儿，五分钟后我让后台给你改，我这边配置下发就行。 我：您不用上门吗？ 师傅：不用，有什么需要我上门的吗？你要搞桥接肯定懂这个呀，自己操作就行了。 我：我虽然懂，但是光猫上的一些设置不需要你们来操作吗？  师傅：不用，后台配置下发就行，光猫都不用重启，你就在路由器填光猫里面的那个宽带账号和密码就行，我这边配置改完了再联系你。 我：好的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;两分钟后，师傅联系我说，好了，于是我就直接在 TP-Link 的上网方式里面，选拨号上网，然后输入宽带账号密码拨号即可。宽带账号密码不知道的问联通师傅给你查，也可以进光猫查看，虽然里面的密码加密的，但是有 F12，改 input 元素的 type 即可，问题不大。&lt;/p&gt;

&lt;p caption=&quot;配置界面&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/ACC3C6BD-1248-48E4-A418-CE9EDAB86924_2.webp&quot; alt=&quot;配置界面&quot; title=&quot;配置界面&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tp-link-的简单玩法&quot;&gt;TP-Link 的简单玩法&lt;/h2&gt;

&lt;p&gt;DDNS + 端口映射是唯一可以玩的，不过对我来说已经足够了，因为我有 R4S，在外网通过端口映射和 TP-Link 自带的 DDNS 服务，访问 R4S 的界面和其上的各种服务，非常方便。以下是 TP-Link 的设置。&lt;/p&gt;

&lt;h3 id=&quot;ddns&quot;&gt;DDNS&lt;/h3&gt;

&lt;p&gt;原理示意图：&lt;/p&gt;

&lt;p caption=&quot;示意图&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/6EF8D96C-F524-4208-9C6D-654ED16C6E5B_2.webp&quot; alt=&quot;示意图&quot; title=&quot;示意图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;公网 ip 有了，但是运营商给你家宽带的 ip 地址并不固定，每次访问都要查 ip，如何方便的访问呢？答案就是 DDNS。路由器肯定知道你家的公网地址，然后再在路由器内将一个域名跟这个地址绑定一下，每次访问这个域名，就是访问最新的你家宽带的公网地址。&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/C0057015-EBE9-4C59-A281-BFDE21E4FB28_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;参考：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://service.tp-link.com.cn/detail_article_2444.html&quot; target=&quot;_blank&quot;&gt;[云路由器] TP-LINK DDNS动态域名的使用方法 - TP-LINK 服务支持&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;虚拟端口映射&quot;&gt;虚拟端口映射&lt;/h3&gt;

&lt;p&gt;示意图：&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/A55C6EDD-239D-4B07-9B1D-2F1255FB42FF_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;运营商为了安全，给你的公网 ip，一般是会封掉 web 服务常用的 80、8080 端口的，而且内网离会有多个服务分布在不同的端口，因此你需要端口映射，即从外网访问的端口，映射到内网中的端口，设置如下：&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/F9B87721-ED75-4A54-8BDC-E97D98C27373_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;参考：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://service.tp-link.com.cn/detail_article_2441.html&quot; target=&quot;_blank&quot;&gt;[云路由器] 如何映射服务器到外网 - TP-LINK 服务支持&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;效果：&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/E071C9FF-3F98-4883-9E58-C137BD1A916C_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;实际应用&quot;&gt;实际应用&lt;/h2&gt;

&lt;p&gt;目前用到的有 qBittorrent 下载、FileBrowser 文件管理、Aria2 下载，阿里云盘我没有开放端口，因为毕竟只有在内网访问的需求:&lt;/p&gt;

&lt;p caption=&quot;qBittorrent用来bt下载&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/3484C433-2CA9-471C-9DBC-84A2B124DCA6_2.webp&quot; alt=&quot;qBittorrent用来bt下载&quot; title=&quot;qBittorrent用来bt下载&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;有了FileBrowser可以抛弃网盘了&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/57B2FF81-7BEA-414B-B72F-12E30F4692C1_2.webp&quot; alt=&quot;有了FileBrowser可以抛弃网盘了&quot; title=&quot;有了FileBrowser可以抛弃网盘了&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;Aria2下载工具&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/DAB8FBBA-A635-45AD-AA0E-B8DE4F132D71_2.webp&quot; alt=&quot;Aria2下载工具&quot; title=&quot;Aria2下载工具&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aria2用来普通下载，可以代替 Chrome 浏览器默认的下载工具，多线程下载快的不是一点半点，相同资源对比：&lt;/p&gt;

&lt;p caption=&quot;Aria2下载速度&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/8B1970F4-35B8-44A3-90A6-F9D94BA3A977_2.webp&quot; alt=&quot;Aria2下载速度&quot; title=&quot;Aria2下载速度&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;浏览器下载速度&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/E8B6B0AE-F316-4E7C-B0F6-45E68EFC02E0_2.webp&quot; alt=&quot;浏览器下载速度&quot; title=&quot;浏览器下载速度&quot; /&gt;&lt;/p&gt;

&lt;p&gt;日常使用场景就是，媳妇儿让我下载的东西我下载好后，通过 FileBrowser 的分享给她，还可以设置分享链接有效期，非常方便：&lt;/p&gt;

&lt;p caption=&quot;Image&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/home-network-router/D2560A89-D1C2-4208-AB08-D63DB4FC2492_2.webp&quot; alt=&quot;Image&quot; title=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;结束语&quot;&gt;结束语&lt;/h2&gt;

&lt;p&gt;网络拓扑的知识真的挺有意思的。在互联网刚诞生的阶段，谁也不会也想不到互联网会发展成如今的样子。而每个系统都是从简单，到复杂；从低等，到高等一步步发展来的，因此你可以在一些简单的设备中，发掘到在互联网设计之初，设计者们是如何思考的，然后遇到了什么问题（比如 ipv4 枯竭和对应的解决方案 NAT 地址转换技术），然后他们是如何解决的，如果是你的话，会如何解决呢？非常有意思。&lt;/p&gt;

</description>
        <pubDate>Tue, 15 Nov 2022 23:38:20 +0800</pubDate>
        <link>https://www.xheldon.cn/tech/home-network-router.html</link>
        <guid isPermaLink="true">https://www.xheldon.cn/tech/home-network-router.html</guid>
        
        <category>技术</category>
        
        <category>路由器</category>
        
        <category>折腾</category>
        
        <category>网络</category>
        
        <category>千兆</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>关于 Clash 使用的一点记录</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;⚠️ 本文涉及的节点、机场订阅服务，都是子虚乌有个人杜撰的，实际并不存在，此处只是一个 Demo 示例，请大家知晓。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;Clash 是一款好用的富强工具，它只是一个内核叫 Clash core，本质是一款命令行工具（谁又说任何软件本质不是命令行呢？），大神们据此开发了各式各样的 GUI 界面以方便设置和使用。我曾经使用过 Mac 上的 ClashX 和 Clash For Windows For Mac（你没有看错），也即通常所说的 CFW。因为方便开发的原因，它使用的是 Electron 的架构来实现的 GUI，所以它可以打包成 Mac 版和 Window 版本，非常好用。&lt;/p&gt;

&lt;p&gt;我目前使用的是 Clash For Windows 这个。&lt;/p&gt;

&lt;p caption=&quot;Clash for Windows For Mac 界面&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/958140EE-7CCB-4D5B-8CAD-1B6358AAAB57_2.webp&quot; alt=&quot;Clash for Windows For Mac 界面&quot; title=&quot;Clash for Windows For Mac 界面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当然，国际惯例，本篇文章除了简单介绍常用设置的用处外，还简单介绍了下如何更新订阅链接和切换节点，防止某些人一有问题就来责怪我：「为什么 behance 又打不开了啊！」「为什么翻个墙这么麻烦啊！」「你花那么多钱买梯子怎么还这么难用啊！」的时候，我把这篇文章摔给她，然后继续打游戏。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;⚠️ 名词解释：富强 = 翻q&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;一些设置的用处&quot;&gt;一些设置的用处&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;这些说明基本都在它的使用说明里面，我这里结合自己的真实使用场景介绍一下。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;geoip-database&quot;&gt;GeoIP Database&lt;/h3&gt;

&lt;p&gt;它的功能是可以基于 IP 的地理位置来判断是否需要走代理，原理是维护了一个数据库到本地，然后查询即可。因为 IP 地址是不断更新的，所以这个数据库也是需要偶尔更新一次的（不频繁）。&lt;/p&gt;

&lt;p caption=&quot;GeoIP 数据库下载&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/F70734A2-11A9-43F7-BA74-BE599A4B4632_2.webp&quot; alt=&quot;GeoIP 数据库下载&quot; title=&quot;GeoIP 数据库下载&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;tun-mode&quot;&gt;TUN Mode&lt;/h3&gt;

&lt;p&gt;有些软件不遵循系统代理，如终端、iTerm、Infuse。TUN 模式就是为了解决这个问题的，它对于不遵循系统代理的软件，它可以接管其流量并交由 CFW 处理。&lt;/p&gt;

&lt;p&gt;我个人的实际使用是为了看 Infuse 中的 Emby。因为我的 Emby 服务是需要机场特定节点的，然而 Infuse （似乎）内置了自己的请求工具，并未走系统代理，因此即使将 CFW 设置为系统代理，同时指定了正确的节点，却还是无法打开机场提供的 Emby 服务，此时只需要打开 TUN 模式即可解决。&lt;/p&gt;

&lt;p&gt;还一个使用场景是，打开了 TUN 模式后，iTerm 终端的命令也会走代理流量了；如果没有打开 TUN 模式的话，git clone 等是不会走代理流量的，我之前的办法是是手动创建一个 alias 命令来指定终端代理，需要的时候按 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ppp&lt;/code&gt; 回车，不需要的时候按 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sss&lt;/code&gt; 回车（我的代理端口是 7890）：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Bash&quot;&gt;alias ppp=&quot;export https_proxy=http://127.0.0.1:7890;export http_proxy=http://127.0.0.1:7890;export all_proxy=socks5://127.0.0.1:7890&quot;
alias sss=&quot;unset all_proxy;unset https_proxy;unset http_proxy&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启用 TUN 模式需要 Service Mode，具体方式可以见文档：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.cfw.lbyczf.com/contents/tun.html#macos&quot; target=&quot;_blank&quot;&gt;TUN 模式 | Clash for Windows&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;不过我个人遇到的一个情况是，CFW 提示我 Service Mode 已经打开，但是那个小地球图标是红色的。于是我先关闭了一下 Service Mode，CFW 自动重启后显示 Service Mode 未激活，同时只有两个按钮可以点 install 和 uninstall，于是我就点那个 install，重启后还是红色的小地球图标，于是我先 uninstall 后再 install，CFW 自动重启后就变成绿色小地球了。说这一点是说，可能 GUI 有 bug，遇到问题最好多尝试几次不同的方式来解决。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;💡 记得关闭软件的安全 DNS 功能，才能正常使用 TUN 模式。如果你发现 TUN 模式下软件不好使，可能跟该软件的这个功能原因。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p caption=&quot;Chrome 关闭安全 DNS&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/F81A0395-B1AE-40AC-B414-15EB8E5714DE_2.webp&quot; alt=&quot;Chrome 关闭安全 DNS&quot; title=&quot;Chrome 关闭安全 DNS&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;parser&quot;&gt;Parser&lt;/h3&gt;

&lt;p&gt;也即「配置文件预处理」。&lt;/p&gt;

&lt;p&gt;有些时候你想在 CFW 的分流规则生效之前，设置自己的规则。比如大多数人用的都是机场订阅链接，机场的订阅链接都自带了自己的分流规则，类似全球直连、全球拦截、漏网之鱼这种：&lt;/p&gt;

&lt;p caption=&quot;机场的内置分流规则&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/A4BA694C-B4B1-4964-9D6C-EFB8E3C12184_2.webp&quot; alt=&quot;机场的内置分流规则&quot; title=&quot;机场的内置分流规则&quot; /&gt;&lt;/p&gt;

&lt;p&gt;而你想有自己自定义的规则，如某个特定链接走代理。如果你直接修改订阅链接下载的配置文件，那么下次订阅链接更新的时候，&lt;strong&gt;你的修改就会被覆盖&lt;/strong&gt;。于是 Parser 应运而生。&lt;/p&gt;

&lt;p&gt;简单来说，Parser 会在机场订阅规则应用前，首先应用你配置的规则，并将你的规则合并到最终生效的规则中。比如我经常访问的一个网站，它有两套域名，如果访客是大陆用户，则直接返回大陆内容；如果是海外 ip 访问该网站，该网站会跳转到海外地址上。&lt;/p&gt;

&lt;p&gt;而尴尬的是，一旦开启了 TUN  模式，该网站就会判定你是海外用户，就无法以大陆用户的身份来访问该网站了（账号不互通）。于是我就可以使用 Parser 功能，将该网站的大陆版地址加入然后设置直连即可：&lt;/p&gt;

&lt;p caption=&quot;只支持针对特定节点列表配置文件进行预处理&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/8B575173-C01D-4E41-8213-1540979CC691_2.webp&quot; alt=&quot;只支持针对特定节点列表配置文件进行预处理&quot; title=&quot;只支持针对特定节点列表配置文件进行预处理&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是，比较尴尬的是，它只针对某个特定的 yaml（也即下面说的订阅节点列表）生效，因此如果你有多个订阅节点列表（机场），那就需要写多个 url。&lt;/p&gt;

&lt;p&gt;更新：好消息是 CFW 支持一个规则匹配多个订阅节点列表了，使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reg&lt;/code&gt; 字段正则匹配即可，如下我使用的是匹配全部配置文件：&lt;/p&gt;

&lt;p caption=&quot;reg 匹配多个 yaml 配置文件&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/01CDE02A-C3F4-48D1-B4D0-53E6A7C57D84_2.webp&quot; alt=&quot;reg 匹配多个 yaml 配置文件&quot; title=&quot;reg 匹配多个 yaml 配置文件&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;点击查看配置文件的Parser&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/71687212-4376-4A13-B7C6-304066D33D6F_2.webp&quot; alt=&quot;点击查看配置文件的Parser&quot; title=&quot;点击查看配置文件的Parser&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击订阅节点列表，查看该配置对应的 Parser。&lt;/p&gt;

&lt;p caption=&quot;该 Parser 能匹配上配置文件&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/499B32EF-5C31-4E35-A0D4-B61198B8578C_2.webp&quot; alt=&quot;该 Parser 能匹配上配置文件&quot; title=&quot;该 Parser 能匹配上配置文件&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意：订阅转换服务可能使 Parser 失效。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意：设置完 Parser 后需要点一下当前代理的更新按钮才会生效。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;diff&quot;&gt;Diff&lt;/h3&gt;

&lt;p&gt;该功能作用给上面的 Parser 类似，但它会作用于 Parser 之后生效。原理是先手动生成一个文件（类似于 git 的 base 版本），该文件可以是你基于当前订阅配置文件修改后的文件。然后每当订阅配置文件更新的时候就会将新的与旧的 diff 一次，如果发现有问题就需要手动解决一次冲突。&lt;/p&gt;

&lt;p&gt;该功能目的也是为了保证每次更新不会覆盖你对当前配置文件的修改。&lt;/p&gt;

&lt;h3 id=&quot;mixin&quot;&gt;Mixin&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;⚠️ &lt;strong&gt;注意：此功能只适合注入「&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;功能属性」&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;，同时 mixin 中的规则会覆盖机场订阅列表中的其他规则！因此，你只应该在 mixin 中设置注入 dns 等的信息，而不应该设置 rules 等的信息，因为其会使机场订阅的节点无效。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p caption=&quot;Mixin 设置&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/5BD8837D-D779-462F-8C7A-4E4AEC024B8B_2.webp&quot; alt=&quot;Mixin 设置&quot; title=&quot;Mixin 设置&quot; /&gt;&lt;/p&gt;

&lt;p&gt;还有一个设置入口在 Setting 里面，这里可以选择 JavaScript 格式的 Mixin 设置，具体可以参看文档：&lt;/p&gt;

&lt;p caption=&quot;Mixin 总设置&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/D1C4A8E9-A706-4CF1-A19F-FBD2DD439A34_2.webp&quot; alt=&quot;Mixin 总设置&quot; title=&quot;Mixin 总设置&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;system-proxy&quot;&gt;System Proxy&lt;/h3&gt;

&lt;p&gt;顾名思义，就是将 Clash 设置为系统代理。如果关闭的话，有些依赖系统代理的软件，就不能富强了，比如 Safari。因此如果你想让你的 Safari 富强，务必打开 System Proxy。&lt;/p&gt;

&lt;h2 id=&quot;无法正常富强时排查方式&quot;&gt;无法正常富强时排查方式&lt;/h2&gt;

&lt;p&gt;当访问需要富强的网站确发现无法富强的时候，可以按下面几点简单排查一下：&lt;/p&gt;

&lt;h3 id=&quot;第一步检查-proxies&quot;&gt;第一步：检查 Proxies&lt;/h3&gt;

&lt;p&gt;点击菜单栏中的小猫咪&lt;/p&gt;

&lt;p caption=&quot;小猫咪被点击啦&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/FB1C6B63-F79E-424B-87E7-E3909A39697E_2.webp&quot; alt=&quot;小猫咪被点击啦&quot; title=&quot;小猫咪被点击啦&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在打开的界面中点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Proxies&lt;/code&gt; tab 栏，然后点击节点选择：&lt;/p&gt;

&lt;p caption=&quot;点击节点选择会展开节点&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/3814EF32-EA61-4D8E-BB07-2414E4CF55AD_2.webp&quot; alt=&quot;点击节点选择会展开节点&quot; title=&quot;点击节点选择会展开节点&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;💡 自动选择：CFW 会自动选择可用节点&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;此时注意查看节点选择后面的文字是不是自动选择（默认应该是的，你不应该动这个地方），确保是自动选择，然后点击测速查看当前自动选择节点的速度：&lt;/p&gt;

&lt;p caption=&quot;测速结果在右侧&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/F9BC2145-EE96-43CD-BABF-EE31506E35AE_2.webp&quot; alt=&quot;测速结果在右侧&quot; title=&quot;测速结果在右侧&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里如果节点不可用的话，会显示是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Timeout&lt;/code&gt; 超时，如果延迟过高如 1000+ 会以红色数字显示，会表示富强的网速慢。&lt;/p&gt;

&lt;h3 id=&quot;第二步检查-profiles&quot;&gt;第二步：检查 Profiles&lt;/h3&gt;

&lt;p&gt;一般情况下，你的 Profiles 都应该有多个，诸如这样的：&lt;/p&gt;

&lt;p caption=&quot;在多个节点列表中切换&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/0B0E0986-FEC8-4233-B5AB-8FB688E90654_2.webp&quot; alt=&quot;在多个节点列表中切换&quot; title=&quot;在多个节点列表中切换&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果在第一步发现节点测速显示都是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Timeout&lt;/code&gt; ，那么可以考虑更换节点列表，上图中点击一个新的 block，如果其左侧变绿，就表示切换为当前 block 的节点列表了。然后此时再重新执行第一步检查节点的速度是否正常即可。&lt;/p&gt;

&lt;p&gt;另外如果上图中的节点列表很久没更新（括号中显示更新时间），那么点击上面的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update All&lt;/code&gt; 尝试更新。此时可能更新失败，可以换其他 block 点击后，再次点 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update All&lt;/code&gt; 尝试更新即可：&lt;/p&gt;

&lt;p caption=&quot;更新节点列表&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/22A4E748-9C2C-4DC2-8641-EEC3BD0D6F7A_2.webp&quot; alt=&quot;更新节点列表&quot; title=&quot;更新节点列表&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意，不要在多个节点列表之间切换过快，可能会导致错误，切换一个后，等个 3~4 秒再切换其他的（如果必要的话）。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;第三步断开全部链接&quot;&gt;第三步：断开全部链接&lt;/h3&gt;

&lt;p&gt;如果发现上面两步执行过后，都没问题，但是就是无法打开页面，那么可能是因为此时浏览器还保持着之前的连接未断开，故而没有重新通过代理监理链接。此时只需要在 CFW 的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Connections&lt;/code&gt; tab 中，点击断开全部链接，然后刷新你打不开的页面即可：&lt;/p&gt;

&lt;p caption=&quot;断开全部连接&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/FC7E6C7A-35B6-4004-92C6-E9ABE547CF7A_2.webp&quot; alt=&quot;断开全部连接&quot; title=&quot;断开全部连接&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;添加新的机场订阅&quot;&gt;添加新的机场订阅&lt;/h2&gt;

&lt;p&gt;新的机场订阅即上面说的「节点列表」。&lt;/p&gt;

&lt;p&gt;在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Profiles&lt;/code&gt; tab 中，将你拿到的链接粘贴到当前唯一的输入框，然后点 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Download&lt;/code&gt; 即可，如果下载成功会有提示：&lt;/p&gt;

&lt;p caption=&quot;添加新的节点列表&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/3F3F03C3-CE8A-4D96-9EA8-9237D4C55A35_2.webp&quot; alt=&quot;添加新的节点列表&quot; title=&quot;添加新的节点列表&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;其他&quot;&gt;其他&lt;/h2&gt;

&lt;h3 id=&quot;富强模式&quot;&gt;富强模式&lt;/h3&gt;

&lt;p&gt;Clash 有不同的富强模式，如全局，即所有网络链接都富强；有 Rule，即按照你定的规则，不同的网络链接有的富强有的直连；有 Direct 表示全部网络链接都直接连接，效果等同于没有开 Clash 富强；有 Script，可以写一个 JavaScript脚本，让自定义脚本判断哪些链接走富强，哪些直连。这些配置可以在这里切换：&lt;/p&gt;

&lt;p caption=&quot;切换富强方式&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/DC0BF45B-91D3-45DF-B230-254A2648EDD6_2.webp&quot; alt=&quot;切换富强方式&quot; title=&quot;切换富强方式&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;代理局域网的其他设备&quot;&gt;代理局域网的其他设备&lt;/h3&gt;

&lt;p&gt;Clash 可以代理当前局域网同一网段的其他设备的网络链接，让无法富强的其他设备也能富强，最典型的用法就是代理 Apple TV 的。因为 Apple TV 系统没有开放相关代理接口，因此其不像手机一样可以直接安装富强软件进行富强，因此要么借助路由器富强，要么就是将其代理服务器设置为 Clash 所在的设备，然后在 Clash 中打开 Allow LAN 即可：&lt;/p&gt;

&lt;p caption=&quot;允许本地局域网连接&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/the-using-of-cfw/C48B8690-F44B-4465-9BF7-8A2F4960F904_2.webp&quot; alt=&quot;允许本地局域网连接&quot; title=&quot;允许本地局域网连接&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;什么是机场订阅链接&quot;&gt;什么是机场订阅链接？&lt;/h3&gt;

&lt;p&gt;机场订阅链接就是机场给你一个链接，然后 Clash 会解析这个链接，该链接会让 Clash 下载一个 yaml 格式的配置文件，来指示 Clash 如何功能。&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Oct 2022 18:52:22 +0800</pubDate>
        <link>https://www.xheldon.cn/tech/the-using-of-clash-for-windows.html</link>
        <guid isPermaLink="true">https://www.xheldon.cn/tech/the-using-of-clash-for-windows.html</guid>
        
        <category>技术</category>
        
        <category>富强</category>
        
        <category>Clash</category>
        
        <category>教程</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>2022 我的家庭网络拓扑结构</title>
        <description>&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;在预算有限的情况下，尽可能满足自己的需求是折腾的乐趣之一；换句话说，有钱当然可以直接买最好的，性能过剩不要紧，最重要的是要能覆盖目前用不到但将来可能用到的一些使用场景。&lt;/p&gt;

&lt;p&gt;这里简单分享下本人在折腾网络过程中的一些记录和心得，当然主要还是为了在媳妇儿发现我花了钱但是家里的网并没有很好用的时候，我就把这篇文章甩给她，让她自己看钱花到哪儿而写的。&lt;/p&gt;

&lt;h2 id=&quot;网络拓tuo扑pu图&quot;&gt;网络拓(tuo)扑(pu)图&lt;/h2&gt;

&lt;p&gt;废话不说，直接上图：&lt;/p&gt;

&lt;p caption=&quot;家庭网络拓扑图&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/7FB3F86F-60A4-4E21-BFFC-E399977692A2_2.png&quot; alt=&quot;家庭网络拓扑图&quot; title=&quot;家庭网络拓扑图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我的需求是：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;有网口或对网络要求高的，尽量连有线。如 PS5、Switch、Mac Studio 等，毕竟有线更稳定和快速。无线再快、5G 再快，空间传输的损耗也比有线大得多。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;已连接路由器的设备不要再次连接，如各种智障家居、电视手机等，因为太麻烦了（十几个设备一个一个输入密码要死了）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;主机如 Switch、PS5 等，需要使用 UU 加速器联网，且这些主机设备没有翻墙需求。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;智能设备如手机、iPad、电脑自带翻墙软件，无需翻墙环境。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Apple TV 也没有看 NetFlix、YouTube 的需求，因此也无需翻墙环境，只需要访问阿里云盘服务和外接硬盘资源即可。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;因为有光猫和路由的存在，因此有两个网段，光猫是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.1.x&lt;/code&gt; ，而路由器是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.5.x&lt;/code&gt; ，两个网段设备不互通。&lt;/p&gt;

&lt;p&gt;下面按上图的设备顺序说一下细节。&lt;/p&gt;

&lt;h2 id=&quot;网络连接&quot;&gt;网络连接&lt;/h2&gt;

&lt;h3 id=&quot;互联网--光猫&quot;&gt;互联网 → 光猫&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;花费：149元/月（宽带费用）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;联通融合宽带 500M 光纤入户，宽带和手机号绑定，融合宽带的意思即手机不停机宽带就一直用，只是需要每年存 1000 块，然后按月返还。另外还送了一条 500M 的宽带让我卖给同事回回血了。办宽带的时候还送了个 WiFi 6 的 中兴路由器，网上查了查 200 块左右，还算稳定，所以一直用着。&lt;/p&gt;

&lt;h3 id=&quot;光猫--路由器&quot;&gt;光猫 → 路由器&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;花费：0&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;路由器就是上面说的，办宽带送的。网上很多人说不建议使用光猫拨号，让用路由器拨号，这样可以省下来一个网段，而且光猫的性能显然没有路由器强。不过这些场景都是需要万兆宽带的大佬才搞的，我是觉得没必要，而且多一个网段刚好可以把一些需要直连的智障设备隔离开，索性就没搞了。更何况送的路由器也没有很好。&lt;/p&gt;

&lt;h2 id=&quot;光猫--无线设备&quot;&gt;光猫 → 无线设备&lt;/h2&gt;

&lt;p&gt;有些智障硬件，走复杂网络的时候会出现无法连接的情况，如 360智障看家相机，因此这里我没有关闭光猫的无线功能。光猫的无线也可以在网络出问题的时候作为一个检测手段，来看看是路由器的问题还是光猫的问题。&lt;/p&gt;

&lt;h2 id=&quot;路由器--多个设备&quot;&gt;路由器 → 多个设备&lt;/h2&gt;

&lt;p&gt;路由器只有四个网口，我曾经在京东搜过目前流行的路由器，发现都是最多只有四个网口。因此，路由器除了连接光猫、连接 R4S，就只剩下两个网口供设备连有线了，我选择把这两个口给 Mac Studio 和 PS 5。&lt;/p&gt;

&lt;h3 id=&quot;路由器--r4s&quot;&gt;路由器 → R4S&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;花费：620元（满血R4S配置）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;R4S 使用旁路由的方式连接，这种非侵入式的接入方式比较符合我的需求。旁路由也即将 R4S 当成一个路由器下的设备，需要使用 R4S 中服务的设备如主机加速器服务，就把主机网络设置中的网关和 DNS 指向与它同网段的 R4S 的地址即可。&lt;/p&gt;

&lt;h3 id=&quot;路由器--ps5mac-studio&quot;&gt;路由器 → PS5/Mac Studio&lt;/h3&gt;

&lt;p&gt;实测 PS5 连接有线比无线下载游戏快的多的多。而我的 Mac Studio，这么强的配置不得配个有线的网？&lt;/p&gt;

&lt;h3 id=&quot;路由器--无线设备&quot;&gt;路由器 → 无线设备&lt;/h3&gt;

&lt;p&gt;剩下的就是一些无线设备，如手机、Pad、Apple TV、其他电脑、电视了，直接连 WiFi 即可。&lt;/p&gt;

&lt;h2 id=&quot;细节说明&quot;&gt;细节说明&lt;/h2&gt;

&lt;p&gt;这里的细节主要是 R4S 的，因为之前使用旁路由的时候需要各种设置比较费劲，于是这里记录一下。&lt;/p&gt;

&lt;h3 id=&quot;旁路由的设置&quot;&gt;旁路由的设置&lt;/h3&gt;

&lt;h3 id=&quot;r4s-wan-口变-lan-口&quot;&gt;R4S Wan 口变 Lan 口&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;花费：79元（USB 转千兆网口线）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;因为 R4S 自带了两个网口，且作为旁路由使用，因此就浪费了一个 Wan 口，又得知其实它的 Wan 口和 Lan 口都是通用的，于是就简单设置了一下，将 Wan 口变 Lan 口了。关于如何将 R4S 作为旁路由的设置，见下面这个视频，讲解的比较清楚，按照视频一步一步设置即可：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=w7rwNF2Q3lM&amp;amp;t=399s&quot; target=&quot;_blank&quot;&gt;软路由做旁路由三步搞定！openwrt软路由 R2S R4S openwrt软路由科学上网设置&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;而 Wan 口变 Lan 口更简单，在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;网络-接口&lt;/code&gt; 中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;接口总览&lt;/code&gt; 中，将 WAN 口删除，然后在 LAN 口中的物理设置中，勾选上 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;桥接接口&lt;/code&gt;，再将下面的两个物理接口 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eth0&lt;/code&gt; （原 wan 物理接口）和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eth1&lt;/code&gt; （现有的 lan 物理接口）都勾选上，保存并应用即可。&lt;/p&gt;

&lt;p caption=&quot;删除WAN口接口&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/99893BE3-9853-4B8D-ACA6-A8F49ABD1040_2.png&quot; alt=&quot;删除WAN口接口&quot; title=&quot;删除WAN口接口&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;物理接口桥接&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/EDACBD7C-2FA3-4713-9090-DAEEBEA6E8E8_2.png&quot; alt=&quot;物理接口桥接&quot; title=&quot;物理接口桥接&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此就大功告成了。我将 Switch 连接了这个 Lan 口，但是因为 Switch 并没有网口，因此使用的是 USB 转千兆网口，京东买的：&lt;/p&gt;

&lt;p caption=&quot;绿联USB转网口线&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/FE060576-56CF-45CB-8D48-73B03A392CAF_2.png&quot; alt=&quot;绿联USB转网口线&quot; title=&quot;绿联USB转网口线&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://item.jd.com/100023032574.html&quot; target=&quot;_blank&quot;&gt;【绿联50922】绿联 USB3.0千兆有线网卡转RJ45网线接口转换头 适用苹果华为笔记本任天堂Switch外置网口扩展坞分线器转接器【行情 报价 价格 评测】-京东&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;r4s-装阿里云盘-webdav&quot;&gt;R4S 装阿里云盘 WebDav&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;花费：98元/年（阿里云盘服务）+ 9.9 美元/年 （Infuse 7 订阅）费 + 1399 元（Apple TV）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;不赘述，详见：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.xheldon.com/life/the-way-to-watching-tv.html#%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98&quot; target=&quot;_blank&quot;&gt;我的家庭观影之路 - Xheldon Blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;（如果访问速度慢，中文博客地址是上述域名 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.com&lt;/code&gt; 改成 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.cn&lt;/code&gt; 即可。）&lt;/p&gt;

&lt;h3 id=&quot;r4s装-uu-路由器插件&quot;&gt;R4S装 UU 路由器插件&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;花费：30元/月（UU 加速器费用）+ 599港元/年（PS 高级会员） + 30.6元/年（任天堂会员）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;买 R4S 的时候内置了该插件，如果需要可以自己装。但神奇的是我曾经因为执念而觉得官方的安装会更好，于是就把 R4S 内置的 UU 加速器插件删了，用官方的方式安装（官方安装方式不带 luci 界面）：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://uu.163.com/router/direction.html&quot; target=&quot;_blank&quot;&gt;网易UU加速器——玩出超快感，全球加速72小时免费体验&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;但是加速效果很差（也可能是心理作用，毕竟我没有专业的测速和控制变量对比，只是感觉），于是怒重置 R4S 系统，重新用回了预装的带界面的 UU 加速器路由插件，感觉还不错。&lt;/p&gt;

&lt;p caption=&quot;UU加速器路由插件&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/8C970209-06FC-4D2B-BAAC-9FA0A049C41B_2.png&quot; alt=&quot;UU加速器路由插件&quot; title=&quot;UU加速器路由插件&quot; /&gt;&lt;/p&gt;

&lt;p&gt;不过说是带界面的，其实也就一个开关🥲。&lt;/p&gt;

&lt;p&gt;看下 Switch 的加速效果：&lt;/p&gt;

&lt;p caption=&quot;使用UU加速器前&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/B0B44A63-E971-4E65-A5BD-05C5F32C7168_2.jpeg&quot; alt=&quot;使用UU加速器前&quot; title=&quot;使用UU加速器前&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;使用UU加速器后&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/402B4436-D2F3-4353-BF06-A9F6D5225F9F_2.jpeg&quot; alt=&quot;使用UU加速器后&quot; title=&quot;使用UU加速器后&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以看到加速的效果还是很明显的，玩喷射战士3和马里奥卡丁车8 一下午，只发生了 2 次连接失败的情况（喷射战士基本几分钟一局，打一下午有几十局）。&lt;/p&gt;

&lt;h3 id=&quot;r4s装-qbittorrent&quot;&gt;R4S装 qBittorrent&lt;/h3&gt;

&lt;p&gt;不赘述，详见：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.xheldon.com/life/the-way-to-watching-tv.html#qbittorrent&quot; target=&quot;_blank&quot;&gt;我的家庭观影之路 - Xheldon Blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;（如果访问速度慢，中文博客地址是上述域名 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.com&lt;/code&gt; 改成 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.cn&lt;/code&gt; 即可。）&lt;/p&gt;

&lt;h2 id=&quot;翻墙服务&quot;&gt;翻墙服务&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;花费：241元/年（忍者云） + 137元/年（AgentNEO）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;之前在 R4S 上用过翻墙服务，诚然可以让 Apple TV、PS5 等设备直接访问 YouTube，或者可以直接将主机相册内容分享到 Twitter，但是这些功能一个是并不是必须的，一个是在 R4S 上使用翻墙插件会与 UU 游戏加速器的 VPN 服务冲突（也许可以共存，但是我没折腾了），于是我就只保留了加速器功能，毕竟 YouTube、Netflix 等服务本来看的就少，而且也可以在电脑端看。&lt;/p&gt;

&lt;h2 id=&quot;其他&quot;&gt;其他&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;其实更多的是建议有线连接在路由器里面设置一下 IP 和 Mac 地址绑定，这样的话无论是加速器还是各种服务都是有好处的，防止断网等情况 IP 重新获得的时候有变更导致某些服务失败的情况，我懒得搞了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;想让设备尽可能使用有线连接，可以将有线接光猫的 Lan 口。但是这有两个问题：&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;我家的垃圾联通光猫型号是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;烽火 HG2543c1&lt;/code&gt; ，只有一个千兆的口，接路由器了，因此即使用光猫的百兆有线，还不如路由器的千兆 5G WiFi 快。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;光猫和路由器是两个网段（光猫的是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.1.1&lt;/code&gt; ，路由器的是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.5.1&lt;/code&gt; ）因此需要在光猫处设置一个静态路由表，才能将接在光猫 Lan 口的设备访问其下级路由器上的设备（如软路由），但还是因为联通光猫的原因，这款光猫并没有静态路由表的设置，捣鼓了半天尝试进入光猫的超级管理员界面（地址是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://192.168.1.1/CU.html&lt;/code&gt; ，显示的是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;维修管理员账号&lt;/code&gt; ，无果。打电话问联通的师傅得知：&lt;/p&gt;

        &lt;ol&gt;
          &lt;li&gt;
            &lt;p&gt;他们都用维修人员专用的 app 进后台，密码都是动态下发的，他们也不知道是否有维修管理员账号/超级账号，或许有，但是厂家并提供给他们。&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;如果我想做路由拨号、家里搞个服务器之类的功能，可以找他上门弄。&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;联通的光猫都没有静态路由表的功能，换个光猫也没用，想多接有线只能用交换机。&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;维护管理员账户&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/my-home-network-2022/81680F6F-4272-41F3-9F34-0D397717D5DF_2.png&quot; alt=&quot;维护管理员账户&quot; title=&quot;维护管理员账户&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;后记&quot;&gt;后记&lt;/h2&gt;

&lt;p&gt;我的家庭网络比较简单，没有复杂的 NAS、路由拨号、内网穿透、家庭影音的复杂功能，有的只是简单：理解简单、操作简单、排查简单，最重要的，让家人使用起来简单。&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Sep 2022 23:56:02 +0800</pubDate>
        <link>https://www.xheldon.cn/tech/my-home-network-2022.html</link>
        <guid isPermaLink="true">https://www.xheldon.cn/tech/my-home-network-2022.html</guid>
        
        <category>技术</category>
        
        <category>网络</category>
        
        <category>拓扑</category>
        
        <category>R4S</category>
        
        <category>软路由</category>
        
        <category>折腾</category>
        
        <category>旁路由</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>「译」官方指南系列：JavaScript 调试指南（一）</title>
        <description>&lt;p&gt;希望通过这篇全面的 Chrome DevTools debugging 功能介绍，能让你的 debugging 过程更上一层楼。&lt;/p&gt;

&lt;p&gt;首先你可能需要先在 &lt;a href=&quot;https://developer.chrome.com/docs/devtools/javascript/&quot;&gt;这里&lt;/a&gt; （英文，待译）学习基本的 debugging 技巧。&lt;/p&gt;

&lt;h2 id=&quot;用断点暂停代码&quot;&gt;用断点暂停代码&lt;/h2&gt;

&lt;p&gt;通过设置一个断点，可以让代码在执行途中暂停。&lt;/p&gt;

&lt;p&gt;查看 &lt;a href=&quot;https://developer.chrome.com/docs/devtools/javascript/breakpoints/&quot;&gt;这里&lt;/a&gt; （英文，待译）来学习如何设置一个断点。&lt;/p&gt;

&lt;h3 id=&quot;在鼠标悬浮的时候查看类函数属性&quot;&gt;在鼠标悬浮的时候查看类/函数属性&lt;/h3&gt;

&lt;p&gt;当代码执行暂停的时候，将鼠标悬浮在一个类或者函数名上的时候可以预览它的属性。&lt;/p&gt;

&lt;p caption=&quot;1&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/EA456FA6-9331-41E3-96DC-3FCCFFA82C2E_2.png&quot; alt=&quot;1&quot; title=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;逐步运行代码&quot;&gt;逐步运行代码&lt;/h2&gt;

&lt;p&gt;你的代码暂停后，你就可以一次只运行一行代码，以搞清楚代码的调用栈以及相关的属性值。&lt;/p&gt;

&lt;h3 id=&quot;跳过step-over当前代码行&quot;&gt;跳过（Step over）当前代码行&lt;/h3&gt;

&lt;p&gt;当你的断点暂停在一个与你当前调查的问题无关的代码行，且该代码行包含一个函数的时候，你可以点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Step Over&lt;/code&gt; 来不进入该函数以继续执行代码。&lt;/p&gt;

&lt;p caption=&quot;step_over&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/63AE5442-D0AD-46C5-8DB0-36452E2842D2_2.png&quot; alt=&quot;step_over&quot; title=&quot;step_over&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图一👆🏻，上图中蓝色方框中 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Step Over&lt;/code&gt; 的含义解释：&lt;/p&gt;

&lt;p&gt;举个例子，假设你正在 debugging 下面的代码：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;updateHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getDay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// A&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;updateName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// D&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// B&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// C&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;此时你的断点停在了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; 的位置。通过点击 &lt;strong&gt;Step over&lt;/strong&gt; ，Devtools 将会执行你「Step over」的位置中的所有代码，在上述示例中「Step over」的是 A 位置的 getName 函数中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;B&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt; 的位置，于是 Devtools 会将代码停在 D 的位置。&lt;/p&gt;

&lt;h3 id=&quot;进入step-into当前代码行&quot;&gt;进入（Step into）当前代码行&lt;/h3&gt;

&lt;p&gt;如果断点停在一个跟你要调查的问题有关系的地方，而且这个地方包含一个函数调用的时候，点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Step into&lt;/code&gt; ，可以更进一步的检查这个函数。&lt;/p&gt;

&lt;p caption=&quot;step_into&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/0B7F9CB7-7EA3-44A2-8808-8E23F9E0D786_2.png&quot; alt=&quot;step_into&quot; title=&quot;step_into&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图二👆🏻，上图中蓝色方框中 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Step into&lt;/code&gt; 的含义解释：&lt;/p&gt;

&lt;p&gt;举个例子，假设你正在 debugging 下面的代码：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;updateHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getDay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// A&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;updateName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// B&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;你的断点正停在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; 的位置，此时点击 &lt;strong&gt;Step into&lt;/strong&gt; ，Devtools 将会执行这行代码，然后停在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;B&lt;/code&gt; 的位置。&lt;/p&gt;

&lt;h3 id=&quot;跳出step-out当前代码行&quot;&gt;跳出（Step out）当前代码行&lt;/h3&gt;

&lt;p&gt;当断点停在一个与你正在调查的问题不相关的函数内部的时候，你可以点击 &lt;strong&gt;Step out&lt;/strong&gt; 来执行该函数中剩余的代码。&lt;/p&gt;

&lt;p caption=&quot;step_out&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/6E97FB74-E73D-4189-9A21-3771A1DF27AF_2.png&quot; alt=&quot;step_out&quot; title=&quot;step_out&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图三👆🏻，上图中蓝色方框中 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Step out&lt;/code&gt; 的含义解释：&lt;/p&gt;

&lt;p&gt;举个例子，假设你正在 debugging 下面的代码：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;updateHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getDay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;updateName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// C&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// A&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// B&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;你的断点正停在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; 的位置，此时点击 &lt;strong&gt;Step out&lt;/strong&gt; ，DevTools 将会把 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getName()&lt;/code&gt; 函数中的剩余代码执行完，也就是 B 位置的代码，然后断点停在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt; 的位置上。&lt;/p&gt;

&lt;h3 id=&quot;继续运行代码到指定行&quot;&gt;继续运行代码到指定行&lt;/h3&gt;

&lt;p&gt;当 debugging 一个很长函数的时候，函数中会有很多与你正在调查的问题不相关的代码。&lt;/p&gt;

&lt;p&gt;你可以选择一步一步的执行这些无关的行，但是这个过程会很枯燥。你也可以选择在一个想断点的代码行处设置一个断点，然后按下 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Resume Script Execution&lt;/code&gt; （恢复脚本执行），不过除此之外，还有一个更快的方式。&lt;/p&gt;

&lt;p&gt;你可以在你想要断点的代码行上右键，然后选择 &lt;strong&gt;Continue to here&lt;/strong&gt; （继续执行到此处）。Devtools 将会恢复断点执行代码直到此处，然后停在这一行。&lt;/p&gt;

&lt;p caption=&quot;continue_to_here&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/01C96466-2B8C-4088-9E66-7408708B0401_2.png&quot; alt=&quot;continue_to_here&quot; title=&quot;continue_to_here&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图四👆🏻，选择 &lt;strong&gt;Continue to here&lt;/strong&gt; 。&lt;/p&gt;

&lt;h3 id=&quot;恢复脚本执行&quot;&gt;恢复脚本执行&lt;/h3&gt;

&lt;p&gt;你可以通过点击 &lt;strong&gt;Resume Script Execution&lt;/strong&gt; 来继续在你断点暂停的位置执行代码。Devtools 会将代码一直执行下去直到遇到下一个断点（如果有）。&lt;/p&gt;

&lt;p caption=&quot;resume_script_execution&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/E67463E2-9D01-48BB-A743-28A189DF68CD_2.png&quot; alt=&quot;resume_script_execution&quot; title=&quot;resume_script_execution&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图五👆🏻，&lt;strong&gt;Resume Script Execution&lt;/strong&gt; ，蓝框处。&lt;/p&gt;

&lt;h4 id=&quot;强制执行&quot;&gt;强制执行&lt;/h4&gt;

&lt;p&gt;可以通过长按 &lt;strong&gt;Resume Script Execution&lt;/strong&gt; ，然后选择 &lt;strong&gt;Force Script Execution&lt;/strong&gt; ，来忽略剩下的所有断点，直接执行全部代码。&lt;/p&gt;

&lt;p caption=&quot;force_script_execution&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/DAB9BD94-70F7-4464-8609-3016E8B40A44_2.png&quot; alt=&quot;force_script_execution&quot; title=&quot;force_script_execution&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图六👆🏻，选择 &lt;strong&gt;Force Script Execution&lt;/strong&gt; 。&lt;/p&gt;

&lt;h3 id=&quot;改变当前线程的上下文&quot;&gt;改变当前线程的上下文&lt;/h3&gt;

&lt;p&gt;当 debugging 设计到 Web Worker 或者 Service Worker 的时候，可以通过点击出现在 &lt;strong&gt;Threads&lt;/strong&gt; 栏中的上下文列表项，来转换上下文。蓝色箭头表示当前选择的上下文。&lt;/p&gt;

&lt;p caption=&quot;change_threads_context&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/1474933D-3F44-4D93-9909-FF4245545704_2.png&quot; alt=&quot;change_threads_context&quot; title=&quot;change_threads_context&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图七👆🏻，&lt;strong&gt;Threads&lt;/strong&gt; （线程）栏，蓝色框的位置。&lt;/p&gt;

&lt;p&gt;举个例子，假设有这么个场景，你的断点同时存在于你的主脚本和你的 service worker 脚本中。你想要查看 service worker 中的本地变量和全局变量，但是 &lt;strong&gt;Source&lt;/strong&gt; 栏当前正显示的是你的主脚本的上下文。此时你就可以通过点击在 &lt;strong&gt;Threads&lt;/strong&gt; 栏中的 service worker 入口来切换上下文以查看你想了解的变量了。&lt;/p&gt;

&lt;h2 id=&quot;查看和编辑局部闭包以及全局作用域中的变量属性&quot;&gt;查看和编辑局部、闭包以及全局作用域中的变量/属性&lt;/h2&gt;

&lt;p&gt;当暂停在某一行的时候，使用 Scope 栏来查看和编辑位于局部、闭包和全局变量。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;双击属性值以修改之。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;非可枚举的属性会以灰色突出显示。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;查看和修改变量&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/40A93D0F-ACA8-4128-A695-E502565253AD_2.png&quot; alt=&quot;查看和修改变量&quot; title=&quot;查看和修改变量&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图八👆🏻，&lt;strong&gt;Scope&lt;/strong&gt; （作用域）栏，蓝色框的位置。&lt;/p&gt;

&lt;h2 id=&quot;查看当前调用栈&quot;&gt;查看当前调用栈&lt;/h2&gt;

&lt;p&gt;当暂停在某一行的时候，使用 &lt;strong&gt;Call Stack&lt;/strong&gt; 栏来查看从代码执行一直到你当前暂停点以来的函数调用栈。&lt;/p&gt;

&lt;p&gt;如果你的代码中有异步代码，可以将 &lt;strong&gt;Async&lt;/strong&gt; 复选框勾选上，来启用异步函数调用栈。&lt;/p&gt;

&lt;p&gt;点击其中的一个条目，来跳转到该条目所表示的函数的调用处。蓝色箭头图标表示当前正在高亮的函数。&lt;/p&gt;

&lt;p caption=&quot;查看函数调用栈&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/1168318B-1CFA-493D-9AE6-2CF79930C58C_2.png&quot; alt=&quot;查看函数调用栈&quot; title=&quot;查看函数调用栈&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图九👆🏻，&lt;strong&gt;Call Stack&lt;/strong&gt; （调用栈）栏，蓝色框的位置。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意：如果代码没有暂停在某一行，那 Call Stack 栏是空的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;重新执行堆栈中的函数&quot;&gt;重新执行堆栈中的函数&lt;/h3&gt;

&lt;p&gt;有时候想观察某一个函数的运行情况，但是又不想重新运行整个 debugging 流程，你可以在断点暂停在这个函数内部的时候重新只单独执行这个函数，换句话说，你可以在调用栈中重新放入该函数的调用上下文。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意：你可以重头执行在 Call Stack （调用栈）中的任何函数，除了 WebAssembly、async、和 generator 函数。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;为了重新执行一个函数：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;使用断点暂停函数，&lt;strong&gt;Call Stack&lt;/strong&gt; 栏会记录函数的调用顺序。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在 &lt;strong&gt;Call Stack&lt;/strong&gt; 栏，右键一个函数，然后在出现的菜单中选择 Restart frame（重头执行函数）。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;重新执行断点所在的函数&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/DFF3FAC8-B00F-415A-A581-50A299F1884D_2.png&quot; alt=&quot;重新执行断点所在的函数&quot; title=&quot;重新执行断点所在的函数&quot; /&gt;&lt;/p&gt;

&lt;p&gt;为了理解 Restart frame 如何执行，我们假设有以下代码：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;debugger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foo&lt;/code&gt; 函数接受 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt; 作为参数，然后通过 log 打印到控制台，然后调用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bar()&lt;/code&gt; 函数。相应的，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bar&lt;/code&gt; 函数会将这个值自增1。&lt;/p&gt;

&lt;p&gt;尝试以下面的方式重头执行这两个函数：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;复制上面的代码到一个 &lt;a href=&quot;https://developer.chrome.com/docs/devtools/javascript/snippets/#createsources&quot;&gt;snippet&lt;/a&gt; （未翻译）中，然后 &lt;a href=&quot;https://developer.chrome.com/docs/devtools/javascript/snippets/#runsources&quot;&gt;运行&lt;/a&gt; （未翻译）它。断点会停在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;debugger&lt;/code&gt; 的所在的 &lt;a href=&quot;https://developer.chrome.com/docs/devtools/javascript/breakpoints/#debugger&quot;&gt;代码行&lt;/a&gt;。&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;⚠️ 注意：当代码执行暂停的时候，不要在控制台执行当前调用栈中的函数，因为这可能会引起意外的错误。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;你会注意到当前的 debugger 会在其所在的函数的函数声明的右侧显示当前值：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value = 1&lt;/code&gt; 。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;注意函数声明处右侧的值&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/9111BA1D-AA80-4C2F-B54E-123FC66A5C17_2.png&quot; alt=&quot;注意函数声明处右侧的值&quot; title=&quot;注意函数声明处右侧的值&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;重头执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bar()&lt;/code&gt; 函数。&lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;重头执行bar&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/036AAE1B-CA41-4627-A9D6-A4F7E6302C0C_2.png&quot; alt=&quot;重头执行bar&quot; title=&quot;重头执行bar&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;按 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;F9&lt;/code&gt; ，然后代码可以经过值自增的那一行，然后再次断到 debugger 处。&lt;/p&gt;

    &lt;p&gt;注意看，值变成了 2： &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value = 2&lt;/code&gt; 。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;重头执行debugger&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/09D36505-821B-4392-8DD3-BDE9D05F0210_2.png&quot; alt=&quot;重头执行debugger&quot; title=&quot;重头执行debugger&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;除此之外，你还可以在 Scope 栏，双击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value&lt;/code&gt; 值来编辑它将其设置成想要的值。&lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;双击编辑值&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/9481CF99-8735-43A4-8A57-D2F953C289BC_2.png&quot; alt=&quot;双击编辑值&quot; title=&quot;双击编辑值&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;尝试重新执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bar()&lt;/code&gt; 函数多次，会发现值会一直增加。&lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;多次重复执行后值会一直增加&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/AEE7EEA3-2150-431B-980C-6FCF03527DC7_2.png&quot; alt=&quot;多次重复执行后值会一直增加&quot; title=&quot;多次重复执行后值会一直增加&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;💡 震惊！为什么 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value&lt;/code&gt; 不会重置成 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt; ？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;函数重头执行的时候不会重置参数。换句话说，重头执行不会恢复该函数被调用时候的初始状态。因此，它只是简单的在调用栈中移动当前调用的指针到函数的开始位置。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;因此，当前的参数值 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value&lt;/code&gt; 会在内存中一直随着相同函数的重复执行而一直存在。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;现在，在 &lt;strong&gt;Call Stack&lt;/strong&gt; 中重头执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foo()&lt;/code&gt; 函数。&lt;/li&gt;
&lt;/ul&gt;

&lt;p caption=&quot;重头执行foo函数&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/11D4B549-3006-4564-B92D-4D1727913D74_2.png&quot; alt=&quot;重头执行foo函数&quot; title=&quot;重头执行foo函数&quot; /&gt;&lt;/p&gt;

&lt;p&gt;注意看，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value&lt;/code&gt; 重新变成了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt; 。&lt;/p&gt;

&lt;p caption=&quot;value重新变为0&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/9F706F35-0041-41E3-BB4A-70A5BFFEFE06_2.png&quot; alt=&quot;value重新变为0&quot; title=&quot;value重新变为0&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;💡 再次震惊！为什么 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value&lt;/code&gt; 这次被重置为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt; 了？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;很简单（此处意译了）在 JavaScript 中，参数是按值传递的，因为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;value&lt;/code&gt; 是原始值，因此在函数内修改它的值不会影响到函数外它的值。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;复制调用栈执行路径&quot;&gt;复制调用栈执行路径&lt;/h3&gt;

&lt;p&gt;在 &lt;strong&gt;Call Stack&lt;/strong&gt; 栏的任意位置右键，然后选择 &lt;strong&gt;Copy Stack Trace&lt;/strong&gt;（复制栈追踪），你会将当前调用栈复制到粘贴板。&lt;/p&gt;

&lt;p caption=&quot;复制调用栈&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/7EF33B00-5F90-4D0D-8979-B18ED3CD1527_2.png&quot; alt=&quot;复制调用栈&quot; title=&quot;复制调用栈&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图十👆🏻，选择 &lt;strong&gt;Copy Stack Trace&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;复制的内容大致会是这个样子：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-other&quot;&gt;getNumber1 (get-started.js:35)
inputsAreEmpty (get-started.js:22)
onClick (get-started.js:15)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;忽略某个脚本或者满足某种条件的脚本&quot;&gt;忽略某个脚本或者满足某种条件的脚本&lt;/h2&gt;

&lt;p&gt;当 debugging 的时候，忽略某个脚本以跳过它。你通常会在当该脚本的函数比较复杂难懂而且跟你当前 debugging 的内容无关的时候选择忽略之。&lt;/p&gt;

&lt;p&gt;例如，假设你正在 debugging 如下代码：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;prepare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doFancyStuff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// A&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; 是一个你信任的第三方库。如果你十分确定你所调查的问题跟这个第三方库没有关系，那忽略它就是一个明智决定。&lt;/p&gt;

&lt;h3 id=&quot;从-source-编辑器栏中忽略某个脚本&quot;&gt;从 Source 编辑器栏中忽略某个脚本&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;打开文件&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;右键任何位置&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;选择 &lt;strong&gt;Add script to ignore list&lt;/strong&gt;（将脚本添加到忽略列表）。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;忽略脚本&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/39DA9D92-C270-4705-8920-7BC248703936_2.png&quot; alt=&quot;忽略脚本&quot; title=&quot;忽略脚本&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图十一👆🏻，从编辑器栏中忽略一个脚本。&lt;/p&gt;

&lt;h3 id=&quot;从-call-stack-调用栈栏忽略某个脚本&quot;&gt;从 Call Stack （调用栈）栏忽略某个脚本&lt;/h3&gt;

&lt;p&gt;如果想从调用栈中忽略某个脚本，你需要：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在调用栈中的某个函数中右键。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;选择 &lt;strong&gt;Add script to ignore list&lt;/strong&gt;。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;从调用栈中忽略脚本&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/73837AF8-CB34-4B72-AE5C-1B266E15B8EB_2.png&quot; alt=&quot;从调用栈中忽略脚本&quot; title=&quot;从调用栈中忽略脚本&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图十二👆🏻，从 Call Stack（调用栈）中忽略某个脚本。&lt;/p&gt;

&lt;h3 id=&quot;从-settings设置中忽略某个脚本&quot;&gt;从 Settings（设置）中忽略某个脚本&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;译者注：此处的设置为 Devtools 的设置，不是浏览器的设置。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如果想从设置中忽略某一个脚本或者满足某种条件的脚本，你需要：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;打开设置：&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;点击 &lt;strong&gt;Ignore List&lt;/strong&gt; Tab。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;点击 &lt;strong&gt;Add pattern&lt;/strong&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;输入脚本名或者正则来匹配需要忽略的脚本名。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;点击 &lt;strong&gt;Add&lt;/strong&gt;。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;devoools设置界面&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/54F9290D-CE6A-4630-9387-34DE7EA6266F_2.png&quot; alt=&quot;devoools设置界面&quot; title=&quot;devoools设置界面&quot; /&gt;&lt;/p&gt;

&lt;p caption=&quot;devtools忽略脚本&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/65A0FE7C-D5BB-4329-B978-1C7184F6C1B6_2.png&quot; alt=&quot;devtools忽略脚本&quot; title=&quot;devtools忽略脚本&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图十三👆🏻，从 Setting 中忽略脚本。&lt;/p&gt;

&lt;h2 id=&quot;从任何页面运行-debug-代码-snippets片段&quot;&gt;从任何页面运行 debug 代码 Snippets（片段）&lt;/h2&gt;

&lt;p&gt;如果你发现你正在 Console 中反复运行一些 deubg 代码，那么可以考虑一下 Snippets。Snippets 是一种你可以存储在 Devtools 中并执行的脚本。&lt;/p&gt;

&lt;p&gt;参见 &lt;a href=&quot;https://developer.chrome.com/docs/devtools/javascript/snippets/&quot;&gt;https://developer.chrome.com/docs/devtools/javascript/snippets/&lt;/a&gt; （未翻译）来了解更多。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;译者注：Snippets 在执行的时候是携带当前上下文的，比如你在 debug 的时候暂停了，然后执行 Snippets 代码，此时的 Snippets 代码拥有当前上下文的变量访问权限。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;watch监听自定义的-javascript-表达式的值&quot;&gt;Watch（监听）自定义的 JavaScript 表达式的值&lt;/h2&gt;

&lt;p&gt;使用 Watch 栏来监听自定义表达式的值。你可以监听任何有效的 JavaScript 表达式。&lt;/p&gt;

&lt;p caption=&quot;监听JavaScript表达式&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/02D81797-A39F-4837-B402-648AA39E5C21_2.png&quot; alt=&quot;监听JavaScript表达式&quot; title=&quot;监听JavaScript表达式&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图十四👆🏻，蓝色圈住的即是 Watch 栏。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;点击 Add Expression（添加表达式）来新建一个监视表达式。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;点击 Refresh（刷新）来刷新所有已经存在的表达式。当执行代码的时候，值会自动更新。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;鼠标悬浮在一个表达式上，然后点 Delete Expression（删除表达式），来删除它。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;格式化压缩后的代码以可读&quot;&gt;格式化压缩后的代码以可读&lt;/h2&gt;

&lt;p&gt;点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Fromat {}&lt;/code&gt;  来让一个压缩后的代码变成人类可读的格式。&lt;/p&gt;

&lt;p caption=&quot;格式化压缩后的文件&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/572D9BCF-DC18-460E-8B23-62398391ED92_2.png&quot; alt=&quot;格式化压缩后的文件&quot; title=&quot;格式化压缩后的文件&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;编辑一个脚本&quot;&gt;编辑一个脚本&lt;/h2&gt;

&lt;p&gt;当修复一个 bug 的时候，你经常会需要测试你的 JavaScript 代码的修改效果。你不要在一个外部的编辑器中编辑 JavaScript 代码后，再回到当前页面刷新后查看效果。你可以直接在 Devtools 中编辑你的 JavaScript 代码。&lt;/p&gt;

&lt;p&gt;如果想编辑脚本，你需要：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在 Source 栏中打开你想要编辑的文件（会出现在 Editor 栏中）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在 Editor 栏中做出修改。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;按 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmmand + S&lt;/code&gt; （Mac）或者 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + S&lt;/code&gt; （Windows，Linux）来保存修噶。Devtools 将会以打补丁的形式将整个 js 文件加入到 Chrome 的 JavaScript 引擎中去。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;直接编辑js文件&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/6DC1E149-D2D2-4005-A2B9-451CF0456112_2.png&quot; alt=&quot;直接编辑js文件&quot; title=&quot;直接编辑js文件&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上图中蓝框圈出来的就是编辑器栏。&lt;/p&gt;

&lt;h2 id=&quot;实时编辑一个暂停的函数&quot;&gt;实时编辑一个暂停的函数&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意：此功能自 Chrome 105 版本往上才可用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;当代码暂停的时候，你可以编辑当前函数然后实时应用修改，不过有以下限制：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;你只能编辑在 &lt;strong&gt;Call Stack&lt;/strong&gt; 最顶上的函数（也即当前断点所在的函数——译者注）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;调用栈中不能有对相同函数的递归调用（否则也相当于是修改了非当前调用栈的函数——译者注）。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;💡 实时编辑暂停函数的真相是…
当你应用一个修改的时候，debugger 工具自动重新执行（和前面的「重新执行堆栈中的函数」一样）。因此，对重新执行函数的限制与实时编辑暂停函数并生效的限制是一样的。你不能重头执行 WebAssembly、async以及generator（迭代器）函数。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如果想实时编辑一个函数，你需要：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;用断点暂停。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;编辑断点所在的正在暂停的函数。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;按下 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command/Control+S&lt;/code&gt;  来应用更改，debugger 将会自动重新执行该函数。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;继续执行&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;实时重新执行函数&quot;&gt;&lt;video controls=&quot;&quot; muted=&quot;&quot;&gt;&lt;source src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/37CA2680-5D00-477F-A1CF-161AD18F2A5E_2.mp4&quot; type=&quot;video/mp4&quot; /&gt;&lt;/video&gt;&lt;/p&gt;

&lt;p&gt;在这个示例中，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;addend1&lt;/code&gt; 和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;addend2&lt;/code&gt; 变量在起始的时候有一个不正确的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt; 类型。因此，字符串被错误的连接在一起而不是数字相加。为了修复此问题，在实时编辑的时候添加了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parseInt()&lt;/code&gt; 函数。&lt;/p&gt;

&lt;h2 id=&quot;搜索和替换在脚本中的文本&quot;&gt;搜索和替换在脚本中的文本&lt;/h2&gt;

&lt;p&gt;如果想要在脚本中搜索一段文本，你需要：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在代码源（Sources）-编辑器（Editor）栏中打开文件。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;按下 &lt;strong&gt;Command+F&lt;/strong&gt;（Mac）或者 &lt;strong&gt;Ctrl+F&lt;/strong&gt;（Windows、Linux）来打开内置的搜索栏。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在搜索栏中，输入你想要查询的字符串：&lt;/p&gt;

    &lt;p&gt;另外你还可以：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Aa&lt;/code&gt; 来匹配大小写，来让你的搜索大小写敏感。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.*&lt;/code&gt; 来使用正则匹配。&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;按下 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enter&lt;/code&gt; 键来执行搜索。可以按下 up/down 来跳转到下一个/上一个搜索结果。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;搜索字符&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/6D3D4E4D-22CD-4095-8773-1DFD4F3089A5_2.png&quot; alt=&quot;搜索字符&quot; title=&quot;搜索字符&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果想替换你搜索到的结果，你需要：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;打开搜索栏，点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A→B&lt;/code&gt; （手敲的不形象，看下面的图）即替换按钮来替换文本。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;输入想要替换的文本，然后点击 &lt;strong&gt;Replce&lt;/strong&gt; 或者 &lt;strong&gt;Replace all&lt;/strong&gt; 即可。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p caption=&quot;按下替换按钮&quot;&gt;&lt;img src=&quot;https://static.xheldon.cn/img/in-post/2022/javascript-debugger-reference-series01/4CFF9F79-2118-4DA6-AF12-1440A520C6F8_2.png&quot; alt=&quot;按下替换按钮&quot; title=&quot;按下替换按钮&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;禁用-javascript&quot;&gt;禁用 JavaScript&lt;/h2&gt;

&lt;p&gt;具体参见：&lt;a href=&quot;https://developer.chrome.com/docs/devtools/javascript/disable/&quot;&gt;Disable JavaScript With Chrome DevTools&lt;/a&gt;（未翻译）。&lt;/p&gt;

</description>
        <pubDate>Tue, 13 Sep 2022 09:29:30 +0800</pubDate>
        <link>https://www.xheldon.cn/tech/javascript-debugger-reference-series01.html</link>
        <guid isPermaLink="true">https://www.xheldon.cn/tech/javascript-debugger-reference-series01.html</guid>
        
        <category>技术</category>
        
        <category>调试</category>
        
        <category>技巧</category>
        
        <category>JavaScript</category>
        
        
        <category>tech</category>
        
      </item>
    
  </channel>
</rss>
